/*
###############################################################
#  Generated by:      Cadence Innovus 17.11-s080_1
#  OS:                Linux x86_64(Host ID cad40)
#  Generated on:      Sat Dec  3 13:47:00 2022
#  Design:            core
#  Command:           saveNetlist core_pr.v
###############################################################
*/
module core_DW01_add_30_DW01_add_33 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:0] A;
   wire [11:2] carry;

   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;

   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n2),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   AND2X2 U1 (.A(B[15]),
	.B(n4),
	.Y(n1));
   AND2X2 U2 (.A(B[0]),
	.B(A[0]),
	.Y(n2));
   AND2X2 U3 (.A(B[12]),
	.B(n5),
	.Y(n3));
   AND2X2 U4 (.A(B[14]),
	.B(n6),
	.Y(n4));
   AND2X2 U5 (.A(B[11]),
	.B(carry[11]),
	.Y(n5));
   AND2X2 U6 (.A(B[13]),
	.B(n3),
	.Y(n6));
   XOR2X1 U7 (.A(B[12]),
	.B(n5),
	.Y(SUM[12]));
   XOR2X1 U8 (.A(B[13]),
	.B(n3),
	.Y(SUM[13]));
   XOR2X1 U9 (.A(B[14]),
	.B(n6),
	.Y(SUM[14]));
   XOR2X1 U10 (.A(B[15]),
	.B(n4),
	.Y(SUM[15]));
   XOR2X1 U11 (.A(B[16]),
	.B(n1),
	.Y(SUM[16]));
   XOR2X1 U12 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
   XOR2X1 U13 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
endmodule

module core_DW01_add_32_DW01_add_35 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_33_DW01_add_36 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_34_DW01_add_37 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_35_DW01_add_38 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:1] A;
   wire [11:3] carry;

   assign SUM[0] = B[0] ;
   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;

   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(n1),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   AND2X2 U1 (.A(B[1]),
	.B(A[1]),
	.Y(n1));
   XOR2X1 U2 (.A(B[16]),
	.B(n6),
	.Y(SUM[16]));
   XOR2X1 U3 (.A(B[15]),
	.B(n3),
	.Y(SUM[15]));
   AND2X2 U4 (.A(B[12]),
	.B(n4),
	.Y(n2));
   AND2X2 U5 (.A(B[14]),
	.B(n5),
	.Y(n3));
   AND2X2 U6 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U7 (.A(B[13]),
	.B(n2),
	.Y(n5));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n2),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n5),
	.Y(SUM[14]));
   XOR2X1 U12 (.A(B[1]),
	.B(A[1]),
	.Y(SUM[1]));
   AND2X2 U13 (.A(B[15]),
	.B(n3),
	.Y(n6));
endmodule

module core_DW01_add_36_DW01_add_39 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_37_DW01_add_40 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_4_DW01_add_7 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:0] A;
   wire [11:2] carry;

   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;

   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n2),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   AND2X2 U1 (.A(B[15]),
	.B(n4),
	.Y(n1));
   AND2X2 U2 (.A(B[0]),
	.B(A[0]),
	.Y(n2));
   AND2X2 U3 (.A(B[12]),
	.B(n5),
	.Y(n3));
   AND2X2 U4 (.A(B[14]),
	.B(n6),
	.Y(n4));
   AND2X2 U5 (.A(B[11]),
	.B(carry[11]),
	.Y(n5));
   AND2X2 U6 (.A(B[13]),
	.B(n3),
	.Y(n6));
   XOR2X1 U7 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n5),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n3),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n6),
	.Y(SUM[14]));
   XOR2X1 U12 (.A(B[15]),
	.B(n4),
	.Y(SUM[15]));
   XOR2X1 U13 (.A(B[16]),
	.B(n1),
	.Y(SUM[16]));
endmodule

module core_DW01_add_6_DW01_add_9 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_7_DW01_add_10 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_8_DW01_add_11 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_9_DW01_add_12 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:1] A;
   wire [11:3] carry;

   assign SUM[0] = B[0] ;
   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;

   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(n1),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   AND2X2 U1 (.A(B[1]),
	.B(A[1]),
	.Y(n1));
   XOR2X1 U2 (.A(B[16]),
	.B(n6),
	.Y(SUM[16]));
   XOR2X1 U3 (.A(B[15]),
	.B(n3),
	.Y(SUM[15]));
   AND2X2 U4 (.A(B[12]),
	.B(n4),
	.Y(n2));
   AND2X2 U5 (.A(B[14]),
	.B(n5),
	.Y(n3));
   AND2X2 U6 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U7 (.A(B[13]),
	.B(n2),
	.Y(n5));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n2),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n5),
	.Y(SUM[14]));
   AND2X2 U12 (.A(B[15]),
	.B(n3),
	.Y(n6));
   XOR2X1 U13 (.A(B[1]),
	.B(A[1]),
	.Y(SUM[1]));
endmodule

module core_DW01_add_10_DW01_add_13 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_11_DW01_add_14 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2XL U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_12_DW01_add_15 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_13_DW01_add_16 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:0] A;
   wire [11:2] carry;

   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;

   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n2),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   AND2X2 U1 (.A(B[15]),
	.B(n6),
	.Y(n1));
   AND2X2 U2 (.A(B[0]),
	.B(A[0]),
	.Y(n2));
   AND2X2 U3 (.A(B[13]),
	.B(n5),
	.Y(n3));
   AND2X2 U4 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U5 (.A(B[12]),
	.B(n4),
	.Y(n5));
   AND2X2 U6 (.A(B[14]),
	.B(n3),
	.Y(n6));
   XOR2X1 U7 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U8 (.A(B[13]),
	.B(n5),
	.Y(SUM[13]));
   XOR2X1 U9 (.A(B[14]),
	.B(n3),
	.Y(SUM[14]));
   XOR2X1 U10 (.A(B[15]),
	.B(n6),
	.Y(SUM[15]));
   XOR2X1 U11 (.A(B[16]),
	.B(n1),
	.Y(SUM[16]));
   XOR2X1 U12 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
   XOR2X1 U13 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
endmodule

module core_DW01_add_15_DW01_add_18 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_16_DW01_add_19 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_17_DW01_add_20 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_18_DW01_add_21 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:1] A;
   wire [11:3] carry;

   assign SUM[0] = B[0] ;
   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;

   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(n1),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   AND2X2 U1 (.A(B[1]),
	.B(A[1]),
	.Y(n1));
   XOR2X1 U2 (.A(B[16]),
	.B(n6),
	.Y(SUM[16]));
   XOR2X1 U3 (.A(B[15]),
	.B(n3),
	.Y(SUM[15]));
   AND2X2 U4 (.A(B[12]),
	.B(n4),
	.Y(n2));
   AND2X2 U5 (.A(B[14]),
	.B(n5),
	.Y(n3));
   AND2X2 U6 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U7 (.A(B[13]),
	.B(n2),
	.Y(n5));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n2),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n5),
	.Y(SUM[14]));
   AND2X2 U12 (.A(B[15]),
	.B(n3),
	.Y(n6));
   XOR2X1 U13 (.A(B[1]),
	.B(A[1]),
	.Y(SUM[1]));
endmodule

module core_DW01_add_19_DW01_add_22 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_20_DW01_add_23 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2XL U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_21_DW01_add_24 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_22_DW01_add_25 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:0] A;
   wire [11:2] carry;

   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;

   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n2),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   AND2X2 U1 (.A(B[15]),
	.B(n6),
	.Y(n1));
   AND2X2 U2 (.A(B[0]),
	.B(A[0]),
	.Y(n2));
   AND2X2 U3 (.A(B[13]),
	.B(n5),
	.Y(n3));
   AND2X2 U4 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U5 (.A(B[12]),
	.B(n4),
	.Y(n5));
   AND2X2 U6 (.A(B[14]),
	.B(n3),
	.Y(n6));
   XOR2X1 U7 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n5),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n3),
	.Y(SUM[14]));
   XOR2X1 U12 (.A(B[15]),
	.B(n6),
	.Y(SUM[15]));
   XOR2X1 U13 (.A(B[16]),
	.B(n1),
	.Y(SUM[16]));
endmodule

module core_DW01_add_24_DW01_add_27 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_25_DW01_add_28 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_26_DW01_add_29 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_27_DW01_add_30 (
	B, 
	SUM, 
	\A[10] , 
	\A[9] , 
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] );
   input [16:0] B;
   output [16:0] SUM;
   input \A[10] ;
   input \A[9] ;
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [10:1] A;
   wire [11:3] carry;

   assign SUM[0] = B[0] ;
   assign A[10] = \A[10]  ;
   assign A[9] = \A[9]  ;
   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;

   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(n1),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_10 (.A(A[10]),
	.B(B[10]),
	.CI(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_9 (.A(A[9]),
	.B(B[9]),
	.CI(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   AND2X2 U1 (.A(B[1]),
	.B(A[1]),
	.Y(n1));
   XOR2X1 U2 (.A(B[16]),
	.B(n6),
	.Y(SUM[16]));
   XOR2X1 U3 (.A(B[15]),
	.B(n3),
	.Y(SUM[15]));
   AND2X2 U4 (.A(B[12]),
	.B(n4),
	.Y(n2));
   AND2X2 U5 (.A(B[14]),
	.B(n5),
	.Y(n3));
   AND2X2 U6 (.A(B[11]),
	.B(carry[11]),
	.Y(n4));
   AND2X2 U7 (.A(B[13]),
	.B(n2),
	.Y(n5));
   XOR2X1 U8 (.A(B[11]),
	.B(carry[11]),
	.Y(SUM[11]));
   XOR2X1 U9 (.A(B[12]),
	.B(n4),
	.Y(SUM[12]));
   XOR2X1 U10 (.A(B[13]),
	.B(n2),
	.Y(SUM[13]));
   XOR2X1 U11 (.A(B[14]),
	.B(n5),
	.Y(SUM[14]));
   AND2X2 U12 (.A(B[15]),
	.B(n3),
	.Y(n6));
   XOR2X1 U13 (.A(B[1]),
	.B(A[1]),
	.Y(SUM[1]));
endmodule

module core_DW01_add_28_DW01_add_31 (
	\A[8] , 
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[8] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[8] ;
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[8] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire carry_8_;
   wire carry_7_;
   wire carry_6_;
   wire carry_5_;
   wire carry_4_;
   wire carry_3_;
   wire carry_2_;
   wire n1;
   wire [8:0] A;
   wire [8:0] B;
   wire [9:0] SUM;

   assign A[8] = \A[8]  ;
   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[8] = \B[8]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_8 (.A(A[8]),
	.B(B[8]),
	.CI(carry_8_),
	.S(SUM[8]),
	.CO(SUM[9]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry_6_),
	.S(SUM[6]),
	.CO(carry_7_));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry_5_),
	.S(SUM[5]),
	.CO(carry_6_));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry_4_),
	.S(SUM[4]),
	.CO(carry_5_));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry_3_),
	.S(SUM[3]),
	.CO(carry_4_));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry_2_),
	.S(SUM[2]),
	.CO(carry_3_));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry_2_));
   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry_7_),
	.S(SUM[7]),
	.CO(carry_8_));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_29_DW01_add_32 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_inc_7_DW01_inc_9 (
	A, 
	SUM);
   input [10:0] A;
   output [10:0] SUM;

   // Internal wires
   wire [10:2] carry;

   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   XOR2X1 U1 (.A(carry[10]),
	.B(A[10]),
	.Y(SUM[10]));
   CLKINVX1 U2 (.A(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_add_0_DW01_add_3 (
	\A[7] , 
	\A[6] , 
	\A[5] , 
	\A[4] , 
	\A[3] , 
	\A[2] , 
	\A[1] , 
	\A[0] , 
	\B[7] , 
	\B[6] , 
	\B[5] , 
	\B[4] , 
	\B[3] , 
	\B[2] , 
	\B[1] , 
	\B[0] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] , 
	\SUM[0] );
   input \A[7] ;
   input \A[6] ;
   input \A[5] ;
   input \A[4] ;
   input \A[3] ;
   input \A[2] ;
   input \A[1] ;
   input \A[0] ;
   input \B[7] ;
   input \B[6] ;
   input \B[5] ;
   input \B[4] ;
   input \B[3] ;
   input \B[2] ;
   input \B[1] ;
   input \B[0] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;
   output \SUM[0] ;

   // Internal wires
   wire n1;
   wire [7:0] A;
   wire [7:0] B;
   wire [8:0] SUM;
   wire [7:2] carry;

   assign A[7] = \A[7]  ;
   assign A[6] = \A[6]  ;
   assign A[5] = \A[5]  ;
   assign A[4] = \A[4]  ;
   assign A[3] = \A[3]  ;
   assign A[2] = \A[2]  ;
   assign A[1] = \A[1]  ;
   assign A[0] = \A[0]  ;
   assign B[7] = \B[7]  ;
   assign B[6] = \B[6]  ;
   assign B[5] = \B[5]  ;
   assign B[4] = \B[4]  ;
   assign B[3] = \B[3]  ;
   assign B[2] = \B[2]  ;
   assign B[1] = \B[1]  ;
   assign B[0] = \B[0]  ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;
   assign \SUM[0]  = SUM[0] ;

   ADDFXL U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFXL U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDFXL U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFXL U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFXL U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFXL U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFXL U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   AND2X2 U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   XOR2X1 U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_inc_6_DW01_inc_8 (
	A, 
	SUM);
   input [10:0] A;
   output [10:0] SUM;

   // Internal wires
   wire [10:2] carry;

   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   XOR2X1 U1 (.A(carry[10]),
	.B(A[10]),
	.Y(SUM[10]));
   CLKINVX1 U2 (.A(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_inc_5_DW01_inc_7 (
	A, 
	SUM);
   input [7:0] A;
   output [7:0] SUM;

   // Internal wires
   wire [7:2] carry;

   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   XOR2X1 U1 (.A(carry[7]),
	.B(A[7]),
	.Y(SUM[7]));
   CLKINVX1 U2 (.A(A[0]),
	.Y(SUM[0]));
endmodule

module core_DW01_inc_3_DW01_inc_5 (
	A, 
	\SUM[13] , 
	\SUM[12] , 
	\SUM[11] , 
	\SUM[10] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] );
   input [13:0] A;
   output \SUM[13] ;
   output \SUM[12] ;
   output \SUM[11] ;
   output \SUM[10] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;

   // Internal wires
   wire [13:1] SUM;
   wire [13:2] carry;

   assign \SUM[13]  = SUM[13] ;
   assign \SUM[12]  = SUM[12] ;
   assign \SUM[11]  = SUM[11] ;
   assign \SUM[10]  = SUM[10] ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;

   ADDHXL U1_1_12 (.A(A[12]),
	.B(carry[12]),
	.S(SUM[12]),
	.CO(carry[13]));
   ADDHXL U1_1_11 (.A(A[11]),
	.B(carry[11]),
	.S(SUM[11]),
	.CO(carry[12]));
   ADDHXL U1_1_10 (.A(A[10]),
	.B(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   XOR2X1 U1 (.A(carry[13]),
	.B(A[13]),
	.Y(SUM[13]));
endmodule

module core_DW01_inc_2_DW01_inc_4 (
	A, 
	\SUM[13] , 
	\SUM[12] , 
	\SUM[11] , 
	\SUM[10] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] );
   input [13:0] A;
   output \SUM[13] ;
   output \SUM[12] ;
   output \SUM[11] ;
   output \SUM[10] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;

   // Internal wires
   wire [13:1] SUM;
   wire [13:2] carry;

   assign \SUM[13]  = SUM[13] ;
   assign \SUM[12]  = SUM[12] ;
   assign \SUM[11]  = SUM[11] ;
   assign \SUM[10]  = SUM[10] ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;

   ADDHXL U1_1_12 (.A(A[12]),
	.B(carry[12]),
	.S(SUM[12]),
	.CO(carry[13]));
   ADDHXL U1_1_11 (.A(A[11]),
	.B(carry[11]),
	.S(SUM[11]),
	.CO(carry[12]));
   ADDHXL U1_1_10 (.A(A[10]),
	.B(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   XOR2X1 U1 (.A(carry[13]),
	.B(A[13]),
	.Y(SUM[13]));
endmodule

module core_DW01_inc_1_DW01_inc_3 (
	A, 
	\SUM[13] , 
	\SUM[12] , 
	\SUM[11] , 
	\SUM[10] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] );
   input [13:0] A;
   output \SUM[13] ;
   output \SUM[12] ;
   output \SUM[11] ;
   output \SUM[10] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;

   // Internal wires
   wire [13:1] SUM;
   wire [13:2] carry;

   assign \SUM[13]  = SUM[13] ;
   assign \SUM[12]  = SUM[12] ;
   assign \SUM[11]  = SUM[11] ;
   assign \SUM[10]  = SUM[10] ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;

   ADDHXL U1_1_12 (.A(A[12]),
	.B(carry[12]),
	.S(SUM[12]),
	.CO(carry[13]));
   ADDHXL U1_1_11 (.A(A[11]),
	.B(carry[11]),
	.S(SUM[11]),
	.CO(carry[12]));
   ADDHXL U1_1_10 (.A(A[10]),
	.B(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   XOR2X1 U1 (.A(carry[13]),
	.B(A[13]),
	.Y(SUM[13]));
endmodule

module core_DW01_inc_0_DW01_inc_2 (
	A, 
	\SUM[13] , 
	\SUM[12] , 
	\SUM[11] , 
	\SUM[10] , 
	\SUM[9] , 
	\SUM[8] , 
	\SUM[7] , 
	\SUM[6] , 
	\SUM[5] , 
	\SUM[4] , 
	\SUM[3] , 
	\SUM[2] , 
	\SUM[1] );
   input [13:0] A;
   output \SUM[13] ;
   output \SUM[12] ;
   output \SUM[11] ;
   output \SUM[10] ;
   output \SUM[9] ;
   output \SUM[8] ;
   output \SUM[7] ;
   output \SUM[6] ;
   output \SUM[5] ;
   output \SUM[4] ;
   output \SUM[3] ;
   output \SUM[2] ;
   output \SUM[1] ;

   // Internal wires
   wire [13:1] SUM;
   wire [13:2] carry;

   assign \SUM[13]  = SUM[13] ;
   assign \SUM[12]  = SUM[12] ;
   assign \SUM[11]  = SUM[11] ;
   assign \SUM[10]  = SUM[10] ;
   assign \SUM[9]  = SUM[9] ;
   assign \SUM[8]  = SUM[8] ;
   assign \SUM[7]  = SUM[7] ;
   assign \SUM[6]  = SUM[6] ;
   assign \SUM[5]  = SUM[5] ;
   assign \SUM[4]  = SUM[4] ;
   assign \SUM[3]  = SUM[3] ;
   assign \SUM[2]  = SUM[2] ;
   assign \SUM[1]  = SUM[1] ;

   ADDHXL U1_1_12 (.A(A[12]),
	.B(carry[12]),
	.S(SUM[12]),
	.CO(carry[13]));
   ADDHXL U1_1_11 (.A(A[11]),
	.B(carry[11]),
	.S(SUM[11]),
	.CO(carry[12]));
   ADDHXL U1_1_10 (.A(A[10]),
	.B(carry[10]),
	.S(SUM[10]),
	.CO(carry[11]));
   ADDHXL U1_1_9 (.A(A[9]),
	.B(carry[9]),
	.S(SUM[9]),
	.CO(carry[10]));
   ADDHXL U1_1_8 (.A(A[8]),
	.B(carry[8]),
	.S(SUM[8]),
	.CO(carry[9]));
   ADDHXL U1_1_7 (.A(A[7]),
	.B(carry[7]),
	.S(SUM[7]),
	.CO(carry[8]));
   ADDHXL U1_1_6 (.A(A[6]),
	.B(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   ADDHXL U1_1_5 (.A(A[5]),
	.B(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDHXL U1_1_4 (.A(A[4]),
	.B(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDHXL U1_1_3 (.A(A[3]),
	.B(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDHXL U1_1_2 (.A(A[2]),
	.B(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDHXL U1_1_1 (.A(A[1]),
	.B(A[0]),
	.S(SUM[1]),
	.CO(carry[2]));
   XOR2X1 U1 (.A(carry[13]),
	.B(A[13]),
	.Y(SUM[13]));
endmodule

module core (
	i_clk, 
	i_rst_n, 
	i_op_valid, 
	i_op_mode, 
	o_op_ready, 
	i_in_valid, 
	i_in_data, 
	o_in_ready, 
	o_out_valid, 
	o_out_data);
   input i_clk;
   input i_rst_n;
   input i_op_valid;
   input [3:0] i_op_mode;
   output o_op_ready;
   input i_in_valid;
   input [7:0] i_in_data;
   output o_in_ready;
   output o_out_valid;
   output [12:0] o_out_data;

   // Internal wires
   wire LTIE_LTIELO_NET;
   wire LTIE_LTIEHI_NET;
   wire CTS_26;
   wire CTS_25;
   wire CTS_24;
   wire CTS_23;
   wire CTS_22;
   wire CTS_21;
   wire CTS_20;
   wire FE_OFN17_i_rst_n;
   wire FE_OFN16_n1190;
   wire FE_OFN15_n769;
   wire FE_OFN14_in_data_0;
   wire FE_OFN13_in_data_1;
   wire FE_OFN12_in_data_2;
   wire FE_OFN11_in_data_3;
   wire FE_OFN10_in_data_4;
   wire FE_OFN9_in_data_5;
   wire FE_OFN8_in_data_6;
   wire FE_OFN7_in_data_7;
   wire FE_OFN6_n1182;
   wire FE_OFN5_N541;
   wire FE_OFN4_i_rst_n;
   wire FE_OFN3_i_rst_n;
   wire FE_OFN2_i_rst_n;
   wire FE_OFN1_i_rst_n;
   wire FE_OFN0_i_rst_n;
   wire FE_DBTN3_N212;
   wire FE_DBTN2_N541;
   wire FE_DBTN1_n475;
   wire FE_DBTN0_n771;
   wire N212;
   wire N215;
   wire N219;
   wire N220;
   wire N221;
   wire N222;
   wire N305;
   wire N306;
   wire N307;
   wire N308;
   wire N316;
   wire N317;
   wire N318;
   wire op_ready_nxt;
   wire N410;
   wire N411;
   wire N412;
   wire N413;
   wire N414;
   wire N415;
   wire N416;
   wire N417;
   wire N418;
   wire N419;
   wire N420;
   wire N436;
   wire N437;
   wire N438;
   wire N439;
   wire N440;
   wire N441;
   wire N442;
   wire N443;
   wire conv_row_3__0_;
   wire sram_wen_0;
   wire sram_wen_1;
   wire sram_wen_2;
   wire sram_wen_3;
   wire N497;
   wire N498;
   wire N499;
   wire N500;
   wire N501;
   wire N502;
   wire N503;
   wire N504;
   wire N505;
   wire N506;
   wire N507;
   wire N541;
   wire N542;
   wire N543;
   wire N544;
   wire N545;
   wire N546;
   wire N547;
   wire N548;
   wire N549;
   wire N550;
   wire N551;
   wire N586;
   wire N587;
   wire N588;
   wire N589;
   wire N590;
   wire N591;
   wire N592;
   wire N593;
   wire N594;
   wire N595;
   wire N1850;
   wire N1851;
   wire N1852;
   wire N1853;
   wire N1854;
   wire N1855;
   wire N1856;
   wire N1857;
   wire N1858;
   wire N1918;
   wire N1919;
   wire N1920;
   wire N1921;
   wire N1922;
   wire N1923;
   wire N1924;
   wire N1925;
   wire N1926;
   wire N1927;
   wire N1928;
   wire N1929;
   wire N1930;
   wire N1931;
   wire N1932;
   wire N1933;
   wire N1934;
   wire N2029;
   wire N2030;
   wire N2031;
   wire N2032;
   wire N2033;
   wire N2034;
   wire N2035;
   wire N2036;
   wire N2037;
   wire N2038;
   wire N2039;
   wire N2040;
   wire N2041;
   wire N2042;
   wire N2043;
   wire N2044;
   wire N2045;
   wire N2141;
   wire N2142;
   wire N2143;
   wire N2144;
   wire N2145;
   wire N2146;
   wire N2147;
   wire N2148;
   wire N2149;
   wire N2150;
   wire N2151;
   wire N2152;
   wire N2153;
   wire N2154;
   wire N2155;
   wire N2156;
   wire N2157;
   wire N2252;
   wire N2253;
   wire N2254;
   wire N2255;
   wire N2256;
   wire N2257;
   wire N2258;
   wire N2259;
   wire N2260;
   wire N2261;
   wire N2262;
   wire N2263;
   wire N2264;
   wire N2265;
   wire N2266;
   wire N2267;
   wire N2268;
   wire N2370;
   wire N2371;
   wire N2372;
   wire N2373;
   wire N2374;
   wire N2375;
   wire N2376;
   wire N2377;
   wire N2378;
   wire N2379;
   wire N2380;
   wire N2381;
   wire N2382;
   wire N2383;
   wire N2384;
   wire N2385;
   wire N2386;
   wire N2387;
   wire N2388;
   wire N2389;
   wire N2390;
   wire N2391;
   wire N2392;
   wire N2393;
   wire N2394;
   wire N2395;
   wire N2397;
   wire N2398;
   wire N2399;
   wire N2400;
   wire N2401;
   wire N2402;
   wire N2403;
   wire N2404;
   wire N2405;
   wire N2406;
   wire N2407;
   wire N2408;
   wire N2409;
   wire N2410;
   wire N2411;
   wire N2412;
   wire N2413;
   wire N2414;
   wire N2415;
   wire N2416;
   wire N2417;
   wire N2418;
   wire N2419;
   wire N2420;
   wire N2421;
   wire N2422;
   wire N2482;
   wire N2483;
   wire N2496;
   wire N2497;
   wire N2498;
   wire n299;
   wire n304;
   wire n388;
   wire n389;
   wire n390;
   wire n397;
   wire n398;
   wire n399;
   wire n400;
   wire n401;
   wire n402;
   wire n403;
   wire n404;
   wire n405;
   wire n406;
   wire n407;
   wire n408;
   wire n409;
   wire n4100;
   wire n4110;
   wire n4120;
   wire n4130;
   wire n4140;
   wire n4150;
   wire n4160;
   wire n4170;
   wire n4180;
   wire n4190;
   wire n4200;
   wire n421;
   wire n422;
   wire n423;
   wire n424;
   wire n425;
   wire n426;
   wire n427;
   wire n428;
   wire n429;
   wire n430;
   wire n431;
   wire n432;
   wire n433;
   wire n434;
   wire n435;
   wire n4360;
   wire n4370;
   wire n4380;
   wire n4390;
   wire n4400;
   wire n4410;
   wire n4420;
   wire n4430;
   wire n444;
   wire n445;
   wire n446;
   wire n447;
   wire n448;
   wire n449;
   wire n451;
   wire n453;
   wire n454;
   wire n455;
   wire n456;
   wire n457;
   wire n458;
   wire n459;
   wire n460;
   wire n461;
   wire n462;
   wire n463;
   wire n464;
   wire n465;
   wire n466;
   wire n467;
   wire n468;
   wire n469;
   wire n470;
   wire n471;
   wire n472;
   wire n473;
   wire n474;
   wire n475;
   wire n476;
   wire n477;
   wire n480;
   wire n481;
   wire n482;
   wire n484;
   wire n485;
   wire n486;
   wire n487;
   wire n488;
   wire n489;
   wire n490;
   wire n491;
   wire n492;
   wire n493;
   wire n494;
   wire n495;
   wire n496;
   wire n4970;
   wire n4980;
   wire n4990;
   wire n5000;
   wire n5010;
   wire n5020;
   wire n5030;
   wire n5040;
   wire n5050;
   wire n5060;
   wire n5070;
   wire n508;
   wire n509;
   wire n510;
   wire n511;
   wire n512;
   wire n513;
   wire n514;
   wire n515;
   wire n516;
   wire n517;
   wire n518;
   wire n519;
   wire n520;
   wire n521;
   wire n522;
   wire n523;
   wire n524;
   wire n525;
   wire n526;
   wire n527;
   wire n528;
   wire n529;
   wire n530;
   wire n531;
   wire n532;
   wire n533;
   wire n534;
   wire n535;
   wire n536;
   wire n537;
   wire n538;
   wire n539;
   wire n540;
   wire n5410;
   wire n5420;
   wire n5430;
   wire n5440;
   wire n5450;
   wire n5460;
   wire n5470;
   wire n5480;
   wire n5490;
   wire n5500;
   wire n5510;
   wire n552;
   wire n553;
   wire n554;
   wire n555;
   wire n556;
   wire n557;
   wire n558;
   wire n559;
   wire n560;
   wire n561;
   wire n562;
   wire n563;
   wire n564;
   wire n565;
   wire n566;
   wire n567;
   wire n568;
   wire n569;
   wire n570;
   wire n571;
   wire n572;
   wire n573;
   wire n574;
   wire n575;
   wire n576;
   wire n577;
   wire n578;
   wire n579;
   wire n580;
   wire n581;
   wire n582;
   wire n583;
   wire n584;
   wire n5850;
   wire n5860;
   wire n5870;
   wire n5880;
   wire n5890;
   wire n5900;
   wire n5910;
   wire n5920;
   wire n5930;
   wire n5940;
   wire n5950;
   wire n596;
   wire n597;
   wire n598;
   wire n599;
   wire n600;
   wire n601;
   wire n602;
   wire n603;
   wire n604;
   wire n605;
   wire n606;
   wire n607;
   wire n608;
   wire n609;
   wire n610;
   wire n611;
   wire n612;
   wire n613;
   wire n614;
   wire n615;
   wire n616;
   wire n617;
   wire n618;
   wire n619;
   wire n620;
   wire n621;
   wire n622;
   wire n623;
   wire n624;
   wire n625;
   wire n626;
   wire n627;
   wire n628;
   wire n629;
   wire n630;
   wire n631;
   wire n632;
   wire n633;
   wire n634;
   wire n635;
   wire n636;
   wire n637;
   wire n638;
   wire n639;
   wire n640;
   wire n641;
   wire n642;
   wire n643;
   wire n644;
   wire n645;
   wire n646;
   wire n647;
   wire n648;
   wire n649;
   wire n650;
   wire n651;
   wire n652;
   wire n653;
   wire n654;
   wire n655;
   wire n656;
   wire n657;
   wire n658;
   wire n659;
   wire n660;
   wire n661;
   wire n662;
   wire n663;
   wire n664;
   wire n665;
   wire n666;
   wire n667;
   wire n668;
   wire n669;
   wire n670;
   wire n671;
   wire n672;
   wire n673;
   wire n674;
   wire n675;
   wire n676;
   wire n677;
   wire n678;
   wire n679;
   wire n680;
   wire n681;
   wire n682;
   wire n683;
   wire n684;
   wire n685;
   wire n686;
   wire n687;
   wire n688;
   wire n689;
   wire n690;
   wire n691;
   wire n692;
   wire n693;
   wire n694;
   wire n695;
   wire n696;
   wire n697;
   wire n698;
   wire n699;
   wire n700;
   wire n701;
   wire n702;
   wire n703;
   wire n704;
   wire n705;
   wire n706;
   wire n707;
   wire n708;
   wire n709;
   wire n710;
   wire n711;
   wire n712;
   wire n713;
   wire n714;
   wire n715;
   wire n716;
   wire n717;
   wire n718;
   wire n719;
   wire n720;
   wire n721;
   wire n722;
   wire n723;
   wire n724;
   wire n725;
   wire n726;
   wire n727;
   wire n728;
   wire n729;
   wire n730;
   wire n731;
   wire n732;
   wire n733;
   wire n734;
   wire n735;
   wire n736;
   wire n737;
   wire n738;
   wire n739;
   wire n740;
   wire n741;
   wire n742;
   wire n743;
   wire n744;
   wire n745;
   wire n747;
   wire n748;
   wire n749;
   wire n750;
   wire n751;
   wire n752;
   wire n754;
   wire n755;
   wire n756;
   wire n757;
   wire n758;
   wire n759;
   wire n760;
   wire n761;
   wire n762;
   wire n763;
   wire n764;
   wire N2250;
   wire N2249;
   wire N2248;
   wire N2247;
   wire N2246;
   wire N2245;
   wire N2244;
   wire N2243;
   wire N2239;
   wire N2238;
   wire N2237;
   wire N2236;
   wire N2235;
   wire N2234;
   wire N2233;
   wire N2232;
   wire N2231;
   wire N2215;
   wire N2214;
   wire N2213;
   wire N2212;
   wire N2211;
   wire N2210;
   wire N2209;
   wire N2208;
   wire N2207;
   wire N2206;
   wire N2205;
   wire N2203;
   wire N2202;
   wire N2201;
   wire N2200;
   wire N2199;
   wire N2198;
   wire N2197;
   wire N2196;
   wire N2195;
   wire N2194;
   wire N2192;
   wire N2191;
   wire N2190;
   wire N2189;
   wire N2188;
   wire N2187;
   wire N2186;
   wire N2185;
   wire N2184;
   wire N2174;
   wire N2173;
   wire N2172;
   wire N2171;
   wire N2170;
   wire N2169;
   wire N2168;
   wire N2167;
   wire N2166;
   wire N2165;
   wire N2164;
   wire N2163;
   wire N2162;
   wire N2161;
   wire N2160;
   wire N2159;
   wire N2158;
   wire N2139;
   wire N2138;
   wire N2137;
   wire N2136;
   wire N2135;
   wire N2134;
   wire N2133;
   wire N2132;
   wire N2128;
   wire N2127;
   wire N2126;
   wire N2125;
   wire N2124;
   wire N2123;
   wire N2122;
   wire N2121;
   wire N2120;
   wire N2104;
   wire N2103;
   wire N2102;
   wire N2101;
   wire N2100;
   wire N2099;
   wire N2098;
   wire N2097;
   wire N2096;
   wire N2095;
   wire N2094;
   wire N2092;
   wire N2091;
   wire N2090;
   wire N2089;
   wire N2088;
   wire N2087;
   wire N2086;
   wire N2085;
   wire N2084;
   wire N2083;
   wire N2081;
   wire N2080;
   wire N2079;
   wire N2078;
   wire N2077;
   wire N2076;
   wire N2075;
   wire N2074;
   wire N2073;
   wire N2063;
   wire N2062;
   wire N2061;
   wire N2060;
   wire N2059;
   wire N2058;
   wire N2057;
   wire N2056;
   wire N2055;
   wire N2054;
   wire N2053;
   wire N2052;
   wire N2051;
   wire N2050;
   wire N2049;
   wire N2048;
   wire N2047;
   wire N2027;
   wire N2026;
   wire N2025;
   wire N2024;
   wire N2023;
   wire N2022;
   wire N2021;
   wire N2020;
   wire N2016;
   wire N2015;
   wire N2014;
   wire N2013;
   wire N2012;
   wire N2011;
   wire N2010;
   wire N2009;
   wire N2008;
   wire N1992;
   wire N1991;
   wire N1990;
   wire N1989;
   wire N1988;
   wire N1987;
   wire N1986;
   wire N1985;
   wire N1984;
   wire N1983;
   wire N1982;
   wire N1980;
   wire N1979;
   wire N1978;
   wire N1977;
   wire N1976;
   wire N1975;
   wire N1974;
   wire N1973;
   wire N1972;
   wire N1971;
   wire N1969;
   wire N1968;
   wire N1967;
   wire N1966;
   wire N1965;
   wire N1964;
   wire N1963;
   wire N1962;
   wire N1961;
   wire N1951;
   wire N1950;
   wire N1949;
   wire N1948;
   wire N1947;
   wire N1946;
   wire N1945;
   wire N1944;
   wire N1943;
   wire N1942;
   wire N1941;
   wire N1940;
   wire N1939;
   wire N1938;
   wire N1937;
   wire N1936;
   wire N1935;
   wire N1916;
   wire N1915;
   wire N1914;
   wire N1913;
   wire N1912;
   wire N1911;
   wire N1910;
   wire N1909;
   wire N1905;
   wire N1904;
   wire N1903;
   wire N1902;
   wire N1901;
   wire N1900;
   wire N1899;
   wire N1898;
   wire N1897;
   wire N1881;
   wire N1880;
   wire N1879;
   wire N1878;
   wire N1877;
   wire N1876;
   wire N1875;
   wire N1874;
   wire N1873;
   wire N1872;
   wire N1871;
   wire N1869;
   wire N1868;
   wire N1867;
   wire N1866;
   wire N1865;
   wire N1864;
   wire N1863;
   wire N1862;
   wire N1861;
   wire N1860;
   wire N1840;
   wire N1839;
   wire N1838;
   wire N1837;
   wire N1836;
   wire N1835;
   wire N1834;
   wire N1833;
   wire N1832;
   wire N1831;
   wire N1830;
   wire N1829;
   wire N1828;
   wire N1827;
   wire N1826;
   wire N1825;
   wire N1824;
   wire r796_carry_2_;
   wire r796_carry_3_;
   wire r796_carry_4_;
   wire r796_carry_5_;
   wire r796_carry_6_;
   wire r796_carry_7_;
   wire r796_carry_8_;
   wire r796_carry_9_;
   wire r796_carry_10_;
   wire add_2_root_add_0_root_add_365_9_carry_3_;
   wire add_2_root_add_0_root_add_365_9_carry_4_;
   wire add_2_root_add_0_root_add_365_9_carry_5_;
   wire add_2_root_add_0_root_add_365_9_carry_6_;
   wire add_2_root_add_0_root_add_365_9_carry_7_;
   wire add_2_root_add_0_root_add_365_9_carry_8_;
   wire add_2_root_add_0_root_add_365_9_carry_9_;
   wire add_2_root_add_0_root_add_369_9_carry_3_;
   wire add_2_root_add_0_root_add_369_9_carry_4_;
   wire add_2_root_add_0_root_add_369_9_carry_5_;
   wire add_2_root_add_0_root_add_369_9_carry_6_;
   wire add_2_root_add_0_root_add_369_9_carry_7_;
   wire add_2_root_add_0_root_add_369_9_carry_8_;
   wire add_2_root_add_0_root_add_369_9_carry_9_;
   wire add_2_root_add_0_root_add_370_9_carry_3_;
   wire add_2_root_add_0_root_add_370_9_carry_4_;
   wire add_2_root_add_0_root_add_370_9_carry_5_;
   wire add_2_root_add_0_root_add_370_9_carry_6_;
   wire add_2_root_add_0_root_add_370_9_carry_7_;
   wire add_2_root_add_0_root_add_370_9_carry_8_;
   wire add_2_root_add_0_root_add_370_9_carry_9_;
   wire add_2_root_add_0_root_add_364_9_carry_3_;
   wire add_2_root_add_0_root_add_364_9_carry_4_;
   wire add_2_root_add_0_root_add_364_9_carry_5_;
   wire add_2_root_add_0_root_add_364_9_carry_6_;
   wire add_2_root_add_0_root_add_364_9_carry_7_;
   wire add_2_root_add_0_root_add_364_9_carry_8_;
   wire add_2_root_add_0_root_add_364_9_carry_9_;
   wire n766;
   wire n767;
   wire n768;
   wire n769;
   wire n770;
   wire n771;
   wire n772;
   wire n773;
   wire n774;
   wire n775;
   wire n776;
   wire n777;
   wire n778;
   wire n779;
   wire n780;
   wire n781;
   wire n782;
   wire n783;
   wire n784;
   wire n785;
   wire n786;
   wire n787;
   wire n788;
   wire n789;
   wire n790;
   wire n791;
   wire n792;
   wire n793;
   wire n794;
   wire n795;
   wire n796;
   wire n797;
   wire n798;
   wire n799;
   wire n800;
   wire n801;
   wire n802;
   wire n803;
   wire n804;
   wire n805;
   wire n806;
   wire n807;
   wire n808;
   wire n809;
   wire n810;
   wire n811;
   wire n812;
   wire n813;
   wire n814;
   wire n815;
   wire n816;
   wire n817;
   wire n818;
   wire n819;
   wire n820;
   wire n821;
   wire n822;
   wire n823;
   wire n824;
   wire n825;
   wire n826;
   wire n827;
   wire n828;
   wire n829;
   wire n831;
   wire n832;
   wire n833;
   wire n834;
   wire n835;
   wire n836;
   wire n837;
   wire n838;
   wire n839;
   wire n840;
   wire n841;
   wire n842;
   wire n843;
   wire n844;
   wire n845;
   wire n846;
   wire n847;
   wire n848;
   wire n849;
   wire n850;
   wire n851;
   wire n852;
   wire n853;
   wire n854;
   wire n855;
   wire n856;
   wire n857;
   wire n858;
   wire n859;
   wire n860;
   wire n861;
   wire n862;
   wire n863;
   wire n864;
   wire n865;
   wire n866;
   wire n867;
   wire n868;
   wire n869;
   wire n870;
   wire n871;
   wire n873;
   wire n874;
   wire n875;
   wire n876;
   wire n877;
   wire n878;
   wire n879;
   wire n880;
   wire n881;
   wire n882;
   wire n883;
   wire n884;
   wire n885;
   wire n886;
   wire n887;
   wire n888;
   wire n889;
   wire n890;
   wire n891;
   wire n892;
   wire n893;
   wire n894;
   wire n895;
   wire n896;
   wire n897;
   wire n898;
   wire n899;
   wire n900;
   wire n901;
   wire n902;
   wire n903;
   wire n904;
   wire n905;
   wire n906;
   wire n907;
   wire n908;
   wire n909;
   wire n910;
   wire n911;
   wire n912;
   wire n913;
   wire n914;
   wire n915;
   wire n916;
   wire n917;
   wire n918;
   wire n919;
   wire n920;
   wire n921;
   wire n922;
   wire n923;
   wire n924;
   wire n925;
   wire n926;
   wire n927;
   wire n928;
   wire n929;
   wire n930;
   wire n931;
   wire n932;
   wire n933;
   wire n934;
   wire n935;
   wire n936;
   wire n937;
   wire n938;
   wire n939;
   wire n940;
   wire n941;
   wire n942;
   wire n943;
   wire n944;
   wire n945;
   wire n946;
   wire n1018;
   wire n1019;
   wire n1020;
   wire n1021;
   wire n1022;
   wire n1023;
   wire n1024;
   wire n1025;
   wire n1026;
   wire n1027;
   wire n1028;
   wire n1029;
   wire n1030;
   wire n1031;
   wire n1032;
   wire n1033;
   wire n1034;
   wire n1035;
   wire n1036;
   wire n1037;
   wire n1038;
   wire n1039;
   wire n1040;
   wire n1041;
   wire n1042;
   wire n1043;
   wire n1044;
   wire n1045;
   wire n1046;
   wire n1047;
   wire n1048;
   wire n1049;
   wire n1050;
   wire n1051;
   wire n1052;
   wire n1054;
   wire n1055;
   wire n1056;
   wire n1057;
   wire n1058;
   wire n1059;
   wire n1060;
   wire n1061;
   wire n1062;
   wire n1063;
   wire n1064;
   wire n1065;
   wire n1066;
   wire n1067;
   wire n1068;
   wire n1069;
   wire n1071;
   wire n1072;
   wire n1073;
   wire n1074;
   wire n1075;
   wire n1076;
   wire n1077;
   wire n1078;
   wire n1079;
   wire n1080;
   wire n1081;
   wire n1082;
   wire n1083;
   wire n1084;
   wire n1085;
   wire n1086;
   wire n1087;
   wire n1088;
   wire n1089;
   wire n1090;
   wire n1091;
   wire n1092;
   wire n1093;
   wire n1094;
   wire n1095;
   wire n1096;
   wire n1097;
   wire n1098;
   wire n1099;
   wire n1100;
   wire n1101;
   wire n1102;
   wire n1103;
   wire n1104;
   wire n1105;
   wire n1106;
   wire n1107;
   wire n1108;
   wire n1109;
   wire n1110;
   wire n1111;
   wire n1112;
   wire n1113;
   wire n1114;
   wire n1115;
   wire n1116;
   wire n1117;
   wire n1118;
   wire n1120;
   wire n1121;
   wire n1122;
   wire n1123;
   wire n1124;
   wire n1125;
   wire n1126;
   wire n1127;
   wire n1128;
   wire n1129;
   wire n1130;
   wire n1131;
   wire n1132;
   wire n1133;
   wire n1134;
   wire n1135;
   wire n1136;
   wire n1137;
   wire n1138;
   wire n1139;
   wire n1140;
   wire n1141;
   wire n1142;
   wire n1143;
   wire n1144;
   wire n1145;
   wire n1146;
   wire n1147;
   wire n1148;
   wire n1149;
   wire n1150;
   wire n1151;
   wire n1152;
   wire n1153;
   wire n1154;
   wire n1155;
   wire n1156;
   wire n1157;
   wire n1158;
   wire n1159;
   wire n1160;
   wire n1161;
   wire n1162;
   wire n1163;
   wire n1164;
   wire n1165;
   wire n1166;
   wire n1167;
   wire n1168;
   wire n1169;
   wire n1170;
   wire n1171;
   wire n1172;
   wire n1173;
   wire n1174;
   wire n1175;
   wire n1176;
   wire n1177;
   wire n1178;
   wire n1179;
   wire n1180;
   wire n1181;
   wire n1182;
   wire n1183;
   wire n1184;
   wire n1185;
   wire n1186;
   wire n1187;
   wire n1188;
   wire n1189;
   wire n1190;
   wire n1191;
   wire n1193;
   wire n1194;
   wire n1195;
   wire n1196;
   wire n1197;
   wire n1198;
   wire n1199;
   wire n1200;
   wire n1201;
   wire n1202;
   wire n1204;
   wire n1205;
   wire n1206;
   wire n1207;
   wire n1208;
   wire n1209;
   wire n1210;
   wire n1211;
   wire n1212;
   wire n1213;
   wire n1214;
   wire n1215;
   wire n1216;
   wire n1217;
   wire n1218;
   wire n1219;
   wire n1220;
   wire n1221;
   wire n1222;
   wire n1223;
   wire n1224;
   wire n1225;
   wire n1226;
   wire n1227;
   wire n1228;
   wire n1229;
   wire n1230;
   wire n1231;
   wire n1232;
   wire n1233;
   wire n1234;
   wire n1235;
   wire n1236;
   wire n1237;
   wire n1238;
   wire n1239;
   wire n1240;
   wire n1241;
   wire n1242;
   wire n1243;
   wire n1244;
   wire n1245;
   wire n1246;
   wire n1247;
   wire n1248;
   wire n1249;
   wire n1250;
   wire n1251;
   wire n1252;
   wire n1253;
   wire n1254;
   wire n1255;
   wire n1256;
   wire n1257;
   wire n1258;
   wire n1259;
   wire n1260;
   wire n1261;
   wire n1262;
   wire n1263;
   wire n1264;
   wire n1265;
   wire n1266;
   wire n1267;
   wire n1268;
   wire n1269;
   wire n1270;
   wire n1271;
   wire n1272;
   wire n1273;
   wire n1274;
   wire n1275;
   wire n1276;
   wire n1277;
   wire n1278;
   wire n1279;
   wire n1280;
   wire n1281;
   wire n1282;
   wire n1283;
   wire n1284;
   wire n1285;
   wire n1286;
   wire n1287;
   wire n1288;
   wire n1289;
   wire n1290;
   wire n1291;
   wire n1292;
   wire n1293;
   wire n1294;
   wire n1295;
   wire n1296;
   wire n1297;
   wire n1298;
   wire n1299;
   wire n1300;
   wire n1301;
   wire n1302;
   wire n1303;
   wire n1304;
   wire n1305;
   wire n1306;
   wire n1307;
   wire n1308;
   wire n1309;
   wire n1310;
   wire n1311;
   wire n1312;
   wire n1313;
   wire n1314;
   wire n1315;
   wire n1316;
   wire n1317;
   wire n1318;
   wire n1319;
   wire n1320;
   wire n1321;
   wire n1322;
   wire n1323;
   wire n1324;
   wire n1325;
   wire n1326;
   wire n1327;
   wire n1328;
   wire n1329;
   wire n1330;
   wire n1331;
   wire n1332;
   wire n1333;
   wire n1334;
   wire n1335;
   wire n1336;
   wire n1337;
   wire n1338;
   wire n1339;
   wire n1340;
   wire n1341;
   wire n1342;
   wire n1343;
   wire n1344;
   wire n1345;
   wire n1346;
   wire n1347;
   wire n1348;
   wire n1349;
   wire n1350;
   wire n1351;
   wire n1352;
   wire n1353;
   wire n1354;
   wire n1355;
   wire n1356;
   wire n1357;
   wire n1358;
   wire n1359;
   wire n1360;
   wire n1361;
   wire n1362;
   wire n1363;
   wire n1364;
   wire n1365;
   wire n1366;
   wire n1367;
   wire n1368;
   wire n1369;
   wire n1370;
   wire n1371;
   wire n1372;
   wire n1373;
   wire n1374;
   wire n1375;
   wire n1376;
   wire n1377;
   wire n1378;
   wire n1379;
   wire n1380;
   wire n1381;
   wire n1382;
   wire n1383;
   wire n1384;
   wire n1385;
   wire n1386;
   wire n1387;
   wire n1388;
   wire n1389;
   wire n1390;
   wire n1391;
   wire n1392;
   wire n1393;
   wire n1394;
   wire n1395;
   wire n1396;
   wire n1397;
   wire n1398;
   wire n1399;
   wire n1400;
   wire n1401;
   wire n1402;
   wire n1403;
   wire n1404;
   wire n1405;
   wire n1406;
   wire n1409;
   wire n1410;
   wire n1411;
   wire n1412;
   wire n1413;
   wire n1414;
   wire n1415;
   wire n1416;
   wire n1417;
   wire n1419;
   wire n1420;
   wire n1421;
   wire n1422;
   wire n1423;
   wire n1424;
   wire n1425;
   wire n1426;
   wire n1427;
   wire n1437;
   wire n1438;
   wire n1439;
   wire n1440;
   wire n1441;
   wire n1442;
   wire n1443;
   wire n1444;
   wire n1445;
   wire n1447;
   wire n1448;
   wire n1449;
   wire n1450;
   wire n1451;
   wire n1452;
   wire n1453;
   wire n1454;
   wire n1455;
   wire n1466;
   wire n1467;
   wire n1468;
   wire n1469;
   wire n1470;
   wire n1471;
   wire n1472;
   wire n1473;
   wire n1474;
   wire n1476;
   wire n1477;
   wire n1478;
   wire n1479;
   wire n1480;
   wire n1481;
   wire n1482;
   wire n1483;
   wire n1484;
   wire n1495;
   wire n1496;
   wire n1497;
   wire n1498;
   wire n1499;
   wire n1500;
   wire n1501;
   wire n1502;
   wire n1503;
   wire SYNOPSYS_UNCONNECTED_1;
   wire SYNOPSYS_UNCONNECTED_2;
   wire SYNOPSYS_UNCONNECTED_3;
   wire SYNOPSYS_UNCONNECTED_4;
   wire SYNOPSYS_UNCONNECTED_5;
   wire SYNOPSYS_UNCONNECTED_6;
   wire SYNOPSYS_UNCONNECTED_7;
   wire SYNOPSYS_UNCONNECTED_8;
   wire SYNOPSYS_UNCONNECTED_9;
   wire SYNOPSYS_UNCONNECTED_10;
   wire SYNOPSYS_UNCONNECTED_11;
   wire SYNOPSYS_UNCONNECTED_12;
   wire SYNOPSYS_UNCONNECTED_13;
   wire SYNOPSYS_UNCONNECTED_14;
   wire SYNOPSYS_UNCONNECTED_15;
   wire SYNOPSYS_UNCONNECTED_16;
   wire SYNOPSYS_UNCONNECTED_17;
   wire SYNOPSYS_UNCONNECTED_18;
   wire SYNOPSYS_UNCONNECTED_19;
   wire SYNOPSYS_UNCONNECTED_20;
   wire SYNOPSYS_UNCONNECTED_21;
   wire SYNOPSYS_UNCONNECTED_22;
   wire SYNOPSYS_UNCONNECTED_23;
   wire SYNOPSYS_UNCONNECTED_24;
   wire SYNOPSYS_UNCONNECTED_25;
   wire SYNOPSYS_UNCONNECTED_26;
   wire SYNOPSYS_UNCONNECTED_27;
   wire [7:0] in_data;
   wire [3:0] op;
   wire [3:0] state;
   wire [7:0] counter_256;
   wire [3:0] state_nxt;
   wire [10:0] counter_2047;
   wire [2:1] origin_row;
   wire [13:0] sram_addr;
   wire [31:0] q;
   wire [127:0] x;
   wire [67:0] y;
   wire [51:0] z;
   wire [7:0] DIS_out_data;
   wire [12:0] CONV_out_data;
   wire [10:5] r795_carry;

   TIELO LTIE_LTIELO (.Y(LTIE_LTIELO_NET));
   TIEHI LTIE_LTIEHI (.Y(LTIE_LTIEHI_NET));
   AND3X2 FE_RC_1_0 (.A(n480),
	.B(n1046),
	.C(n1145),
	.Y(n1143));
   CLKBUFX16 CTS_ccl_a_BUF_i_clk_G0_L3_5 (.A(CTS_25),
	.Y(CTS_24));
   CLKBUFX16 CTS_ccl_a_BUF_i_clk_G0_L3_4 (.A(CTS_25),
	.Y(CTS_23));
   CLKBUFX12 CTS_ccl_a_BUF_i_clk_G0_L3_3 (.A(CTS_25),
	.Y(CTS_22));
   CLKBUFX16 CTS_ccl_a_BUF_i_clk_G0_L3_2 (.A(CTS_25),
	.Y(CTS_21));
   CLKBUFX12 CTS_ccl_a_BUF_i_clk_G0_L3_1 (.A(CTS_25),
	.Y(CTS_20));
   CLKBUFX12 CTS_ccl_a_BUF_i_clk_G0_L2_1 (.A(CTS_26),
	.Y(CTS_25));
   CLKBUFX2 CTS_cdb_BUF_i_clk_G0_L1_1 (.A(i_clk),
	.Y(CTS_26));
   BUFX4 FE_OFC17_i_rst_n (.A(i_rst_n),
	.Y(FE_OFN17_i_rst_n));
   CLKBUFX3 FE_OFC16_n1190 (.A(n1190),
	.Y(FE_OFN16_n1190));
   CLKBUFX3 FE_OFC15_n769 (.A(n769),
	.Y(FE_OFN15_n769));
   CLKBUFX3 FE_OFC14_in_data_0 (.A(in_data[0]),
	.Y(FE_OFN14_in_data_0));
   CLKBUFX3 FE_OFC13_in_data_1 (.A(in_data[1]),
	.Y(FE_OFN13_in_data_1));
   CLKBUFX3 FE_OFC12_in_data_2 (.A(in_data[2]),
	.Y(FE_OFN12_in_data_2));
   CLKBUFX3 FE_OFC11_in_data_3 (.A(in_data[3]),
	.Y(FE_OFN11_in_data_3));
   CLKBUFX3 FE_OFC10_in_data_4 (.A(in_data[4]),
	.Y(FE_OFN10_in_data_4));
   CLKBUFX3 FE_OFC9_in_data_5 (.A(in_data[5]),
	.Y(FE_OFN9_in_data_5));
   CLKBUFX3 FE_OFC8_in_data_6 (.A(in_data[6]),
	.Y(FE_OFN8_in_data_6));
   CLKBUFX3 FE_OFC7_in_data_7 (.A(in_data[7]),
	.Y(FE_OFN7_in_data_7));
   CLKBUFX3 FE_OFC6_n1182 (.A(n1182),
	.Y(FE_OFN6_n1182));
   CLKBUFX3 FE_OFC5_N541 (.A(N541),
	.Y(FE_OFN5_N541));
   CLKBUFX6 FE_OFC4_i_rst_n (.A(FE_OFN3_i_rst_n),
	.Y(FE_OFN4_i_rst_n));
   BUFX4 FE_OFC3_i_rst_n (.A(FE_OFN2_i_rst_n),
	.Y(FE_OFN3_i_rst_n));
   BUFX4 FE_OFC2_i_rst_n (.A(FE_OFN1_i_rst_n),
	.Y(FE_OFN2_i_rst_n));
   BUFX4 FE_OFC1_i_rst_n (.A(FE_OFN0_i_rst_n),
	.Y(FE_OFN1_i_rst_n));
   CLKBUFX6 FE_OFC0_i_rst_n (.A(FE_OFN17_i_rst_n),
	.Y(FE_OFN0_i_rst_n));
   CLKINVX1 FE_DBTC3_N212 (.A(N212),
	.Y(FE_DBTN3_N212));
   CLKINVX1 FE_DBTC2_N541 (.A(FE_OFN5_N541),
	.Y(FE_DBTN2_N541));
   INVXL FE_DBTC1_n475 (.A(n475),
	.Y(FE_DBTN1_n475));
   INVX3 FE_DBTC0_n771 (.A(n771),
	.Y(FE_DBTN0_n771));
   sram_512x8 number_0 (.Q({ q[7],
		q[6],
		q[5],
		q[4],
		q[3],
		q[2],
		q[1],
		q[0] }),
	.CLK(CTS_23),
	.CEN(LTIE_LTIELO_NET),
	.WEN(sram_wen_0),
	.A({ sram_addr[13],
		sram_addr[12],
		sram_addr[11],
		sram_addr[10],
		sram_addr[9],
		sram_addr[8],
		sram_addr[7],
		sram_addr[6],
		sram_addr[2] }),
	.D({ FE_OFN7_in_data_7,
		FE_OFN8_in_data_6,
		FE_OFN9_in_data_5,
		FE_OFN10_in_data_4,
		FE_OFN11_in_data_3,
		FE_OFN12_in_data_2,
		FE_OFN13_in_data_1,
		FE_OFN14_in_data_0 }));
   sram_512x8 number_1 (.Q({ q[15],
		q[14],
		q[13],
		q[12],
		q[11],
		q[10],
		q[9],
		q[8] }),
	.CLK(CTS_24),
	.CEN(LTIE_LTIELO_NET),
	.WEN(sram_wen_1),
	.A({ sram_addr[13],
		sram_addr[12],
		sram_addr[11],
		sram_addr[10],
		sram_addr[9],
		sram_addr[8],
		sram_addr[7],
		sram_addr[6],
		sram_addr[3] }),
	.D({ FE_OFN7_in_data_7,
		FE_OFN8_in_data_6,
		FE_OFN9_in_data_5,
		FE_OFN10_in_data_4,
		FE_OFN11_in_data_3,
		FE_OFN12_in_data_2,
		FE_OFN13_in_data_1,
		FE_OFN14_in_data_0 }));
   sram_512x8 number_2 (.Q({ q[23],
		q[22],
		q[21],
		q[20],
		q[19],
		q[18],
		q[17],
		q[16] }),
	.CLK(CTS_21),
	.CEN(LTIE_LTIELO_NET),
	.WEN(sram_wen_2),
	.A({ sram_addr[13],
		sram_addr[12],
		sram_addr[11],
		sram_addr[10],
		sram_addr[9],
		sram_addr[8],
		sram_addr[7],
		sram_addr[6],
		sram_addr[4] }),
	.D({ FE_OFN7_in_data_7,
		FE_OFN8_in_data_6,
		FE_OFN9_in_data_5,
		FE_OFN10_in_data_4,
		FE_OFN11_in_data_3,
		FE_OFN12_in_data_2,
		FE_OFN13_in_data_1,
		FE_OFN14_in_data_0 }));
   sram_512x8 number_3 (.Q({ q[31],
		q[30],
		q[29],
		q[28],
		q[27],
		q[26],
		q[25],
		q[24] }),
	.CLK(CTS_24),
	.CEN(LTIE_LTIELO_NET),
	.WEN(sram_wen_3),
	.A({ sram_addr[13],
		sram_addr[12],
		sram_addr[11],
		sram_addr[10],
		sram_addr[9],
		sram_addr[8],
		sram_addr[7],
		sram_addr[6],
		sram_addr[5] }),
	.D({ FE_OFN7_in_data_7,
		FE_OFN8_in_data_6,
		FE_OFN9_in_data_5,
		FE_OFN10_in_data_4,
		FE_OFN11_in_data_3,
		FE_OFN12_in_data_2,
		FE_OFN13_in_data_1,
		FE_OFN14_in_data_0 }));
   core_DW01_inc_0_DW01_inc_2 add_395_round (.A({ y[67],
		y[66],
		y[65],
		y[64],
		y[63],
		y[62],
		y[61],
		y[60],
		y[59],
		y[58],
		y[57],
		y[56],
		y[55],
		y[54] }),
	.\SUM[13] (N2422),
	.\SUM[12] (N2421),
	.\SUM[11] (N2420),
	.\SUM[10] (N2419),
	.\SUM[9] (N2418),
	.\SUM[8] (N2417),
	.\SUM[7] (N2416),
	.\SUM[6] (N2415),
	.\SUM[5] (N2414),
	.\SUM[4] (N2413),
	.\SUM[3] (N2412),
	.\SUM[2] (N2411),
	.\SUM[1] (N2410));
   core_DW01_inc_1_DW01_inc_3 add_394_round (.A({ y[50],
		y[49],
		y[48],
		y[47],
		y[46],
		y[45],
		y[44],
		y[43],
		y[42],
		y[41],
		y[40],
		y[39],
		y[38],
		y[37] }),
	.\SUM[13] (N2409),
	.\SUM[12] (N2408),
	.\SUM[11] (N2407),
	.\SUM[10] (N2406),
	.\SUM[9] (N2405),
	.\SUM[8] (N2404),
	.\SUM[7] (N2403),
	.\SUM[6] (N2402),
	.\SUM[5] (N2401),
	.\SUM[4] (N2400),
	.\SUM[3] (N2399),
	.\SUM[2] (N2398),
	.\SUM[1] (N2397));
   core_DW01_inc_2_DW01_inc_4 add_390_round (.A({ y[33],
		y[32],
		y[31],
		y[30],
		y[29],
		y[28],
		y[27],
		y[26],
		y[25],
		y[24],
		y[23],
		y[22],
		y[21],
		y[20] }),
	.\SUM[13] (N2395),
	.\SUM[12] (N2394),
	.\SUM[11] (N2393),
	.\SUM[10] (N2392),
	.\SUM[9] (N2391),
	.\SUM[8] (N2390),
	.\SUM[7] (N2389),
	.\SUM[6] (N2388),
	.\SUM[5] (N2387),
	.\SUM[4] (N2386),
	.\SUM[3] (N2385),
	.\SUM[2] (N2384),
	.\SUM[1] (N2383));
   core_DW01_inc_3_DW01_inc_5 add_389_round (.A({ y[16],
		y[15],
		y[14],
		y[13],
		y[12],
		y[11],
		y[10],
		y[9],
		y[8],
		y[7],
		y[6],
		y[5],
		y[4],
		y[3] }),
	.\SUM[13] (N2382),
	.\SUM[12] (N2381),
	.\SUM[11] (N2380),
	.\SUM[10] (N2379),
	.\SUM[9] (N2378),
	.\SUM[8] (N2377),
	.\SUM[7] (N2376),
	.\SUM[6] (N2375),
	.\SUM[5] (N2374),
	.\SUM[4] (N2373),
	.\SUM[3] (N2372),
	.\SUM[2] (N2371),
	.\SUM[1] (N2370));
   core_DW01_inc_5_DW01_inc_7 add_147 (.A(counter_256),
	.SUM({ N443,
		N442,
		N441,
		N440,
		N439,
		N438,
		N437,
		N436 }));
   core_DW01_inc_6_DW01_inc_8 add_138_S2 (.A(counter_2047),
	.SUM({ N420,
		N419,
		N418,
		N417,
		N416,
		N415,
		N414,
		N413,
		N412,
		N411,
		N410 }));
   core_DW01_add_0_DW01_add_3 r801 (.\A[7] (x[55]),
	.\A[6] (x[54]),
	.\A[5] (x[53]),
	.\A[4] (x[52]),
	.\A[3] (x[51]),
	.\A[2] (x[50]),
	.\A[1] (x[49]),
	.\A[0] (x[48]),
	.\B[7] (x[79]),
	.\B[6] (x[78]),
	.\B[5] (x[77]),
	.\B[4] (x[76]),
	.\B[3] (x[75]),
	.\B[2] (x[74]),
	.\B[1] (x[73]),
	.\B[0] (x[72]),
	.\SUM[8] (N1858),
	.\SUM[7] (N1857),
	.\SUM[6] (N1856),
	.\SUM[5] (N1855),
	.\SUM[4] (N1854),
	.\SUM[3] (N1853),
	.\SUM[2] (N1852),
	.\SUM[1] (N1851),
	.\SUM[0] (N1850));
   core_DW01_inc_7_DW01_inc_9 r794 (.A({ counter_256[6],
		n808,
		FE_DBTN1_n475,
		n1195,
		counter_256[2],
		origin_row,
		conv_row_3__0_,
		N543,
		N542,
		FE_OFN5_N541 }),
	.SUM({ N507,
		N506,
		N505,
		N504,
		N503,
		N502,
		N501,
		N500,
		N499,
		N498,
		N497 }));
   core_DW01_add_29_DW01_add_32 add_1_root_add_0_root_add_370_4 (.\A[7] (x[95]),
	.\A[6] (x[94]),
	.\A[5] (x[93]),
	.\A[4] (x[92]),
	.\A[3] (x[91]),
	.\A[2] (x[90]),
	.\A[1] (x[89]),
	.\A[0] (x[88]),
	.\B[7] (x[119]),
	.\B[6] (x[118]),
	.\B[5] (x[117]),
	.\B[4] (x[116]),
	.\B[3] (x[115]),
	.\B[2] (x[114]),
	.\B[1] (x[113]),
	.\B[0] (x[112]),
	.\SUM[8] (N2192),
	.\SUM[7] (N2191),
	.\SUM[6] (N2190),
	.\SUM[5] (N2189),
	.\SUM[4] (N2188),
	.\SUM[3] (N2187),
	.\SUM[2] (N2186),
	.\SUM[1] (N2185),
	.\SUM[0] (N2184));
   core_DW01_add_28_DW01_add_31 add_0_root_add_0_root_add_370_4 (.\A[8] (N1858),
	.\A[7] (N1857),
	.\A[6] (N1856),
	.\A[5] (N1855),
	.\A[4] (N1854),
	.\A[3] (N1853),
	.\A[2] (N1852),
	.\A[1] (N1851),
	.\A[0] (N1850),
	.\B[8] (N2192),
	.\B[7] (N2191),
	.\B[6] (N2190),
	.\B[5] (N2189),
	.\B[4] (N2188),
	.\B[3] (N2187),
	.\B[2] (N2186),
	.\B[1] (N2185),
	.\B[0] (N2184),
	.\SUM[9] (N2203),
	.\SUM[8] (N2202),
	.\SUM[7] (N2201),
	.\SUM[6] (N2200),
	.\SUM[5] (N2199),
	.\SUM[4] (N2198),
	.\SUM[3] (N2197),
	.\SUM[2] (N2196),
	.\SUM[1] (N2195),
	.\SUM[0] (N2194));
   core_DW01_add_27_DW01_add_30 add_1_root_add_0_root_add_370_9 (.B({ y[67],
		y[66],
		y[65],
		y[64],
		y[63],
		y[62],
		y[61],
		y[60],
		y[59],
		y[58],
		y[57],
		y[56],
		y[55],
		y[54],
		y[53],
		y[52],
		y[51] }),
	.SUM({ N2174,
		N2173,
		N2172,
		N2171,
		N2170,
		N2169,
		N2168,
		N2167,
		N2166,
		N2165,
		N2164,
		N2163,
		N2162,
		N2161,
		N2160,
		N2159,
		N2158 }),
	.\A[10] (N2203),
	.\A[9] (N2202),
	.\A[8] (N2201),
	.\A[7] (N2200),
	.\A[6] (N2199),
	.\A[5] (N2198),
	.\A[4] (N2197),
	.\A[3] (N2196),
	.\A[2] (N2195),
	.\A[1] (N2194));
   core_DW01_add_26_DW01_add_29 add_1_root_add_0_root_add_370_8 (.\A[7] (x[47]),
	.\A[6] (x[46]),
	.\A[5] (x[45]),
	.\A[4] (x[44]),
	.\A[3] (x[43]),
	.\A[2] (x[42]),
	.\A[1] (x[41]),
	.\A[0] (n807),
	.\B[7] (x[63]),
	.\B[6] (x[62]),
	.\B[5] (x[61]),
	.\B[4] (x[60]),
	.\B[3] (x[59]),
	.\B[2] (x[58]),
	.\B[1] (x[57]),
	.\B[0] (x[56]),
	.\SUM[8] (n1503),
	.\SUM[7] (n1502),
	.\SUM[6] (n1501),
	.\SUM[5] (n1500),
	.\SUM[4] (n1499),
	.\SUM[3] (n1498),
	.\SUM[2] (n1497),
	.\SUM[1] (n1496),
	.\SUM[0] (n1495));
   core_DW01_add_25_DW01_add_28 add_2_root_add_0_root_add_370_8 (.\A[7] (x[127]),
	.\A[6] (x[126]),
	.\A[5] (x[125]),
	.\A[4] (x[124]),
	.\A[3] (x[123]),
	.\A[2] (x[122]),
	.\A[1] (x[121]),
	.\A[0] (x[120]),
	.\B[7] (x[111]),
	.\B[6] (x[110]),
	.\B[5] (x[109]),
	.\B[4] (x[108]),
	.\B[3] (x[107]),
	.\B[2] (x[106]),
	.\B[1] (x[105]),
	.\B[0] (x[104]),
	.\SUM[8] (N2239),
	.\SUM[7] (N2238),
	.\SUM[6] (N2237),
	.\SUM[5] (N2236),
	.\SUM[4] (N2235),
	.\SUM[3] (N2234),
	.\SUM[2] (N2233),
	.\SUM[1] (N2232),
	.\SUM[0] (N2231));
   core_DW01_add_24_DW01_add_27 add_0_root_add_0_root_add_370_8 (.\A[8] (N2239),
	.\A[7] (N2238),
	.\A[6] (N2237),
	.\A[5] (N2236),
	.\A[4] (N2235),
	.\A[3] (N2234),
	.\A[2] (N2233),
	.\A[1] (N2232),
	.\A[0] (N2231),
	.\B[8] (n1503),
	.\B[7] (n1502),
	.\B[6] (n1501),
	.\B[5] (n1500),
	.\B[4] (n1499),
	.\B[3] (n1498),
	.\B[2] (n1497),
	.\B[1] (n1496),
	.\B[0] (n1495),
	.\SUM[9] (N2250),
	.\SUM[8] (N2249),
	.\SUM[7] (N2248),
	.\SUM[6] (N2247),
	.\SUM[5] (N2246),
	.\SUM[4] (N2245),
	.\SUM[3] (N2244),
	.\SUM[2] (N2243),
	.\SUM[1] (N2206),
	.\SUM[0] (N2205));
   core_DW01_add_22_DW01_add_25 add_0_root_add_0_root_add_370_9 (.B({ N2174,
		N2173,
		N2172,
		N2171,
		N2170,
		N2169,
		N2168,
		N2167,
		N2166,
		N2165,
		N2164,
		N2163,
		N2162,
		N2161,
		N2160,
		N2159,
		N2158 }),
	.SUM({ N2268,
		N2267,
		N2266,
		N2265,
		N2264,
		N2263,
		N2262,
		N2261,
		N2260,
		N2259,
		N2258,
		N2257,
		N2256,
		N2255,
		N2254,
		N2253,
		N2252 }),
	.\A[10] (N2215),
	.\A[9] (N2214),
	.\A[8] (N2213),
	.\A[7] (N2212),
	.\A[6] (N2211),
	.\A[5] (N2210),
	.\A[4] (N2209),
	.\A[3] (N2208),
	.\A[2] (N2207),
	.\A[1] (N2206),
	.\A[0] (N2205));
   core_DW01_add_21_DW01_add_24 add_2_root_add_0_root_add_369_4 (.\A[7] (x[111]),
	.\A[6] (x[110]),
	.\A[5] (x[109]),
	.\A[4] (x[108]),
	.\A[3] (x[107]),
	.\A[2] (x[106]),
	.\A[1] (x[105]),
	.\A[0] (x[104]),
	.\B[7] (x[71]),
	.\B[6] (x[70]),
	.\B[5] (x[69]),
	.\B[4] (x[68]),
	.\B[3] (x[67]),
	.\B[2] (x[66]),
	.\B[1] (x[65]),
	.\B[0] (x[64]),
	.\SUM[8] (N2081),
	.\SUM[7] (N2080),
	.\SUM[6] (N2079),
	.\SUM[5] (N2078),
	.\SUM[4] (N2077),
	.\SUM[3] (N2076),
	.\SUM[2] (N2075),
	.\SUM[1] (N2074),
	.\SUM[0] (N2073));
   core_DW01_add_20_DW01_add_23 add_1_root_add_0_root_add_369_4 (.\A[7] (x[47]),
	.\A[6] (x[46]),
	.\A[5] (x[45]),
	.\A[4] (x[44]),
	.\A[3] (x[43]),
	.\A[2] (x[42]),
	.\A[1] (x[41]),
	.\A[0] (x[40]),
	.\B[7] (x[87]),
	.\B[6] (x[86]),
	.\B[5] (x[85]),
	.\B[4] (x[84]),
	.\B[3] (x[83]),
	.\B[2] (x[82]),
	.\B[1] (x[81]),
	.\B[0] (x[80]),
	.\SUM[8] (n1474),
	.\SUM[7] (n1473),
	.\SUM[6] (n1472),
	.\SUM[5] (n1471),
	.\SUM[4] (n1470),
	.\SUM[3] (n1469),
	.\SUM[2] (n1468),
	.\SUM[1] (n1467),
	.\SUM[0] (n1466));
   core_DW01_add_19_DW01_add_22 add_0_root_add_0_root_add_369_4 (.\A[8] (N2081),
	.\A[7] (N2080),
	.\A[6] (N2079),
	.\A[5] (N2078),
	.\A[4] (N2077),
	.\A[3] (N2076),
	.\A[2] (N2075),
	.\A[1] (N2074),
	.\A[0] (N2073),
	.\B[8] (n1474),
	.\B[7] (n1473),
	.\B[6] (n1472),
	.\B[5] (n1471),
	.\B[4] (n1470),
	.\B[3] (n1469),
	.\B[2] (n1468),
	.\B[1] (n1467),
	.\B[0] (n1466),
	.\SUM[9] (N2092),
	.\SUM[8] (N2091),
	.\SUM[7] (N2090),
	.\SUM[6] (N2089),
	.\SUM[5] (N2088),
	.\SUM[4] (N2087),
	.\SUM[3] (N2086),
	.\SUM[2] (N2085),
	.\SUM[1] (N2084),
	.\SUM[0] (N2083));
   core_DW01_add_18_DW01_add_21 add_1_root_add_0_root_add_369_9 (.B({ y[50],
		y[49],
		y[48],
		y[47],
		y[46],
		y[45],
		y[44],
		y[43],
		y[42],
		y[41],
		y[40],
		y[39],
		y[38],
		y[37],
		y[36],
		y[35],
		y[34] }),
	.SUM({ N2063,
		N2062,
		N2061,
		N2060,
		N2059,
		N2058,
		N2057,
		N2056,
		N2055,
		N2054,
		N2053,
		N2052,
		N2051,
		N2050,
		N2049,
		N2048,
		N2047 }),
	.\A[10] (N2092),
	.\A[9] (N2091),
	.\A[8] (N2090),
	.\A[7] (N2089),
	.\A[6] (N2088),
	.\A[5] (N2087),
	.\A[4] (N2086),
	.\A[3] (N2085),
	.\A[2] (N2084),
	.\A[1] (N2083));
   core_DW01_add_17_DW01_add_20 add_1_root_add_0_root_add_369_8 (.\A[7] (x[119]),
	.\A[6] (x[118]),
	.\A[5] (x[117]),
	.\A[4] (x[116]),
	.\A[3] (x[115]),
	.\A[2] (x[114]),
	.\A[1] (x[113]),
	.\A[0] (x[112]),
	.\B[7] (x[55]),
	.\B[6] (x[54]),
	.\B[5] (x[53]),
	.\B[4] (x[52]),
	.\B[3] (x[51]),
	.\B[2] (x[50]),
	.\B[1] (x[49]),
	.\B[0] (x[48]),
	.\SUM[8] (n1484),
	.\SUM[7] (n1483),
	.\SUM[6] (n1482),
	.\SUM[5] (n1481),
	.\SUM[4] (n1480),
	.\SUM[3] (n1479),
	.\SUM[2] (n1478),
	.\SUM[1] (n1477),
	.\SUM[0] (n1476));
   core_DW01_add_16_DW01_add_19 add_2_root_add_0_root_add_369_8 (.\A[7] (x[103]),
	.\A[6] (x[102]),
	.\A[5] (x[101]),
	.\A[4] (x[100]),
	.\A[3] (x[99]),
	.\A[2] (x[98]),
	.\A[1] (x[97]),
	.\A[0] (x[96]),
	.\B[7] (x[39]),
	.\B[6] (x[38]),
	.\B[5] (x[37]),
	.\B[4] (x[36]),
	.\B[3] (x[35]),
	.\B[2] (x[34]),
	.\B[1] (x[33]),
	.\B[0] (x[32]),
	.\SUM[8] (N2128),
	.\SUM[7] (N2127),
	.\SUM[6] (N2126),
	.\SUM[5] (N2125),
	.\SUM[4] (N2124),
	.\SUM[3] (N2123),
	.\SUM[2] (N2122),
	.\SUM[1] (N2121),
	.\SUM[0] (N2120));
   core_DW01_add_15_DW01_add_18 add_0_root_add_0_root_add_369_8 (.\A[8] (N2128),
	.\A[7] (N2127),
	.\A[6] (N2126),
	.\A[5] (N2125),
	.\A[4] (N2124),
	.\A[3] (N2123),
	.\A[2] (N2122),
	.\A[1] (N2121),
	.\A[0] (N2120),
	.\B[8] (n1484),
	.\B[7] (n1483),
	.\B[6] (n1482),
	.\B[5] (n1481),
	.\B[4] (n1480),
	.\B[3] (n1479),
	.\B[2] (n1478),
	.\B[1] (n1477),
	.\B[0] (n1476),
	.\SUM[9] (N2139),
	.\SUM[8] (N2138),
	.\SUM[7] (N2137),
	.\SUM[6] (N2136),
	.\SUM[5] (N2135),
	.\SUM[4] (N2134),
	.\SUM[3] (N2133),
	.\SUM[2] (N2132),
	.\SUM[1] (N2095),
	.\SUM[0] (N2094));
   core_DW01_add_13_DW01_add_16 add_0_root_add_0_root_add_369_9 (.B({ N2063,
		N2062,
		N2061,
		N2060,
		N2059,
		N2058,
		N2057,
		N2056,
		N2055,
		N2054,
		N2053,
		N2052,
		N2051,
		N2050,
		N2049,
		N2048,
		N2047 }),
	.SUM({ N2157,
		N2156,
		N2155,
		N2154,
		N2153,
		N2152,
		N2151,
		N2150,
		N2149,
		N2148,
		N2147,
		N2146,
		N2145,
		N2144,
		N2143,
		N2142,
		N2141 }),
	.\A[10] (N2104),
	.\A[9] (N2103),
	.\A[8] (N2102),
	.\A[7] (N2101),
	.\A[6] (N2100),
	.\A[5] (N2099),
	.\A[4] (N2098),
	.\A[3] (N2097),
	.\A[2] (N2096),
	.\A[1] (N2095),
	.\A[0] (N2094));
   core_DW01_add_12_DW01_add_15 add_2_root_add_0_root_add_365_4 (.\A[7] (x[23]),
	.\A[6] (x[22]),
	.\A[5] (x[21]),
	.\A[4] (x[20]),
	.\A[3] (x[19]),
	.\A[2] (x[18]),
	.\A[1] (x[17]),
	.\A[0] (x[16]),
	.\B[7] (x[63]),
	.\B[6] (x[62]),
	.\B[5] (x[61]),
	.\B[4] (x[60]),
	.\B[3] (x[59]),
	.\B[2] (x[58]),
	.\B[1] (x[57]),
	.\B[0] (x[56]),
	.\SUM[8] (N1969),
	.\SUM[7] (N1968),
	.\SUM[6] (N1967),
	.\SUM[5] (N1966),
	.\SUM[4] (N1965),
	.\SUM[3] (N1964),
	.\SUM[2] (N1963),
	.\SUM[1] (N1962),
	.\SUM[0] (N1961));
   core_DW01_add_11_DW01_add_14 add_1_root_add_0_root_add_365_4 (.\A[7] (x[47]),
	.\A[6] (x[46]),
	.\A[5] (x[45]),
	.\A[4] (x[44]),
	.\A[3] (x[43]),
	.\A[2] (x[42]),
	.\A[1] (x[41]),
	.\A[0] (x[40]),
	.\B[7] (x[87]),
	.\B[6] (x[86]),
	.\B[5] (x[85]),
	.\B[4] (x[84]),
	.\B[3] (x[83]),
	.\B[2] (x[82]),
	.\B[1] (x[81]),
	.\B[0] (x[80]),
	.\SUM[8] (n1445),
	.\SUM[7] (n1444),
	.\SUM[6] (n1443),
	.\SUM[5] (n1442),
	.\SUM[4] (n1441),
	.\SUM[3] (n1440),
	.\SUM[2] (n1439),
	.\SUM[1] (n1438),
	.\SUM[0] (n1437));
   core_DW01_add_10_DW01_add_13 add_0_root_add_0_root_add_365_4 (.\A[8] (N1969),
	.\A[7] (N1968),
	.\A[6] (N1967),
	.\A[5] (N1966),
	.\A[4] (N1965),
	.\A[3] (N1964),
	.\A[2] (N1963),
	.\A[1] (N1962),
	.\A[0] (N1961),
	.\B[8] (n1445),
	.\B[7] (n1444),
	.\B[6] (n1443),
	.\B[5] (n1442),
	.\B[4] (n1441),
	.\B[3] (n1440),
	.\B[2] (n1439),
	.\B[1] (n1438),
	.\B[0] (n1437),
	.\SUM[9] (N1980),
	.\SUM[8] (N1979),
	.\SUM[7] (N1978),
	.\SUM[6] (N1977),
	.\SUM[5] (N1976),
	.\SUM[4] (N1975),
	.\SUM[3] (N1974),
	.\SUM[2] (N1973),
	.\SUM[1] (N1972),
	.\SUM[0] (N1971));
   core_DW01_add_9_DW01_add_12 add_1_root_add_0_root_add_365_9 (.B({ y[33],
		y[32],
		y[31],
		y[30],
		y[29],
		y[28],
		y[27],
		y[26],
		y[25],
		y[24],
		y[23],
		y[22],
		y[21],
		y[20],
		y[19],
		y[18],
		y[17] }),
	.SUM({ N1951,
		N1950,
		N1949,
		N1948,
		N1947,
		N1946,
		N1945,
		N1944,
		N1943,
		N1942,
		N1941,
		N1940,
		N1939,
		N1938,
		N1937,
		N1936,
		N1935 }),
	.\A[10] (N1980),
	.\A[9] (N1979),
	.\A[8] (N1978),
	.\A[7] (N1977),
	.\A[6] (N1976),
	.\A[5] (N1975),
	.\A[4] (N1974),
	.\A[3] (N1973),
	.\A[2] (N1972),
	.\A[1] (N1971));
   core_DW01_add_8_DW01_add_11 add_1_root_add_0_root_add_365_8 (.\A[7] (x[95]),
	.\A[6] (x[94]),
	.\A[5] (x[93]),
	.\A[4] (x[92]),
	.\A[3] (x[91]),
	.\A[2] (x[90]),
	.\A[1] (x[89]),
	.\A[0] (x[88]),
	.\B[7] (x[79]),
	.\B[6] (x[78]),
	.\B[5] (x[77]),
	.\B[4] (x[76]),
	.\B[3] (x[75]),
	.\B[2] (x[74]),
	.\B[1] (x[73]),
	.\B[0] (x[72]),
	.\SUM[8] (n1455),
	.\SUM[7] (n1454),
	.\SUM[6] (n1453),
	.\SUM[5] (n1452),
	.\SUM[4] (n1451),
	.\SUM[3] (n1450),
	.\SUM[2] (n1449),
	.\SUM[1] (n1448),
	.\SUM[0] (n1447));
   core_DW01_add_7_DW01_add_10 add_2_root_add_0_root_add_365_8 (.\A[7] (x[15]),
	.\A[6] (x[14]),
	.\A[5] (x[13]),
	.\A[4] (x[12]),
	.\A[3] (x[11]),
	.\A[2] (x[10]),
	.\A[1] (x[9]),
	.\A[0] (x[8]),
	.\B[7] (x[31]),
	.\B[6] (x[30]),
	.\B[5] (x[29]),
	.\B[4] (x[28]),
	.\B[3] (x[27]),
	.\B[2] (x[26]),
	.\B[1] (x[25]),
	.\B[0] (x[24]),
	.\SUM[8] (N2016),
	.\SUM[7] (N2015),
	.\SUM[6] (N2014),
	.\SUM[5] (N2013),
	.\SUM[4] (N2012),
	.\SUM[3] (N2011),
	.\SUM[2] (N2010),
	.\SUM[1] (N2009),
	.\SUM[0] (N2008));
   core_DW01_add_6_DW01_add_9 add_0_root_add_0_root_add_365_8 (.\A[8] (N2016),
	.\A[7] (N2015),
	.\A[6] (N2014),
	.\A[5] (N2013),
	.\A[4] (N2012),
	.\A[3] (N2011),
	.\A[2] (N2010),
	.\A[1] (N2009),
	.\A[0] (N2008),
	.\B[8] (n1455),
	.\B[7] (n1454),
	.\B[6] (n1453),
	.\B[5] (n1452),
	.\B[4] (n1451),
	.\B[3] (n1450),
	.\B[2] (n1449),
	.\B[1] (n1448),
	.\B[0] (n1447),
	.\SUM[9] (N2027),
	.\SUM[8] (N2026),
	.\SUM[7] (N2025),
	.\SUM[6] (N2024),
	.\SUM[5] (N2023),
	.\SUM[4] (N2022),
	.\SUM[3] (N2021),
	.\SUM[2] (N2020),
	.\SUM[1] (N1983),
	.\SUM[0] (N1982));
   core_DW01_add_4_DW01_add_7 add_0_root_add_0_root_add_365_9 (.B({ N1951,
		N1950,
		N1949,
		N1948,
		N1947,
		N1946,
		N1945,
		N1944,
		N1943,
		N1942,
		N1941,
		N1940,
		N1939,
		N1938,
		N1937,
		N1936,
		N1935 }),
	.SUM({ N2045,
		N2044,
		N2043,
		N2042,
		N2041,
		N2040,
		N2039,
		N2038,
		N2037,
		N2036,
		N2035,
		N2034,
		N2033,
		N2032,
		N2031,
		N2030,
		N2029 }),
	.\A[10] (N1992),
	.\A[9] (N1991),
	.\A[8] (N1990),
	.\A[7] (N1989),
	.\A[6] (N1988),
	.\A[5] (N1987),
	.\A[4] (N1986),
	.\A[3] (N1985),
	.\A[2] (N1984),
	.\A[1] (N1983),
	.\A[0] (N1982));
   core_DW01_add_37_DW01_add_40 add_1_root_add_0_root_add_364_4 (.\A[7] (x[15]),
	.\A[6] (x[14]),
	.\A[5] (x[13]),
	.\A[4] (x[12]),
	.\A[3] (x[11]),
	.\A[2] (x[10]),
	.\A[1] (x[9]),
	.\A[0] (x[8]),
	.\B[7] (x[39]),
	.\B[6] (x[38]),
	.\B[5] (x[37]),
	.\B[4] (x[36]),
	.\B[3] (x[35]),
	.\B[2] (x[34]),
	.\B[1] (x[33]),
	.\B[0] (x[32]),
	.\SUM[8] (n1417),
	.\SUM[7] (n1416),
	.\SUM[6] (n1415),
	.\SUM[5] (n1414),
	.\SUM[4] (n1413),
	.\SUM[3] (n1412),
	.\SUM[2] (n1411),
	.\SUM[1] (n1410),
	.\SUM[0] (n1409));
   core_DW01_add_36_DW01_add_39 add_0_root_add_0_root_add_364_4 (.\A[8] (n1417),
	.\A[7] (n1416),
	.\A[6] (n1415),
	.\A[5] (n1414),
	.\A[4] (n1413),
	.\A[3] (n1412),
	.\A[2] (n1411),
	.\A[1] (n1410),
	.\A[0] (n1409),
	.\B[8] (N1858),
	.\B[7] (N1857),
	.\B[6] (N1856),
	.\B[5] (N1855),
	.\B[4] (N1854),
	.\B[3] (N1853),
	.\B[2] (N1852),
	.\B[1] (N1851),
	.\B[0] (N1850),
	.\SUM[9] (N1869),
	.\SUM[8] (N1868),
	.\SUM[7] (N1867),
	.\SUM[6] (N1866),
	.\SUM[5] (N1865),
	.\SUM[4] (N1864),
	.\SUM[3] (N1863),
	.\SUM[2] (N1862),
	.\SUM[1] (N1861),
	.\SUM[0] (N1860));
   core_DW01_add_35_DW01_add_38 add_1_root_add_0_root_add_364_9 (.B({ y[16],
		y[15],
		y[14],
		y[13],
		y[12],
		y[11],
		y[10],
		y[9],
		y[8],
		y[7],
		y[6],
		y[5],
		y[4],
		y[3],
		y[2],
		y[1],
		y[0] }),
	.SUM({ N1840,
		N1839,
		N1838,
		N1837,
		N1836,
		N1835,
		N1834,
		N1833,
		N1832,
		N1831,
		N1830,
		N1829,
		N1828,
		N1827,
		N1826,
		N1825,
		N1824 }),
	.\A[10] (N1869),
	.\A[9] (N1868),
	.\A[8] (N1867),
	.\A[7] (N1866),
	.\A[6] (N1865),
	.\A[5] (N1864),
	.\A[4] (N1863),
	.\A[3] (N1862),
	.\A[2] (N1861),
	.\A[1] (N1860));
   core_DW01_add_34_DW01_add_37 add_1_root_add_0_root_add_364_8 (.\A[7] (x[71]),
	.\A[6] (x[70]),
	.\A[5] (x[69]),
	.\A[4] (x[68]),
	.\A[3] (x[67]),
	.\A[2] (x[66]),
	.\A[1] (x[65]),
	.\A[0] (x[64]),
	.\B[7] (x[87]),
	.\B[6] (x[86]),
	.\B[5] (x[85]),
	.\B[4] (x[84]),
	.\B[3] (x[83]),
	.\B[2] (x[82]),
	.\B[1] (x[81]),
	.\B[0] (x[80]),
	.\SUM[8] (n1427),
	.\SUM[7] (n1426),
	.\SUM[6] (n1425),
	.\SUM[5] (n1424),
	.\SUM[4] (n1423),
	.\SUM[3] (n1422),
	.\SUM[2] (n1421),
	.\SUM[1] (n1420),
	.\SUM[0] (n1419));
   core_DW01_add_33_DW01_add_36 add_2_root_add_0_root_add_364_8 (.\A[7] (x[7]),
	.\A[6] (x[6]),
	.\A[5] (x[5]),
	.\A[4] (x[4]),
	.\A[3] (x[3]),
	.\A[2] (x[2]),
	.\A[1] (x[1]),
	.\A[0] (x[0]),
	.\B[7] (x[23]),
	.\B[6] (x[22]),
	.\B[5] (x[21]),
	.\B[4] (x[20]),
	.\B[3] (x[19]),
	.\B[2] (x[18]),
	.\B[1] (x[17]),
	.\B[0] (x[16]),
	.\SUM[8] (N1905),
	.\SUM[7] (N1904),
	.\SUM[6] (N1903),
	.\SUM[5] (N1902),
	.\SUM[4] (N1901),
	.\SUM[3] (N1900),
	.\SUM[2] (N1899),
	.\SUM[1] (N1898),
	.\SUM[0] (N1897));
   core_DW01_add_32_DW01_add_35 add_0_root_add_0_root_add_364_8 (.\A[8] (N1905),
	.\A[7] (N1904),
	.\A[6] (N1903),
	.\A[5] (N1902),
	.\A[4] (N1901),
	.\A[3] (N1900),
	.\A[2] (N1899),
	.\A[1] (N1898),
	.\A[0] (N1897),
	.\B[8] (n1427),
	.\B[7] (n1426),
	.\B[6] (n1425),
	.\B[5] (n1424),
	.\B[4] (n1423),
	.\B[3] (n1422),
	.\B[2] (n1421),
	.\B[1] (n1420),
	.\B[0] (n1419),
	.\SUM[9] (N1916),
	.\SUM[8] (N1915),
	.\SUM[7] (N1914),
	.\SUM[6] (N1913),
	.\SUM[5] (N1912),
	.\SUM[4] (N1911),
	.\SUM[3] (N1910),
	.\SUM[2] (N1909),
	.\SUM[1] (N1872),
	.\SUM[0] (N1871));
   core_DW01_add_30_DW01_add_33 add_0_root_add_0_root_add_364_9 (.B({ N1840,
		N1839,
		N1838,
		N1837,
		N1836,
		N1835,
		N1834,
		N1833,
		N1832,
		N1831,
		N1830,
		N1829,
		N1828,
		N1827,
		N1826,
		N1825,
		N1824 }),
	.SUM({ N1934,
		N1933,
		N1932,
		N1931,
		N1930,
		N1929,
		N1928,
		N1927,
		N1926,
		N1925,
		N1924,
		N1923,
		N1922,
		N1921,
		N1920,
		N1919,
		N1918 }),
	.\A[10] (N1881),
	.\A[9] (N1880),
	.\A[8] (N1879),
	.\A[7] (N1878),
	.\A[6] (N1877),
	.\A[5] (N1876),
	.\A[4] (N1875),
	.\A[3] (N1874),
	.\A[2] (N1873),
	.\A[1] (N1872),
	.\A[0] (N1871));
   DFFRX1 CONV_out_valid_3nxt_reg (.D(FE_DBTN0_n771),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.QN(n388));
   DFFRX1 CONV_out_valid_2nxt_reg (.D(N2496),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.QN(n389));
   DFFRX1 CONV_out_valid_nxt_reg (.D(N2497),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.QN(n390));
   DFFRX1 op_mode_reg_3_ (.D(i_op_mode[3]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n453));
   DFFRX1 op_mode_reg_2_ (.D(i_op_mode[2]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n454));
   DFFRX1 op_mode_reg_1_ (.D(i_op_mode[1]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n455));
   DFFRX1 op_mode_reg_0_ (.D(i_op_mode[0]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n456));
   DFFRX1 op_valid_reg (.D(i_op_valid),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n1405));
   DFFRX1 dis_size_nxt_reg_4_ (.D(n750),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n1207));
   DFFRX1 dis_size_nxt_reg_3_ (.D(n748),
	.CK(CTS_20),
	.RN(i_rst_n),
	.QN(n1206));
   DFFRX1 y_reg_3__16_ (.D(n603),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[67]),
	.QN(n1276));
   DFFRX1 y_reg_2__16_ (.D(n5860),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[50]),
	.QN(n1259));
   DFFRX1 y_reg_1__16_ (.D(n569),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[33]),
	.QN(n1242));
   DFFRX1 y_reg_0__16_ (.D(n552),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[16]),
	.QN(n1225));
   DFFRX1 y_reg_3__15_ (.D(n602),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[66]),
	.QN(n1275));
   DFFRX1 y_reg_2__15_ (.D(n5850),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[49]),
	.QN(n1258));
   DFFRX1 y_reg_1__15_ (.D(n568),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[32]),
	.QN(n1241));
   DFFRX1 y_reg_0__15_ (.D(n5510),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[15]),
	.QN(n1224));
   DFFRX1 y_reg_3__14_ (.D(n601),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[65]),
	.QN(n1274));
   DFFRX1 y_reg_2__14_ (.D(n584),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[48]),
	.QN(n1257));
   DFFRX1 y_reg_1__14_ (.D(n567),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[31]),
	.QN(n1240));
   DFFRX1 y_reg_0__14_ (.D(n5500),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[14]),
	.QN(n1223));
   DFFRX1 y_reg_3__13_ (.D(n600),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[64]),
	.QN(n1273));
   DFFRX1 y_reg_2__13_ (.D(n583),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[47]),
	.QN(n1256));
   DFFRX1 y_reg_1__13_ (.D(n566),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[30]),
	.QN(n1239));
   DFFRX1 y_reg_0__13_ (.D(n5490),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[13]),
	.QN(n1222));
   DFFRX1 y_reg_3__12_ (.D(n599),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[63]),
	.QN(n1272));
   DFFRX1 y_reg_2__12_ (.D(n582),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[46]),
	.QN(n1255));
   DFFRX1 y_reg_1__12_ (.D(n565),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[29]),
	.QN(n1238));
   DFFRX1 y_reg_0__12_ (.D(n5480),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[12]),
	.QN(n1221));
   DFFRX1 y_reg_3__11_ (.D(n598),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[62]),
	.QN(n1271));
   DFFRX1 y_reg_2__11_ (.D(n581),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(y[45]),
	.QN(n1254));
   DFFRX1 y_reg_1__11_ (.D(n564),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[28]),
	.QN(n1237));
   DFFRX1 y_reg_0__11_ (.D(n5470),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[11]),
	.QN(n1220));
   DFFRX1 y_reg_3__10_ (.D(n597),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[61]),
	.QN(n1270));
   DFFRX1 y_reg_2__10_ (.D(n580),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[44]),
	.QN(n1253));
   DFFRX1 y_reg_1__10_ (.D(n563),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[27]),
	.QN(n1236));
   DFFRX1 y_reg_0__10_ (.D(n5460),
	.CK(CTS_23),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[10]),
	.QN(n1219));
   DFFRX1 y_reg_3__9_ (.D(n596),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[60]),
	.QN(n1269));
   DFFRX1 y_reg_2__9_ (.D(n579),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[43]),
	.QN(n1252));
   DFFRX1 y_reg_1__9_ (.D(n562),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[26]),
	.QN(n1235));
   DFFRX1 y_reg_0__9_ (.D(n5450),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[9]),
	.QN(n1218));
   DFFRX1 y_reg_3__8_ (.D(n5950),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[59]),
	.QN(n1268));
   DFFRX1 y_reg_2__8_ (.D(n578),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[42]),
	.QN(n1251));
   DFFRX1 y_reg_1__8_ (.D(n561),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[25]),
	.QN(n1234));
   DFFRX1 y_reg_0__8_ (.D(n5440),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[8]),
	.QN(n1217));
   DFFRX1 y_reg_3__7_ (.D(n5940),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[58]),
	.QN(n1267));
   DFFRX1 y_reg_2__7_ (.D(n577),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[41]),
	.QN(n1250));
   DFFRX1 y_reg_1__7_ (.D(n560),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[24]),
	.QN(n1233));
   DFFRX1 y_reg_0__7_ (.D(n5430),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[7]),
	.QN(n1216));
   DFFRX1 y_reg_3__6_ (.D(n5930),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[57]),
	.QN(n1266));
   DFFRX1 y_reg_2__6_ (.D(n576),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[40]),
	.QN(n1249));
   DFFRX1 y_reg_1__6_ (.D(n559),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[23]),
	.QN(n1232));
   DFFRX1 y_reg_0__6_ (.D(n5420),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[6]),
	.QN(n1215));
   DFFRX1 y_reg_3__5_ (.D(n5920),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[56]),
	.QN(n1265));
   DFFRX1 y_reg_2__5_ (.D(n575),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[39]),
	.QN(n1248));
   DFFRX1 y_reg_1__5_ (.D(n558),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[22]),
	.QN(n1231));
   DFFRX1 y_reg_0__5_ (.D(n5410),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[5]),
	.QN(n1214));
   DFFRX1 y_reg_3__4_ (.D(n5910),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(y[55]),
	.QN(n1264));
   DFFRX1 y_reg_2__4_ (.D(n574),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[38]),
	.QN(n1247));
   DFFRX1 y_reg_1__4_ (.D(n557),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[21]),
	.QN(n1230));
   DFFRX1 y_reg_0__4_ (.D(n540),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[4]),
	.QN(n1213));
   DFFRX1 x_reg_3__7_ (.D(n635),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[31]),
	.QN(n1308));
   DFFRX1 x_reg_15__7_ (.D(n731),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[127]),
	.QN(n1404));
   DFFRX1 x_reg_12__7_ (.D(n707),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[103]),
	.QN(n1380));
   DFFRX1 x_reg_0__7_ (.D(n611),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[7]),
	.QN(n1284));
   DFFRX1 x_reg_11__7_ (.D(n699),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[95]),
	.QN(n1372));
   DFFRX1 x_reg_7__7_ (.D(n667),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[63]),
	.QN(n1340));
   DFFRX1 x_reg_13__7_ (.D(n715),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[111]),
	.QN(n1388));
   DFFRX1 x_reg_2__7_ (.D(n627),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[23]),
	.QN(n1300));
   DFFRX1 x_reg_6__7_ (.D(n659),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[55]),
	.QN(n1332));
   DFFRX1 x_reg_14__7_ (.D(n723),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[119]),
	.QN(n1396));
   DFFRX1 x_reg_8__7_ (.D(n675),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[71]),
	.QN(n1348));
   DFFRX1 x_reg_1__7_ (.D(n619),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[15]),
	.QN(n1292));
   DFFRX1 x_reg_4__7_ (.D(n643),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[39]),
	.QN(n1316));
   DFFRX1 y_reg_3__3_ (.D(n5900),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[54]),
	.QN(n1263));
   DFFRX1 y_reg_2__3_ (.D(n573),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[37]),
	.QN(n1246));
   DFFRX1 y_reg_1__3_ (.D(n556),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[20]),
	.QN(n1229));
   DFFRX1 y_reg_0__3_ (.D(n539),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[3]),
	.QN(n1212));
   DFFRX1 x_reg_3__6_ (.D(n634),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[30]),
	.QN(n1307));
   DFFRX1 x_reg_15__6_ (.D(n730),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[126]),
	.QN(n1403));
   DFFRX1 x_reg_12__6_ (.D(n706),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[102]),
	.QN(n1379));
   DFFRX1 x_reg_0__6_ (.D(n610),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[6]),
	.QN(n1283));
   DFFRX1 x_reg_7__6_ (.D(n666),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[62]),
	.QN(n1339));
   DFFRX1 x_reg_13__6_ (.D(n714),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[110]),
	.QN(n1387));
   DFFRX1 x_reg_2__6_ (.D(n626),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[22]),
	.QN(n1299));
   DFFRX1 x_reg_11__6_ (.D(n698),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[94]),
	.QN(n1371));
   DFFRX1 x_reg_6__6_ (.D(n658),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[54]),
	.QN(n1331));
   DFFRX1 y_reg_3__2_ (.D(n5890),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[53]),
	.QN(n1262));
   DFFRX1 y_reg_2__2_ (.D(n572),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[36]),
	.QN(n1245));
   DFFRX1 y_reg_1__2_ (.D(n555),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[19]),
	.QN(n1228));
   DFFRX1 y_reg_0__2_ (.D(n538),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[2]),
	.QN(n1211));
   DFFRX1 x_reg_4__6_ (.D(n642),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[38]),
	.QN(n1315));
   DFFRX1 x_reg_14__6_ (.D(n722),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[118]),
	.QN(n1395));
   DFFRX1 x_reg_8__6_ (.D(n674),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[70]),
	.QN(n1347));
   DFFRX1 x_reg_1__6_ (.D(n618),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[14]),
	.QN(n1291));
   DFFRX1 y_reg_2__1_ (.D(n571),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[35]),
	.QN(n1244));
   DFFRX1 y_reg_1__1_ (.D(n554),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[18]),
	.QN(n1227));
   DFFRX1 y_reg_3__1_ (.D(n5880),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[52]),
	.QN(n1261));
   DFFRX1 y_reg_0__1_ (.D(n537),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[1]),
	.QN(n1210));
   DFFRX1 x_reg_3__5_ (.D(n633),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[29]),
	.QN(n1306));
   DFFRX1 y_reg_3__0_ (.D(n5870),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[51]),
	.QN(n1260));
   DFFRX1 y_reg_2__0_ (.D(n570),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[34]),
	.QN(n1243));
   DFFRX1 y_reg_1__0_ (.D(n553),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[17]),
	.QN(n1226));
   DFFRX1 y_reg_0__0_ (.D(n536),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(y[0]),
	.QN(n1209));
   DFFRX1 x_reg_15__5_ (.D(n729),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[125]),
	.QN(n1402));
   DFFRX1 x_reg_12__5_ (.D(n705),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[101]),
	.QN(n1378));
   DFFRX1 x_reg_0__5_ (.D(n609),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[5]),
	.QN(n1282));
   DFFRX1 x_reg_7__5_ (.D(n665),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[61]),
	.QN(n1338));
   DFFRX1 x_reg_13__5_ (.D(n713),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[109]),
	.QN(n1386));
   DFFRX1 x_reg_2__5_ (.D(n625),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[21]),
	.QN(n1298));
   DFFRX1 x_reg_11__5_ (.D(n697),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[93]),
	.QN(n1370));
   DFFRX1 x_reg_6__5_ (.D(n657),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[53]),
	.QN(n1330));
   DFFRX1 x_reg_4__5_ (.D(n641),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[37]),
	.QN(n1314));
   DFFRX1 x_reg_14__5_ (.D(n721),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[117]),
	.QN(n1394));
   DFFRX1 x_reg_8__5_ (.D(n673),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[69]),
	.QN(n1346));
   DFFRX1 x_reg_1__5_ (.D(n617),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[13]),
	.QN(n1290));
   DFFRX1 x_reg_3__4_ (.D(n632),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[28]),
	.QN(n1305));
   DFFRX1 x_reg_15__4_ (.D(n728),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[124]),
	.QN(n1401));
   DFFRX1 x_reg_12__4_ (.D(n704),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[100]),
	.QN(n1377));
   DFFRX1 x_reg_0__4_ (.D(n608),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[4]),
	.QN(n1281));
   DFFRX1 x_reg_7__4_ (.D(n664),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[60]),
	.QN(n1337));
   DFFRX1 x_reg_13__4_ (.D(n712),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[108]),
	.QN(n1385));
   DFFRX1 x_reg_2__4_ (.D(n624),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[20]),
	.QN(n1297));
   DFFRX1 x_reg_11__4_ (.D(n696),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[92]),
	.QN(n1369));
   DFFRX1 x_reg_6__4_ (.D(n656),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[52]),
	.QN(n1329));
   DFFRX1 x_reg_4__4_ (.D(n640),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[36]),
	.QN(n1313));
   DFFRX1 x_reg_14__4_ (.D(n720),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[116]),
	.QN(n1393));
   DFFRX1 x_reg_8__4_ (.D(n672),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[68]),
	.QN(n1345));
   DFFRX1 x_reg_1__4_ (.D(n616),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[12]),
	.QN(n1289));
   DFFRX1 x_reg_3__3_ (.D(n631),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[27]),
	.QN(n1304));
   DFFRX1 x_reg_15__3_ (.D(n727),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[123]),
	.QN(n1400));
   DFFRX1 x_reg_12__3_ (.D(n703),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[99]),
	.QN(n1376));
   DFFRX1 x_reg_0__3_ (.D(n607),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[3]),
	.QN(n1280));
   DFFRX1 x_reg_7__3_ (.D(n663),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[59]),
	.QN(n1336));
   DFFRX1 x_reg_13__3_ (.D(n711),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[107]),
	.QN(n1384));
   DFFRX1 x_reg_2__3_ (.D(n623),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[19]),
	.QN(n1296));
   DFFRX1 x_reg_11__3_ (.D(n695),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[91]),
	.QN(n1368));
   DFFRX1 x_reg_6__3_ (.D(n655),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[51]),
	.QN(n1328));
   DFFRX1 x_reg_4__3_ (.D(n639),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[35]),
	.QN(n1312));
   DFFRX1 x_reg_14__3_ (.D(n719),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[115]),
	.QN(n1392));
   DFFRX1 x_reg_8__3_ (.D(n671),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[67]),
	.QN(n1344));
   DFFRX1 x_reg_1__3_ (.D(n615),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[11]),
	.QN(n1288));
   DFFRX1 x_reg_3__2_ (.D(n630),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[26]),
	.QN(n1303));
   DFFRX1 x_reg_15__2_ (.D(n726),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[122]),
	.QN(n1399));
   DFFRX1 x_reg_12__2_ (.D(n702),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[98]),
	.QN(n1375));
   DFFRX1 x_reg_0__2_ (.D(n606),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[2]),
	.QN(n1279));
   DFFRX1 x_reg_7__2_ (.D(n662),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[58]),
	.QN(n1335));
   DFFRX1 x_reg_13__2_ (.D(n710),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[106]),
	.QN(n1383));
   DFFRX1 x_reg_2__2_ (.D(n622),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[18]),
	.QN(n1295));
   DFFRX1 x_reg_11__2_ (.D(n694),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[90]),
	.QN(n1367));
   DFFRX1 x_reg_6__2_ (.D(n654),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[50]),
	.QN(n1327));
   DFFRX1 x_reg_4__2_ (.D(n638),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[34]),
	.QN(n1311));
   DFFRX1 x_reg_14__2_ (.D(n718),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[114]),
	.QN(n1391));
   DFFRX1 x_reg_8__2_ (.D(n670),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[66]),
	.QN(n1343));
   DFFRX1 x_reg_1__2_ (.D(n614),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[10]),
	.QN(n1287));
   DFFRX1 x_reg_3__1_ (.D(n629),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[25]),
	.QN(n1302));
   DFFRX1 x_reg_15__1_ (.D(n725),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[121]),
	.QN(n1398));
   DFFRX1 x_reg_12__1_ (.D(n701),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[97]),
	.QN(n1374));
   DFFRX1 x_reg_0__1_ (.D(n605),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[1]),
	.QN(n1278));
   DFFRX1 x_reg_11__1_ (.D(n693),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[89]),
	.QN(n1366));
   DFFRX1 x_reg_7__1_ (.D(n661),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[57]),
	.QN(n1334));
   DFFRX1 x_reg_13__1_ (.D(n709),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[105]),
	.QN(n1382));
   DFFRX1 x_reg_2__1_ (.D(n621),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[17]),
	.QN(n1294));
   DFFRX1 x_reg_6__1_ (.D(n653),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[49]),
	.QN(n1326));
   DFFRX1 x_reg_14__1_ (.D(n717),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[113]),
	.QN(n1390));
   DFFRX1 x_reg_8__1_ (.D(n669),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[65]),
	.QN(n1342));
   DFFRX1 x_reg_1__1_ (.D(n613),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[9]),
	.QN(n1286));
   DFFRX1 x_reg_4__1_ (.D(n637),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[33]),
	.QN(n1310));
   DFFRX1 x_reg_3__0_ (.D(n628),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[24]),
	.QN(n1301));
   DFFRX1 x_reg_15__0_ (.D(n724),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[120]),
	.QN(n1397));
   DFFRX1 x_reg_12__0_ (.D(n700),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[96]),
	.QN(n1373));
   DFFRX1 x_reg_0__0_ (.D(n604),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[0]),
	.QN(n1277));
   DFFRX1 x_reg_7__0_ (.D(n660),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[56]),
	.QN(n1333));
   DFFRX1 x_reg_14__0_ (.D(n716),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[112]),
	.QN(n1389));
   DFFRX1 x_reg_11__0_ (.D(n692),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[88]),
	.QN(n1365));
   DFFRX1 x_reg_8__0_ (.D(n668),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[64]),
	.QN(n1341));
   DFFRX1 x_reg_4__0_ (.D(n636),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[32]),
	.QN(n1309));
   DFFRX1 x_reg_13__0_ (.D(n708),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[104]),
	.QN(n1381));
   DFFRX1 x_reg_2__0_ (.D(n620),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[16]),
	.QN(n1293));
   DFFRX1 x_reg_1__0_ (.D(n612),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[8]),
	.QN(n1285));
   DFFRX1 DIS_out_valid_reg (.D(n461),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.QN(n449));
   DFFRX1 z_reg_0__12_ (.D(n496),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[12]),
	.QN(n4360));
   DFFRX1 z_reg_1__7_ (.D(n5040),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[20]),
	.QN(n428));
   DFFRX1 z_reg_1__6_ (.D(n5030),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[19]),
	.QN(n429));
   DFFRX1 z_reg_1__5_ (.D(n5020),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[18]),
	.QN(n430));
   DFFRX1 z_reg_1__4_ (.D(n5010),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[17]),
	.QN(n431));
   DFFRX1 z_reg_1__3_ (.D(n5000),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[16]),
	.QN(n432));
   DFFRX1 z_reg_1__2_ (.D(n4990),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[15]),
	.QN(n433));
   DFFRX1 z_reg_1__1_ (.D(n4980),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[14]),
	.QN(n434));
   DFFRX1 z_reg_1__0_ (.D(n4970),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[13]),
	.QN(n435));
   DFFRX1 z_reg_1__9_ (.D(n5060),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[22]),
	.QN(n426));
   DFFRX1 z_reg_1__8_ (.D(n5050),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[21]),
	.QN(n427));
   DFFRX1 x_reg_9__7_ (.D(n683),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[79]),
	.QN(n1356));
   DFFRX1 x_reg_5__7_ (.D(n651),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[47]),
	.QN(n1324));
   DFFRX1 x_reg_10__7_ (.D(n691),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[87]),
	.QN(n1364));
   DFFRX1 x_reg_9__6_ (.D(n682),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[78]),
	.QN(n1355));
   DFFRX1 x_reg_5__6_ (.D(n650),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[46]),
	.QN(n1323));
   DFFRX1 x_reg_10__6_ (.D(n690),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[86]),
	.QN(n1363));
   DFFRX1 x_reg_9__5_ (.D(n681),
	.CK(CTS_22),
	.RN(FE_OFN2_i_rst_n),
	.Q(x[77]),
	.QN(n1354));
   DFFRX1 x_reg_5__5_ (.D(n649),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[45]),
	.QN(n1322));
   DFFRX1 x_reg_10__5_ (.D(n689),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(x[85]),
	.QN(n1362));
   DFFRX1 x_reg_9__4_ (.D(n680),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[76]),
	.QN(n1353));
   DFFRX1 x_reg_5__4_ (.D(n648),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[44]),
	.QN(n1321));
   DFFRX1 x_reg_10__4_ (.D(n688),
	.CK(CTS_22),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[84]),
	.QN(n1361));
   DFFRX1 x_reg_9__3_ (.D(n679),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[75]),
	.QN(n1352));
   DFFRX1 x_reg_5__3_ (.D(n647),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[43]),
	.QN(n1320));
   DFFRX1 x_reg_10__3_ (.D(n687),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[83]),
	.QN(n1360));
   DFFRX1 x_reg_9__2_ (.D(n678),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[74]),
	.QN(n1351));
   DFFRX1 x_reg_5__2_ (.D(n646),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[42]),
	.QN(n1319));
   DFFRX1 x_reg_10__2_ (.D(n686),
	.CK(CTS_21),
	.RN(FE_OFN1_i_rst_n),
	.Q(x[82]),
	.QN(n1359));
   DFFRX1 x_reg_9__1_ (.D(n677),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[73]),
	.QN(n1350));
   DFFRX1 x_reg_5__1_ (.D(n645),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[41]),
	.QN(n1318));
   DFFRX1 x_reg_10__1_ (.D(n685),
	.CK(CTS_21),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[81]),
	.QN(n1358));
   DFFRX1 x_reg_9__0_ (.D(n676),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[72]),
	.QN(n1349));
   DFFRX1 x_reg_6__0_ (.D(n652),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[48]),
	.QN(n1325));
   DFFRX1 in_ready_reg (.D(LTIE_LTIEHI_NET),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(o_in_ready));
   DFFSX1 dis_size_reg_5_ (.D(n751),
	.CK(CTS_20),
	.SN(i_rst_n),
	.Q(N318),
	.QN(n480));
   DFFSX1 dis_size_nxt_reg_5_ (.D(n752),
	.CK(CTS_20),
	.SN(i_rst_n),
	.QN(n1208));
   DFFRX1 origin_row_reg_2_ (.D(n735),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(origin_row[2]),
	.QN(n1095));
   DFFRX1 origin_col_reg_2_ (.D(n736),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(N543),
	.QN(n1127));
   DFFRX1 state_reg_3_ (.D(state_nxt[3]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(state[3]),
	.QN(n1049));
   DFFRX1 sram_addr_prev_reg_1_ (.D(sram_addr[1]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(N220),
	.QN(n914));
   DFFRX1 origin_col_reg_0_ (.D(n737),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(N541),
	.QN(N215));
   DFFRX1 x_reg_5__0_ (.D(n644),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[40]),
	.QN(n1317));
   DFFRX1 op_reg_2_ (.D(n459),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(op[2]),
	.QN(n1197));
   DFFRX1 op_reg_3_ (.D(n460),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(op[3]),
	.QN(n1198));
   DFFRX1 op_reg_1_ (.D(n458),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(op[1]),
	.QN(n1144));
   DFFRX1 op_reg_0_ (.D(n457),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(op[0]),
	.QN(n1142));
   DFFRX1 op_ready_reg (.D(op_ready_nxt),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(o_op_ready));
   DFFRX1 origin_row_reg_1_ (.D(n733),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(origin_row[1]),
	.QN(n805));
   DFFRX1 CONV_out_valid_reg (.D(N2498),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(n1406),
	.QN(n1131));
   DFFRX1 state_reg_1_ (.D(state_nxt[1]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(state[1]),
	.QN(n1025));
   DFFRX1 sram_addr_prev_reg_0_ (.D(sram_addr[0]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(N219),
	.QN(n913));
   DFFRX1 in_data_reg_7_ (.D(i_in_data[7]),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(in_data[7]));
   DFFRX1 in_data_reg_6_ (.D(i_in_data[6]),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(in_data[6]));
   DFFRX1 in_data_reg_5_ (.D(i_in_data[5]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(in_data[5]));
   DFFRX1 in_data_reg_4_ (.D(i_in_data[4]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(in_data[4]));
   DFFRX1 in_data_reg_3_ (.D(i_in_data[3]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(in_data[3]));
   DFFRX1 in_data_reg_2_ (.D(i_in_data[2]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(in_data[2]));
   DFFRX1 in_data_reg_1_ (.D(i_in_data[1]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(in_data[1]));
   DFFRX1 in_data_reg_0_ (.D(i_in_data[0]),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(in_data[0]));
   DFFRX1 CONV_out_num_reg_1_ (.D(N2483),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(N222),
	.QN(n945));
   DFFRX1 CONV_out_num_reg_0_ (.D(N2482),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(N221),
	.QN(n946));
   DFFRX1 dis_size_reg_4_ (.D(n749),
	.CK(CTS_20),
	.RN(i_rst_n),
	.Q(N317),
	.QN(n481));
   DFFRX1 dis_size_reg_3_ (.D(n747),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(N316),
	.QN(n482));
   DFFRX1 counter_256_reg_7_ (.D(n738),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[7]),
	.QN(n451));
   DFFRX1 counter_256_reg_6_ (.D(n739),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[6]),
	.QN(n473));
   DFFRX1 counter_256_reg_5_ (.D(n740),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[5]),
	.QN(n474));
   DFFRX1 counter_256_reg_4_ (.D(n741),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[4]),
	.QN(n475));
   DFFRX1 counter_256_reg_3_ (.D(n742),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[3]),
	.QN(n476));
   DFFRX1 counter_256_reg_2_ (.D(n743),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[2]),
	.QN(n477));
   DFFRX1 counter_256_reg_1_ (.D(n744),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[1]),
	.QN(n299));
   DFFRX1 counter_256_reg_0_ (.D(n745),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_256[0]),
	.QN(n304));
   DFFRX1 z_reg_2__10_ (.D(n520),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[36]),
	.QN(n4120));
   DFFRX1 z_reg_2__9_ (.D(n519),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[35]),
	.QN(n4130));
   DFFRX1 z_reg_2__8_ (.D(n518),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[34]),
	.QN(n4140));
   DFFRX1 z_reg_2__7_ (.D(n517),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[33]),
	.QN(n4150));
   DFFRX1 z_reg_2__6_ (.D(n516),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[32]),
	.QN(n4160));
   DFFRX1 z_reg_2__5_ (.D(n515),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[31]),
	.QN(n4170));
   DFFRX1 z_reg_2__4_ (.D(n514),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[30]),
	.QN(n4180));
   DFFRX1 z_reg_2__3_ (.D(n513),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[29]),
	.QN(n4190));
   DFFRX1 z_reg_2__2_ (.D(n512),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[28]),
	.QN(n4200));
   DFFRX1 z_reg_2__1_ (.D(n511),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[27]),
	.QN(n421));
   DFFRX1 z_reg_2__0_ (.D(n510),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[26]),
	.QN(n422));
   DFFRX1 z_reg_3__10_ (.D(n533),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[49]),
	.QN(n399));
   DFFRX1 z_reg_3__9_ (.D(n532),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[48]),
	.QN(n400));
   DFFRX1 z_reg_3__8_ (.D(n531),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[47]),
	.QN(n401));
   DFFRX1 z_reg_3__7_ (.D(n530),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[46]),
	.QN(n402));
   DFFRX1 z_reg_3__6_ (.D(n529),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[45]),
	.QN(n403));
   DFFRX1 z_reg_3__5_ (.D(n528),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[44]),
	.QN(n404));
   DFFRX1 z_reg_3__4_ (.D(n527),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[43]),
	.QN(n405));
   DFFRX1 z_reg_3__3_ (.D(n526),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[42]),
	.QN(n406));
   DFFRX1 z_reg_3__2_ (.D(n525),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[41]),
	.QN(n407));
   DFFRX1 z_reg_3__1_ (.D(n524),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[40]),
	.QN(n408));
   DFFRX1 z_reg_3__0_ (.D(n523),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[39]),
	.QN(n409));
   DFFRX1 z_reg_3__11_ (.D(n534),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[50]),
	.QN(n398));
   DFFRX1 z_reg_2__11_ (.D(n521),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[37]),
	.QN(n4110));
   DFFRX1 z_reg_3__12_ (.D(n535),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[51]),
	.QN(n397));
   DFFRX1 z_reg_2__12_ (.D(n522),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[38]),
	.QN(n4100));
   DFFRX1 counter_2047_reg_10_ (.D(n754),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[10]),
	.QN(n462));
   DFFRX1 counter_2047_reg_9_ (.D(n755),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[9]),
	.QN(n463));
   DFFRX1 counter_2047_reg_8_ (.D(n756),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[8]),
	.QN(n464));
   DFFRX1 counter_2047_reg_7_ (.D(n757),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[7]),
	.QN(n465));
   DFFRX1 counter_2047_reg_6_ (.D(n758),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[6]),
	.QN(n466));
   DFFRX1 counter_2047_reg_5_ (.D(n759),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[5]),
	.QN(n467));
   DFFRX1 counter_2047_reg_4_ (.D(n760),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[4]),
	.QN(n468));
   DFFRX1 counter_2047_reg_3_ (.D(n761),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[3]),
	.QN(n469));
   DFFRX1 counter_2047_reg_2_ (.D(n762),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[2]),
	.QN(n470));
   DFFRX1 counter_2047_reg_1_ (.D(n763),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[1]),
	.QN(n471));
   DFFRX1 counter_2047_reg_0_ (.D(n764),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(counter_2047[0]),
	.QN(n472));
   DFFRX1 z_reg_1__12_ (.D(n509),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[25]),
	.QN(n423));
   DFFRX1 z_reg_1__11_ (.D(n508),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[24]),
	.QN(n424));
   DFFRX1 z_reg_0__11_ (.D(n495),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[11]),
	.QN(n4370));
   DFFRX1 z_reg_0__10_ (.D(n494),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[10]),
	.QN(n4380));
   DFFRX1 z_reg_0__9_ (.D(n493),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[9]),
	.QN(n4390));
   DFFRX1 z_reg_0__8_ (.D(n492),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[8]),
	.QN(n4400));
   DFFRX1 z_reg_0__7_ (.D(n491),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[7]),
	.QN(n4410));
   DFFRX1 z_reg_0__6_ (.D(n490),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[6]),
	.QN(n4420));
   DFFRX1 z_reg_0__5_ (.D(n489),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[5]),
	.QN(n4430));
   DFFRX1 z_reg_0__4_ (.D(n488),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[4]),
	.QN(n444));
   DFFRX1 z_reg_0__3_ (.D(n487),
	.CK(CTS_22),
	.RN(FE_OFN3_i_rst_n),
	.Q(z[3]),
	.QN(n445));
   DFFRX1 z_reg_0__2_ (.D(n486),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[2]),
	.QN(n446));
   DFFRX1 z_reg_0__1_ (.D(n485),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[1]),
	.QN(n447));
   DFFRX1 z_reg_0__0_ (.D(n484),
	.CK(CTS_22),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[0]),
	.QN(n448));
   DFFRX1 z_reg_1__10_ (.D(n5070),
	.CK(CTS_23),
	.RN(FE_OFN4_i_rst_n),
	.Q(z[23]),
	.QN(n425));
   DFFRX1 origin_col_reg_1_ (.D(n732),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(N542),
	.QN(n851));
   DFFRX1 origin_row_reg_0_ (.D(n734),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(conv_row_3__0_),
	.QN(N544));
   DFFRX1 x_reg_10__0_ (.D(n684),
	.CK(CTS_20),
	.RN(FE_OFN0_i_rst_n),
	.Q(x[80]),
	.QN(n1357));
   DFFRX1 state_reg_0_ (.D(state_nxt[0]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(state[0]),
	.QN(n1023));
   DFFRX1 state_reg_2_ (.D(state_nxt[2]),
	.CK(CTS_20),
	.RN(FE_OFN17_i_rst_n),
	.Q(state[2]),
	.QN(n1024));
   CLKINVX1 U552 (.A(counter_256[3]),
	.Y(n1076));
   XOR2X1 U554 (.A(n809),
	.B(LTIE_LTIEHI_NET),
	.Y(n1077));
   AND3X1 U557 (.A(n1046),
	.B(LTIE_LTIEHI_NET),
	.C(n480),
	.Y(n1044));
   CLKINVX1 U558 (.A(N316),
	.Y(N305));
   CLKINVX1 U559 (.A(n481),
	.Y(n1045));
   NOR2BX1 U560 (.AN(n1138),
	.B(n481),
	.Y(n1145));
   OA21X4 U561 (.A0(n1055),
	.A1(n1085),
	.B0(n1175),
	.Y(n766));
   OA21X4 U562 (.A0(n1055),
	.A1(n1086),
	.B0(n1175),
	.Y(n767));
   OA21X4 U563 (.A0(n1055),
	.A1(n1087),
	.B0(n1175),
	.Y(n768));
   NOR2X1 U564 (.A(n1188),
	.B(n1055),
	.Y(n769));
   NAND2X2 U565 (.A(n1146),
	.B(n1191),
	.Y(n770));
   OR2X2 U566 (.A(n1068),
	.B(n1048),
	.Y(n771));
   NAND2X2 U567 (.A(n1146),
	.B(n771),
	.Y(n772));
   AND2X2 U569 (.A(n871),
	.B(n870),
	.Y(n773));
   AND2X2 U570 (.A(n865),
	.B(n864),
	.Y(n774));
   AND2X2 U571 (.A(n863),
	.B(n862),
	.Y(n775));
   AND2X2 U572 (.A(n861),
	.B(n860),
	.Y(n776));
   AND2X2 U573 (.A(n859),
	.B(n858),
	.Y(n777));
   AND2X2 U574 (.A(n857),
	.B(n856),
	.Y(n778));
   AND2X2 U575 (.A(n855),
	.B(n854),
	.Y(n779));
   AND2X2 U576 (.A(n853),
	.B(n852),
	.Y(n780));
   AND2X2 U577 (.A(n829),
	.B(n828),
	.Y(n781));
   AND2X2 U578 (.A(n823),
	.B(n822),
	.Y(n782));
   AND2X2 U579 (.A(n821),
	.B(n820),
	.Y(n783));
   AND2X2 U580 (.A(n819),
	.B(n818),
	.Y(n784));
   AND2X2 U581 (.A(n817),
	.B(n816),
	.Y(n785));
   AND2X2 U582 (.A(n815),
	.B(n814),
	.Y(n786));
   AND2X2 U583 (.A(n813),
	.B(n812),
	.Y(n787));
   AND2X2 U584 (.A(n811),
	.B(n810),
	.Y(n788));
   AND2X2 U585 (.A(n850),
	.B(n849),
	.Y(n789));
   AND2X2 U586 (.A(n844),
	.B(n843),
	.Y(n790));
   AND2X2 U587 (.A(n842),
	.B(n841),
	.Y(n791));
   AND2X2 U588 (.A(n840),
	.B(n839),
	.Y(n792));
   AND2X2 U589 (.A(n838),
	.B(n837),
	.Y(n793));
   AND2X2 U590 (.A(n836),
	.B(n835),
	.Y(n794));
   AND2X2 U591 (.A(n834),
	.B(n833),
	.Y(n795));
   AND2X2 U592 (.A(n832),
	.B(n831),
	.Y(n796));
   AND2X2 U593 (.A(n892),
	.B(n891),
	.Y(n797));
   AND2X2 U594 (.A(n886),
	.B(n885),
	.Y(n798));
   AND2X2 U595 (.A(n884),
	.B(n883),
	.Y(n799));
   AND2X2 U596 (.A(n882),
	.B(n881),
	.Y(n800));
   AND2X2 U597 (.A(n880),
	.B(n879),
	.Y(n801));
   AND2X2 U598 (.A(n878),
	.B(n877),
	.Y(n802));
   AND2X2 U599 (.A(n876),
	.B(n875),
	.Y(n803));
   AND2X2 U600 (.A(n874),
	.B(n873),
	.Y(n804));
   NOR4X1 U601 (.A(n1023),
	.B(n1025),
	.C(n1024),
	.D(n1049),
	.Y(n806));
   XNOR2XL U602 (.A(N215),
	.B(n1147),
	.Y(n737));
   NAND3XL U603 (.A(n481),
	.B(N318),
	.C(n1046),
	.Y(n1052));
   NAND4XL U604 (.A(n482),
	.B(n481),
	.C(op[0]),
	.D(N318),
	.Y(n1140));
   XOR2XL U605 (.A(origin_row[2]),
	.B(r796_carry_5_),
	.Y(N590));
   XOR2XL U606 (.A(origin_row[2]),
	.B(origin_row[1]),
	.Y(n1098));
   XOR2XL U607 (.A(origin_row[2]),
	.B(r795_carry[5]),
	.Y(N546));
   INVXL U608 (.A(n1317),
	.Y(n807));
   INVXL U609 (.A(n474),
	.Y(n808));
   INVXL U611 (.A(n477),
	.Y(n809));
   INVXL U612 (.A(n476),
	.Y(n1195));
   OAI222XL U613 (.A0(n851),
	.A1(n1112),
	.B0(n1128),
	.B1(n1083),
	.C0(n471),
	.C1(n1084),
	.Y(sram_addr[1]));
   OAI222XL U614 (.A0(n1112),
	.A1(FE_DBTN2_N541),
	.B0(n1129),
	.B1(n1083),
	.C0(n472),
	.C1(n1084),
	.Y(sram_addr[0]));
   OAI221X4 U615 (.A0(n1091),
	.A1(n1083),
	.B0(n1092),
	.B1(n1093),
	.C0(n1094),
	.Y(sram_addr[8]));
   OAI221X4 U616 (.A0(n1101),
	.A1(n1083),
	.B0(n1102),
	.B1(n1093),
	.C0(n1103),
	.Y(sram_addr[7]));
   CLKINVX1 U617 (.A(n1117),
	.Y(n1093));
   NOR2X1 U618 (.A(FE_DBTN2_N541),
	.B(n851),
	.Y(n889));
   OAI221X4 U619 (.A0(n1108),
	.A1(n1083),
	.B0(n469),
	.B1(n1084),
	.C0(n1109),
	.Y(sram_addr[6]));
   AND4XL U620 (.A(n1163),
	.B(op[1]),
	.C(n1152),
	.D(n1142),
	.Y(n1150));
   AND4XL U621 (.A(n1163),
	.B(op[0]),
	.C(n1122),
	.D(n1144),
	.Y(n1149));
   NOR2X1 U622 (.A(FE_DBTN2_N541),
	.B(N542),
	.Y(n847));
   OAI222X4 U623 (.A0(n473),
	.A1(n1081),
	.B0(n1116),
	.B1(n1083),
	.C0(n462),
	.C1(n1084),
	.Y(sram_addr[13]));
   NAND2X1 U624 (.A(n1172),
	.B(n1152),
	.Y(n1174));
   NAND2X1 U625 (.A(n1177),
	.B(n1122),
	.Y(n1176));
   NOR2X1 U626 (.A(FE_OFN5_N541),
	.B(N212),
	.Y(n826));
   NOR2X1 U627 (.A(FE_OFN5_N541),
	.B(n851),
	.Y(n890));
   NOR2X1 U628 (.A(N212),
	.B(N215),
	.Y(n867));
   OAI222X4 U629 (.A0(n474),
	.A1(n1081),
	.B0(n1082),
	.B1(n1083),
	.C0(n463),
	.C1(n1084),
	.Y(sram_addr[12]));
   NAND2X1 U630 (.A(n1172),
	.B(n1122),
	.Y(n1171));
   NAND2X1 U631 (.A(n1177),
	.B(n1152),
	.Y(n1179));
   NOR2X1 U632 (.A(n851),
	.B(FE_DBTN2_N541),
	.Y(n845));
   NOR2X1 U633 (.A(FE_DBTN3_N212),
	.B(FE_OFN5_N541),
	.Y(n824));
   NOR2X1 U634 (.A(N542),
	.B(FE_OFN5_N541),
	.Y(n888));
   NOR2X1 U635 (.A(N215),
	.B(FE_DBTN3_N212),
	.Y(n869));
   OAI222X4 U636 (.A0(n475),
	.A1(n1081),
	.B0(n1088),
	.B1(n1083),
	.C0(n464),
	.C1(n1084),
	.Y(sram_addr[11]));
   NAND4X2 U637 (.A(op[3]),
	.B(n1142),
	.C(n1144),
	.D(n1197),
	.Y(n1065));
   NAND2X1 U638 (.A(n1181),
	.B(n1152),
	.Y(n1183));
   NAND2X1 U639 (.A(n1167),
	.B(n1122),
	.Y(n1166));
   NOR2X1 U640 (.A(N212),
	.B(FE_OFN5_N541),
	.Y(n866));
   NOR2X1 U641 (.A(n914),
	.B(n913),
	.Y(n907));
   NOR2X1 U642 (.A(FE_OFN5_N541),
	.B(N542),
	.Y(n848));
   NOR2X1 U643 (.A(N215),
	.B(N212),
	.Y(n827));
   OAI21XL U644 (.A0(n851),
	.A1(FE_DBTN2_N541),
	.B0(n1121),
	.Y(N212));
   NOR2X1 U645 (.A(N219),
	.B(N220),
	.Y(n910));
   OAI222X4 U646 (.A0(n476),
	.A1(n1081),
	.B0(n1089),
	.B1(n1083),
	.C0(n465),
	.C1(n1084),
	.Y(sram_addr[10]));
   NAND3X2 U647 (.A(state[3]),
	.B(n1024),
	.C(n1130),
	.Y(n1146));
   NAND2X1 U648 (.A(n1181),
	.B(n1122),
	.Y(n1180));
   NAND2X1 U649 (.A(n1167),
	.B(n1152),
	.Y(n1169));
   MXI2X4 U650 (.S0(n1132),
	.B(n449),
	.A(n1131),
	.Y(o_out_valid));
   NOR2X1 U651 (.A(N542),
	.B(FE_DBTN2_N541),
	.Y(n887));
   NOR2X1 U652 (.A(FE_OFN5_N541),
	.B(FE_DBTN3_N212),
	.Y(n868));
   NOR2X1 U653 (.A(n913),
	.B(N220),
	.Y(n909));
   NOR2X1 U654 (.A(n851),
	.B(FE_OFN5_N541),
	.Y(n846));
   NOR2X1 U655 (.A(FE_DBTN3_N212),
	.B(N215),
	.Y(n825));
   NOR2X1 U656 (.A(n914),
	.B(N219),
	.Y(n908));
   OAI222X4 U657 (.A0(n477),
	.A1(n1081),
	.B0(n1090),
	.B1(n1083),
	.C0(n466),
	.C1(n1084),
	.Y(sram_addr[9]));
   AOI2BB1XL U658 (.A0N(n1087),
	.A1N(n1099),
	.B0(n1093),
	.Y(n1111));
   NAND2XL U659 (.A(n1023),
	.B(n1025),
	.Y(n1054));
   INVXL U660 (.A(sram_addr[0]),
	.Y(n1079));
   NAND3X1 U661 (.A(sram_addr[1]),
	.B(n1079),
	.C(n1078),
	.Y(sram_wen_2));
   NAND3XL U662 (.A(sram_addr[0]),
	.B(sram_addr[1]),
	.C(n1078),
	.Y(sram_wen_3));
   AND2XL U663 (.A(n1085),
	.B(n1117),
	.Y(n1113));
   OAI2BB1X1 U665 (.A0N(n1118),
	.A1N(n1117),
	.B0(n1115),
	.Y(sram_addr[4]));
   OAI2BB1X1 U666 (.A0N(n1124),
	.A1N(n1117),
	.B0(n1115),
	.Y(sram_addr[3]));
   OAI211XL U667 (.A0(n1026),
	.A1(n1024),
	.B0(n1020),
	.C0(n1027),
	.Y(state_nxt[2]));
   NOR3XL U668 (.A(n1054),
	.B(n1049),
	.C(n1024),
	.Y(n1036));
   AOI22XL U669 (.A0(q[0]),
	.A1(n910),
	.B0(q[8]),
	.B1(n909),
	.Y(n893));
   AOI22XL U670 (.A0(q[1]),
	.A1(n910),
	.B0(q[9]),
	.B1(n909),
	.Y(n895));
   AOI22XL U671 (.A0(q[2]),
	.A1(n910),
	.B0(q[10]),
	.B1(n909),
	.Y(n897));
   AOI22XL U672 (.A0(q[3]),
	.A1(n910),
	.B0(q[11]),
	.B1(n909),
	.Y(n899));
   AOI22XL U673 (.A0(q[4]),
	.A1(n910),
	.B0(q[12]),
	.B1(n909),
	.Y(n901));
   AOI22XL U674 (.A0(q[5]),
	.A1(n910),
	.B0(q[13]),
	.B1(n909),
	.Y(n903));
   AOI22XL U675 (.A0(q[6]),
	.A1(n910),
	.B0(q[14]),
	.B1(n909),
	.Y(n905));
   AOI22XL U676 (.A0(q[7]),
	.A1(n910),
	.B0(q[15]),
	.B1(n909),
	.Y(n911));
   AOI22XL U677 (.A0(q[16]),
	.A1(n908),
	.B0(q[24]),
	.B1(n907),
	.Y(n894));
   AOI22XL U678 (.A0(q[17]),
	.A1(n908),
	.B0(q[25]),
	.B1(n907),
	.Y(n896));
   AOI22XL U679 (.A0(q[18]),
	.A1(n908),
	.B0(q[26]),
	.B1(n907),
	.Y(n898));
   AOI22XL U680 (.A0(q[19]),
	.A1(n908),
	.B0(q[27]),
	.B1(n907),
	.Y(n900));
   AOI22XL U681 (.A0(q[20]),
	.A1(n908),
	.B0(q[28]),
	.B1(n907),
	.Y(n902));
   AOI22XL U682 (.A0(q[21]),
	.A1(n908),
	.B0(q[29]),
	.B1(n907),
	.Y(n904));
   AOI22XL U683 (.A0(q[22]),
	.A1(n908),
	.B0(q[30]),
	.B1(n907),
	.Y(n906));
   AOI22XL U684 (.A0(q[23]),
	.A1(n908),
	.B0(q[31]),
	.B1(n907),
	.Y(n912));
   AOI22XL U685 (.A0(q[16]),
	.A1(n867),
	.B0(q[24]),
	.B1(n866),
	.Y(n853));
   AOI22XL U686 (.A0(q[0]),
	.A1(n869),
	.B0(q[8]),
	.B1(n868),
	.Y(n852));
   AOI22XL U687 (.A0(q[17]),
	.A1(n867),
	.B0(q[25]),
	.B1(n866),
	.Y(n855));
   AOI22XL U688 (.A0(q[1]),
	.A1(n869),
	.B0(q[9]),
	.B1(n868),
	.Y(n854));
   AOI22XL U689 (.A0(q[18]),
	.A1(n867),
	.B0(q[26]),
	.B1(n866),
	.Y(n857));
   AOI22XL U690 (.A0(q[2]),
	.A1(n869),
	.B0(q[10]),
	.B1(n868),
	.Y(n856));
   AOI22XL U691 (.A0(q[19]),
	.A1(n867),
	.B0(q[27]),
	.B1(n866),
	.Y(n859));
   AOI22XL U692 (.A0(q[3]),
	.A1(n869),
	.B0(q[11]),
	.B1(n868),
	.Y(n858));
   AOI22XL U693 (.A0(q[20]),
	.A1(n867),
	.B0(q[28]),
	.B1(n866),
	.Y(n861));
   AOI22XL U694 (.A0(q[4]),
	.A1(n869),
	.B0(q[12]),
	.B1(n868),
	.Y(n860));
   AOI22XL U695 (.A0(q[21]),
	.A1(n867),
	.B0(q[29]),
	.B1(n866),
	.Y(n863));
   AOI22XL U696 (.A0(q[5]),
	.A1(n869),
	.B0(q[13]),
	.B1(n868),
	.Y(n862));
   AOI22XL U697 (.A0(q[22]),
	.A1(n867),
	.B0(q[30]),
	.B1(n866),
	.Y(n865));
   AOI22XL U698 (.A0(q[6]),
	.A1(n869),
	.B0(q[14]),
	.B1(n868),
	.Y(n864));
   AOI22XL U699 (.A0(q[23]),
	.A1(n867),
	.B0(q[31]),
	.B1(n866),
	.Y(n871));
   AOI22XL U700 (.A0(q[7]),
	.A1(n869),
	.B0(q[15]),
	.B1(n868),
	.Y(n870));
   AOI22XL U701 (.A0(q[0]),
	.A1(n827),
	.B0(q[8]),
	.B1(n826),
	.Y(n810));
   AOI22XL U702 (.A0(q[16]),
	.A1(n825),
	.B0(q[24]),
	.B1(n824),
	.Y(n811));
   AOI22XL U703 (.A0(q[1]),
	.A1(n827),
	.B0(q[9]),
	.B1(n826),
	.Y(n812));
   AOI22XL U704 (.A0(q[17]),
	.A1(n825),
	.B0(q[25]),
	.B1(n824),
	.Y(n813));
   AOI22XL U705 (.A0(q[2]),
	.A1(n827),
	.B0(q[10]),
	.B1(n826),
	.Y(n814));
   AOI22XL U706 (.A0(q[18]),
	.A1(n825),
	.B0(q[26]),
	.B1(n824),
	.Y(n815));
   AOI22XL U707 (.A0(q[3]),
	.A1(n827),
	.B0(q[11]),
	.B1(n826),
	.Y(n816));
   AOI22XL U708 (.A0(q[19]),
	.A1(n825),
	.B0(q[27]),
	.B1(n824),
	.Y(n817));
   AOI22XL U709 (.A0(q[4]),
	.A1(n827),
	.B0(q[12]),
	.B1(n826),
	.Y(n818));
   AOI22XL U710 (.A0(q[20]),
	.A1(n825),
	.B0(q[28]),
	.B1(n824),
	.Y(n819));
   AOI22XL U711 (.A0(q[5]),
	.A1(n827),
	.B0(q[13]),
	.B1(n826),
	.Y(n820));
   AOI22XL U712 (.A0(q[21]),
	.A1(n825),
	.B0(q[29]),
	.B1(n824),
	.Y(n821));
   AOI22XL U713 (.A0(q[6]),
	.A1(n827),
	.B0(q[14]),
	.B1(n826),
	.Y(n822));
   AOI22XL U714 (.A0(q[22]),
	.A1(n825),
	.B0(q[30]),
	.B1(n824),
	.Y(n823));
   AOI22XL U715 (.A0(q[7]),
	.A1(n827),
	.B0(q[15]),
	.B1(n826),
	.Y(n828));
   AOI22XL U716 (.A0(q[23]),
	.A1(n825),
	.B0(q[31]),
	.B1(n824),
	.Y(n829));
   NAND3XL U717 (.A(n1064),
	.B(n1065),
	.C(n1055),
	.Y(n1058));
   AOI32XL U718 (.A0(n1047),
	.A1(n1048),
	.A2(n1030),
	.B0(n1023),
	.B1(n1049),
	.Y(n1041));
   NOR3XL U719 (.A(n1023),
	.B(n1024),
	.C(n1025),
	.Y(n1021));
   NOR4XL U720 (.A(n1073),
	.B(n1074),
	.C(n1075),
	.D(n1065),
	.Y(n1072));
   AOI22XL U721 (.A0(q[0]),
	.A1(n848),
	.B0(q[8]),
	.B1(n847),
	.Y(n831));
   AOI22XL U722 (.A0(q[16]),
	.A1(n846),
	.B0(q[24]),
	.B1(n845),
	.Y(n832));
   AOI22XL U723 (.A0(q[1]),
	.A1(n848),
	.B0(q[9]),
	.B1(n847),
	.Y(n833));
   AOI22XL U724 (.A0(q[17]),
	.A1(n846),
	.B0(q[25]),
	.B1(n845),
	.Y(n834));
   AOI22XL U725 (.A0(q[2]),
	.A1(n848),
	.B0(q[10]),
	.B1(n847),
	.Y(n835));
   AOI22XL U726 (.A0(q[18]),
	.A1(n846),
	.B0(q[26]),
	.B1(n845),
	.Y(n836));
   AOI22XL U727 (.A0(q[3]),
	.A1(n848),
	.B0(q[11]),
	.B1(n847),
	.Y(n837));
   AOI22XL U728 (.A0(q[19]),
	.A1(n846),
	.B0(q[27]),
	.B1(n845),
	.Y(n838));
   AOI22XL U729 (.A0(q[4]),
	.A1(n848),
	.B0(q[12]),
	.B1(n847),
	.Y(n839));
   AOI22XL U730 (.A0(q[20]),
	.A1(n846),
	.B0(q[28]),
	.B1(n845),
	.Y(n840));
   AOI22XL U731 (.A0(q[5]),
	.A1(n848),
	.B0(q[13]),
	.B1(n847),
	.Y(n841));
   AOI22XL U732 (.A0(q[21]),
	.A1(n846),
	.B0(q[29]),
	.B1(n845),
	.Y(n842));
   AOI22XL U733 (.A0(q[6]),
	.A1(n848),
	.B0(q[14]),
	.B1(n847),
	.Y(n843));
   AOI22XL U734 (.A0(q[22]),
	.A1(n846),
	.B0(q[30]),
	.B1(n845),
	.Y(n844));
   AOI22XL U735 (.A0(q[7]),
	.A1(n848),
	.B0(q[15]),
	.B1(n847),
	.Y(n849));
   AOI22XL U736 (.A0(q[23]),
	.A1(n846),
	.B0(q[31]),
	.B1(n845),
	.Y(n850));
   AOI22XL U737 (.A0(q[0]),
	.A1(n890),
	.B0(q[8]),
	.B1(n889),
	.Y(n873));
   AOI22XL U738 (.A0(q[16]),
	.A1(n888),
	.B0(q[24]),
	.B1(n887),
	.Y(n874));
   AOI22XL U739 (.A0(q[1]),
	.A1(n890),
	.B0(q[9]),
	.B1(n889),
	.Y(n875));
   AOI22XL U740 (.A0(q[17]),
	.A1(n888),
	.B0(q[25]),
	.B1(n887),
	.Y(n876));
   AOI22XL U741 (.A0(q[2]),
	.A1(n890),
	.B0(q[10]),
	.B1(n889),
	.Y(n877));
   AOI22XL U742 (.A0(q[18]),
	.A1(n888),
	.B0(q[26]),
	.B1(n887),
	.Y(n878));
   AOI22XL U743 (.A0(q[3]),
	.A1(n890),
	.B0(q[11]),
	.B1(n889),
	.Y(n879));
   AOI22XL U744 (.A0(q[19]),
	.A1(n888),
	.B0(q[27]),
	.B1(n887),
	.Y(n880));
   AOI22XL U745 (.A0(q[4]),
	.A1(n890),
	.B0(q[12]),
	.B1(n889),
	.Y(n881));
   AOI22XL U746 (.A0(q[20]),
	.A1(n888),
	.B0(q[28]),
	.B1(n887),
	.Y(n882));
   AOI22XL U747 (.A0(q[5]),
	.A1(n890),
	.B0(q[13]),
	.B1(n889),
	.Y(n883));
   AOI22XL U748 (.A0(q[21]),
	.A1(n888),
	.B0(q[29]),
	.B1(n887),
	.Y(n884));
   AOI22XL U749 (.A0(q[6]),
	.A1(n890),
	.B0(q[14]),
	.B1(n889),
	.Y(n885));
   AOI22XL U750 (.A0(q[22]),
	.A1(n888),
	.B0(q[30]),
	.B1(n887),
	.Y(n886));
   AOI22XL U751 (.A0(q[7]),
	.A1(n890),
	.B0(q[15]),
	.B1(n889),
	.Y(n891));
   AOI22XL U752 (.A0(q[23]),
	.A1(n888),
	.B0(q[31]),
	.B1(n887),
	.Y(n892));
   NOR3XL U753 (.A(n1024),
	.B(state[1]),
	.C(n1023),
	.Y(n1035));
   NAND3XL U754 (.A(state[2]),
	.B(n1023),
	.C(state[1]),
	.Y(n1057));
   NOR3XL U755 (.A(state[1]),
	.B(state[3]),
	.C(n1023),
	.Y(n1037));
   NAND2X1 U756 (.A(n1132),
	.B(n1030),
	.Y(n1083));
   NAND2X2 U764 (.A(n768),
	.B(n1170),
	.Y(n1178));
   NAND2X2 U766 (.A(n767),
	.B(n1170),
	.Y(n1173));
   NAND2X1 U769 (.A(n1083),
	.B(n1093),
	.Y(n1084));
   NAND3X1 U775 (.A(n1170),
	.B(n1160),
	.C(n766),
	.Y(n1182));
   OR2X1 U785 (.A(n1029),
	.B(n1078),
	.Y(n1133));
   INVX2 U787 (.A(n1065),
	.Y(n1132));
   NOR2X2 U789 (.A(n945),
	.B(n946),
	.Y(n939));
   NAND3X2 U791 (.A(n1165),
	.B(n1162),
	.C(n1170),
	.Y(n1168));
   CLKINVX1 U792 (.A(n1068),
	.Y(n1030));
   CLKINVX1 U793 (.A(n1146),
	.Y(n1055));
   CLKINVX1 U797 (.A(n1106),
	.Y(n1087));
   NAND2X1 U798 (.A(n1068),
	.B(n1146),
	.Y(n1040));
   CLKINVX1 U800 (.A(n1039),
	.Y(n1078));
   NOR2X2 U827 (.A(n946),
	.B(N222),
	.Y(n941));
   NOR2X2 U829 (.A(n945),
	.B(N221),
	.Y(n940));
   NOR2X2 U831 (.A(N221),
	.B(N222),
	.Y(n942));
   ADDFXL U834 (.A(x[81]),
	.B(N2244),
	.CI(add_2_root_add_0_root_add_370_9_carry_3_),
	.S(N2208),
	.CO(add_2_root_add_0_root_add_370_9_carry_4_));
   ADDFXL U835 (.A(x[41]),
	.B(N1910),
	.CI(add_2_root_add_0_root_add_364_9_carry_3_),
	.S(N1874),
	.CO(add_2_root_add_0_root_add_364_9_carry_4_));
   ADDFXL U836 (.A(x[82]),
	.B(N2245),
	.CI(add_2_root_add_0_root_add_370_9_carry_4_),
	.S(N2209),
	.CO(add_2_root_add_0_root_add_370_9_carry_5_));
   ADDFXL U837 (.A(x[83]),
	.B(N2246),
	.CI(add_2_root_add_0_root_add_370_9_carry_5_),
	.S(N2210),
	.CO(add_2_root_add_0_root_add_370_9_carry_6_));
   ADDFXL U838 (.A(x[84]),
	.B(N2247),
	.CI(add_2_root_add_0_root_add_370_9_carry_6_),
	.S(N2211),
	.CO(add_2_root_add_0_root_add_370_9_carry_7_));
   ADDFXL U839 (.A(x[85]),
	.B(N2248),
	.CI(add_2_root_add_0_root_add_370_9_carry_7_),
	.S(N2212),
	.CO(add_2_root_add_0_root_add_370_9_carry_8_));
   ADDFXL U840 (.A(x[86]),
	.B(N2249),
	.CI(add_2_root_add_0_root_add_370_9_carry_8_),
	.S(N2213),
	.CO(add_2_root_add_0_root_add_370_9_carry_9_));
   ADDFXL U841 (.A(x[87]),
	.B(N2250),
	.CI(add_2_root_add_0_root_add_370_9_carry_9_),
	.S(N2214),
	.CO(N2215));
   ADDFXL U842 (.A(x[42]),
	.B(N1911),
	.CI(add_2_root_add_0_root_add_364_9_carry_4_),
	.S(N1875),
	.CO(add_2_root_add_0_root_add_364_9_carry_5_));
   ADDFXL U843 (.A(x[43]),
	.B(N1912),
	.CI(add_2_root_add_0_root_add_364_9_carry_5_),
	.S(N1876),
	.CO(add_2_root_add_0_root_add_364_9_carry_6_));
   ADDFXL U844 (.A(x[44]),
	.B(N1913),
	.CI(add_2_root_add_0_root_add_364_9_carry_6_),
	.S(N1877),
	.CO(add_2_root_add_0_root_add_364_9_carry_7_));
   ADDFXL U845 (.A(x[46]),
	.B(N1915),
	.CI(add_2_root_add_0_root_add_364_9_carry_8_),
	.S(N1879),
	.CO(add_2_root_add_0_root_add_364_9_carry_9_));
   ADDFXL U846 (.A(x[47]),
	.B(N1916),
	.CI(add_2_root_add_0_root_add_364_9_carry_9_),
	.S(N1880),
	.CO(N1881));
   ADDFXL U847 (.A(x[45]),
	.B(N1914),
	.CI(add_2_root_add_0_root_add_364_9_carry_7_),
	.S(N1878),
	.CO(add_2_root_add_0_root_add_364_9_carry_8_));
   ADDFXL U848 (.A(x[49]),
	.B(N2021),
	.CI(add_2_root_add_0_root_add_365_9_carry_3_),
	.S(N1985),
	.CO(add_2_root_add_0_root_add_365_9_carry_4_));
   ADDFXL U849 (.A(x[73]),
	.B(N2133),
	.CI(add_2_root_add_0_root_add_369_9_carry_3_),
	.S(N2097),
	.CO(add_2_root_add_0_root_add_369_9_carry_4_));
   ADDFXL U850 (.A(x[50]),
	.B(N2022),
	.CI(add_2_root_add_0_root_add_365_9_carry_4_),
	.S(N1986),
	.CO(add_2_root_add_0_root_add_365_9_carry_5_));
   ADDFXL U851 (.A(x[51]),
	.B(N2023),
	.CI(add_2_root_add_0_root_add_365_9_carry_5_),
	.S(N1987),
	.CO(add_2_root_add_0_root_add_365_9_carry_6_));
   ADDFXL U852 (.A(x[52]),
	.B(N2024),
	.CI(add_2_root_add_0_root_add_365_9_carry_6_),
	.S(N1988),
	.CO(add_2_root_add_0_root_add_365_9_carry_7_));
   ADDFXL U853 (.A(x[53]),
	.B(N2025),
	.CI(add_2_root_add_0_root_add_365_9_carry_7_),
	.S(N1989),
	.CO(add_2_root_add_0_root_add_365_9_carry_8_));
   ADDFXL U854 (.A(x[54]),
	.B(N2026),
	.CI(add_2_root_add_0_root_add_365_9_carry_8_),
	.S(N1990),
	.CO(add_2_root_add_0_root_add_365_9_carry_9_));
   ADDFXL U855 (.A(x[55]),
	.B(N2027),
	.CI(add_2_root_add_0_root_add_365_9_carry_9_),
	.S(N1991),
	.CO(N1992));
   ADDFXL U856 (.A(x[74]),
	.B(N2134),
	.CI(add_2_root_add_0_root_add_369_9_carry_4_),
	.S(N2098),
	.CO(add_2_root_add_0_root_add_369_9_carry_5_));
   ADDFXL U857 (.A(x[75]),
	.B(N2135),
	.CI(add_2_root_add_0_root_add_369_9_carry_5_),
	.S(N2099),
	.CO(add_2_root_add_0_root_add_369_9_carry_6_));
   ADDFXL U858 (.A(x[76]),
	.B(N2136),
	.CI(add_2_root_add_0_root_add_369_9_carry_6_),
	.S(N2100),
	.CO(add_2_root_add_0_root_add_369_9_carry_7_));
   ADDFXL U859 (.A(x[77]),
	.B(N2137),
	.CI(add_2_root_add_0_root_add_369_9_carry_7_),
	.S(N2101),
	.CO(add_2_root_add_0_root_add_369_9_carry_8_));
   ADDFXL U860 (.A(x[78]),
	.B(N2138),
	.CI(add_2_root_add_0_root_add_369_9_carry_8_),
	.S(N2102),
	.CO(add_2_root_add_0_root_add_369_9_carry_9_));
   ADDFXL U861 (.A(x[79]),
	.B(N2139),
	.CI(add_2_root_add_0_root_add_369_9_carry_9_),
	.S(N2103),
	.CO(N2104));
   NOR2X2 U862 (.A(n299),
	.B(n304),
	.Y(n1086));
   NOR2BX2 U864 (.AN(n299),
	.B(n304),
	.Y(n1085));
   NAND2X1 U879 (.A(n894),
	.B(n893),
	.Y(DIS_out_data[0]));
   NAND2X1 U880 (.A(n896),
	.B(n895),
	.Y(DIS_out_data[1]));
   NAND2X1 U881 (.A(n898),
	.B(n897),
	.Y(DIS_out_data[2]));
   NAND2X1 U882 (.A(n900),
	.B(n899),
	.Y(DIS_out_data[3]));
   NAND2X1 U883 (.A(n902),
	.B(n901),
	.Y(DIS_out_data[4]));
   NAND2X1 U884 (.A(n904),
	.B(n903),
	.Y(DIS_out_data[5]));
   NAND2X1 U885 (.A(n906),
	.B(n905),
	.Y(DIS_out_data[6]));
   NAND2X1 U886 (.A(n912),
	.B(n911),
	.Y(DIS_out_data[7]));
   AOI22X1 U887 (.A0(z[26]),
	.A1(n940),
	.B0(z[39]),
	.B1(n939),
	.Y(n916));
   AOI22X1 U888 (.A0(z[0]),
	.A1(n942),
	.B0(z[13]),
	.B1(n941),
	.Y(n915));
   NAND2X1 U889 (.A(n916),
	.B(n915),
	.Y(CONV_out_data[0]));
   AOI22X1 U890 (.A0(z[27]),
	.A1(n940),
	.B0(z[40]),
	.B1(n939),
	.Y(n918));
   AOI22X1 U891 (.A0(z[1]),
	.A1(n942),
	.B0(z[14]),
	.B1(n941),
	.Y(n917));
   NAND2X1 U892 (.A(n918),
	.B(n917),
	.Y(CONV_out_data[1]));
   AOI22X1 U893 (.A0(z[28]),
	.A1(n940),
	.B0(z[41]),
	.B1(n939),
	.Y(n920));
   AOI22X1 U894 (.A0(z[2]),
	.A1(n942),
	.B0(z[15]),
	.B1(n941),
	.Y(n919));
   NAND2X1 U895 (.A(n920),
	.B(n919),
	.Y(CONV_out_data[2]));
   AOI22X1 U896 (.A0(z[29]),
	.A1(n940),
	.B0(z[42]),
	.B1(n939),
	.Y(n922));
   AOI22X1 U897 (.A0(z[3]),
	.A1(n942),
	.B0(z[16]),
	.B1(n941),
	.Y(n921));
   NAND2X1 U898 (.A(n922),
	.B(n921),
	.Y(CONV_out_data[3]));
   AOI22X1 U899 (.A0(z[30]),
	.A1(n940),
	.B0(z[43]),
	.B1(n939),
	.Y(n924));
   AOI22X1 U900 (.A0(z[4]),
	.A1(n942),
	.B0(z[17]),
	.B1(n941),
	.Y(n923));
   NAND2X1 U901 (.A(n924),
	.B(n923),
	.Y(CONV_out_data[4]));
   AOI22X1 U902 (.A0(z[31]),
	.A1(n940),
	.B0(z[44]),
	.B1(n939),
	.Y(n926));
   AOI22X1 U903 (.A0(z[5]),
	.A1(n942),
	.B0(z[18]),
	.B1(n941),
	.Y(n925));
   NAND2X1 U904 (.A(n926),
	.B(n925),
	.Y(CONV_out_data[5]));
   AOI22X1 U905 (.A0(z[32]),
	.A1(n940),
	.B0(z[45]),
	.B1(n939),
	.Y(n928));
   AOI22X1 U906 (.A0(z[6]),
	.A1(n942),
	.B0(z[19]),
	.B1(n941),
	.Y(n927));
   NAND2X1 U907 (.A(n928),
	.B(n927),
	.Y(CONV_out_data[6]));
   AOI22X1 U908 (.A0(z[33]),
	.A1(n940),
	.B0(z[46]),
	.B1(n939),
	.Y(n930));
   AOI22X1 U909 (.A0(z[7]),
	.A1(n942),
	.B0(z[20]),
	.B1(n941),
	.Y(n929));
   NAND2X1 U910 (.A(n930),
	.B(n929),
	.Y(CONV_out_data[7]));
   AOI22X1 U911 (.A0(z[34]),
	.A1(n940),
	.B0(z[47]),
	.B1(n939),
	.Y(n932));
   AOI22X1 U912 (.A0(z[8]),
	.A1(n942),
	.B0(z[21]),
	.B1(n941),
	.Y(n931));
   NAND2X1 U913 (.A(n932),
	.B(n931),
	.Y(CONV_out_data[8]));
   AOI22X1 U914 (.A0(z[35]),
	.A1(n940),
	.B0(z[48]),
	.B1(n939),
	.Y(n934));
   AOI22X1 U915 (.A0(z[9]),
	.A1(n942),
	.B0(z[22]),
	.B1(n941),
	.Y(n933));
   NAND2X1 U916 (.A(n934),
	.B(n933),
	.Y(CONV_out_data[9]));
   AOI22X1 U917 (.A0(z[36]),
	.A1(n940),
	.B0(z[49]),
	.B1(n939),
	.Y(n936));
   AOI22X1 U918 (.A0(z[10]),
	.A1(n942),
	.B0(z[23]),
	.B1(n941),
	.Y(n935));
   NAND2X1 U919 (.A(n936),
	.B(n935),
	.Y(CONV_out_data[10]));
   AOI22X1 U920 (.A0(z[37]),
	.A1(n940),
	.B0(z[50]),
	.B1(n939),
	.Y(n938));
   AOI22X1 U921 (.A0(z[11]),
	.A1(n942),
	.B0(z[24]),
	.B1(n941),
	.Y(n937));
   NAND2X1 U922 (.A(n938),
	.B(n937),
	.Y(CONV_out_data[11]));
   AOI22X1 U923 (.A0(z[38]),
	.A1(n940),
	.B0(z[51]),
	.B1(n939),
	.Y(n944));
   AOI22X1 U924 (.A0(z[12]),
	.A1(n942),
	.B0(z[25]),
	.B1(n941),
	.Y(n943));
   NAND2X1 U925 (.A(n944),
	.B(n943),
	.Y(CONV_out_data[12]));
   AND2X1 U926 (.A(x[40]),
	.B(N1909),
	.Y(add_2_root_add_0_root_add_364_9_carry_3_));
   XOR2X1 U927 (.A(N1909),
	.B(n807),
	.Y(N1873));
   AND2X1 U928 (.A(x[48]),
	.B(N2020),
	.Y(add_2_root_add_0_root_add_365_9_carry_3_));
   XOR2X1 U929 (.A(N2020),
	.B(x[48]),
	.Y(N1984));
   AND2X1 U930 (.A(x[72]),
	.B(N2132),
	.Y(add_2_root_add_0_root_add_369_9_carry_3_));
   XOR2X1 U931 (.A(N2132),
	.B(x[72]),
	.Y(N2096));
   AND2X1 U932 (.A(x[80]),
	.B(N2243),
	.Y(add_2_root_add_0_root_add_370_9_carry_3_));
   XOR2X1 U933 (.A(N2243),
	.B(x[80]),
	.Y(N2207));
   XOR2X1 U934 (.A(counter_256[6]),
	.B(r795_carry[10]),
	.Y(N551));
   AND2X1 U935 (.A(r795_carry[9]),
	.B(counter_256[5]),
	.Y(r795_carry[10]));
   XOR2X1 U936 (.A(counter_256[5]),
	.B(r795_carry[9]),
	.Y(N550));
   AND2X1 U937 (.A(r795_carry[8]),
	.B(counter_256[4]),
	.Y(r795_carry[9]));
   XOR2X1 U938 (.A(counter_256[4]),
	.B(r795_carry[8]),
	.Y(N549));
   AND2X1 U939 (.A(r795_carry[7]),
	.B(counter_256[3]),
	.Y(r795_carry[8]));
   XOR2X1 U940 (.A(counter_256[3]),
	.B(r795_carry[7]),
	.Y(N548));
   AND2X1 U941 (.A(r795_carry[6]),
	.B(n809),
	.Y(r795_carry[7]));
   XOR2X1 U942 (.A(counter_256[2]),
	.B(r795_carry[6]),
	.Y(N547));
   AND2X1 U943 (.A(r795_carry[5]),
	.B(origin_row[2]),
	.Y(r795_carry[6]));
   AND2X1 U944 (.A(conv_row_3__0_),
	.B(origin_row[1]),
	.Y(r795_carry[5]));
   XOR2X1 U945 (.A(origin_row[1]),
	.B(conv_row_3__0_),
	.Y(N545));
   XOR2X1 U946 (.A(counter_256[6]),
	.B(r796_carry_10_),
	.Y(N595));
   AND2X1 U947 (.A(r796_carry_9_),
	.B(counter_256[5]),
	.Y(r796_carry_10_));
   XOR2X1 U948 (.A(counter_256[5]),
	.B(r796_carry_9_),
	.Y(N594));
   AND2X1 U949 (.A(r796_carry_8_),
	.B(counter_256[4]),
	.Y(r796_carry_9_));
   XOR2X1 U950 (.A(FE_DBTN1_n475),
	.B(r796_carry_8_),
	.Y(N593));
   AND2X1 U951 (.A(r796_carry_7_),
	.B(counter_256[3]),
	.Y(r796_carry_8_));
   XOR2X1 U952 (.A(n1195),
	.B(r796_carry_7_),
	.Y(N592));
   AND2X1 U953 (.A(r796_carry_6_),
	.B(counter_256[2]),
	.Y(r796_carry_7_));
   XOR2X1 U954 (.A(n809),
	.B(r796_carry_6_),
	.Y(N591));
   AND2X1 U955 (.A(r796_carry_5_),
	.B(origin_row[2]),
	.Y(r796_carry_6_));
   AND2X1 U956 (.A(r796_carry_4_),
	.B(origin_row[1]),
	.Y(r796_carry_5_));
   XOR2X1 U957 (.A(origin_row[1]),
	.B(r796_carry_4_),
	.Y(N589));
   OR2X1 U958 (.A(conv_row_3__0_),
	.B(r796_carry_3_),
	.Y(r796_carry_4_));
   XNOR2X1 U959 (.A(r796_carry_3_),
	.B(conv_row_3__0_),
	.Y(N588));
   AND2X1 U960 (.A(r796_carry_2_),
	.B(N543),
	.Y(r796_carry_3_));
   XOR2X1 U961 (.A(N543),
	.B(r796_carry_2_),
	.Y(N587));
   AND2X1 U962 (.A(FE_OFN5_N541),
	.B(N542),
	.Y(r796_carry_2_));
   XOR2X1 U963 (.A(N542),
	.B(FE_OFN5_N541),
	.Y(N586));
   OR2X1 U964 (.A(N316),
	.B(N317),
	.Y(n1018));
   OAI2BB1X1 U965 (.A0N(N316),
	.A1N(N317),
	.B0(n1018),
	.Y(N306));
   NOR2X1 U966 (.A(n1018),
	.B(N318),
	.Y(N308));
   AO21X1 U967 (.A0(n1018),
	.A1(N318),
	.B0(N308),
	.Y(N307));
   NAND2X1 U969 (.A(n1019),
	.B(n1020),
	.Y(state_nxt[3]));
   MXI2X1 U970 (.S0(state[3]),
	.B(n1022),
	.A(n1021),
	.Y(n1019));
   NOR3X1 U971 (.A(n806),
	.B(n1028),
	.C(n1029),
	.Y(n1027));
   AOI211X1 U972 (.A0(n1030),
	.A1(n1031),
	.B0(n1032),
	.C0(n1033),
	.Y(n1020));
   CLKINVX1 U973 (.A(n1034),
	.Y(n1033));
   AOI211X1 U974 (.A0(n1035),
	.A1(state[3]),
	.B0(FE_DBTN0_n771),
	.C0(n1036),
	.Y(n1034));
   NOR2X1 U975 (.A(n1037),
	.B(n1022),
	.Y(n1026));
   NAND2X1 U976 (.A(n1038),
	.B(n1039),
	.Y(n1022));
   CLKINVX1 U977 (.A(n1040),
	.Y(n1038));
   OAI211X1 U978 (.A0(n1041),
	.A1(n1025),
	.B0(n1042),
	.C0(n1043),
	.Y(state_nxt[1]));
   AOI211X1 U979 (.A0(n1044),
	.A1(n1045),
	.B0(n1037),
	.C0(n1035),
	.Y(n1043));
   NAND4X1 U980 (.A(n1050),
	.B(n1042),
	.C(n1051),
	.D(n1052),
	.Y(state_nxt[0]));
   NOR2X1 U981 (.A(n1036),
	.B(n806),
	.Y(n1051));
   AOI211X1 U982 (.A0(n1055),
	.A1(n1056),
	.B0(n1028),
	.C0(n1032),
	.Y(n1042));
   OAI211X1 U983 (.A0(n1049),
	.A1(n1057),
	.B0(n1058),
	.C0(n1059),
	.Y(n1032));
   NAND4X1 U984 (.A(n1060),
	.B(n1061),
	.C(n1062),
	.D(n1063),
	.Y(n1059));
   NOR3X1 U985 (.A(n470),
	.B(n472),
	.C(n471),
	.Y(n1063));
   NOR3X1 U986 (.A(n467),
	.B(n469),
	.C(n468),
	.Y(n1062));
   NOR3X1 U987 (.A(n464),
	.B(n466),
	.C(n465),
	.Y(n1061));
   NOR3X1 U988 (.A(n1039),
	.B(n463),
	.C(n462),
	.Y(n1060));
   CLKINVX1 U989 (.A(n1057),
	.Y(n1028));
   MXI2X1 U990 (.S0(state[0]),
	.B(n1067),
	.A(n1066),
	.Y(n1050));
   NOR3BXL U991 (.AN(n1048),
	.B(n1068),
	.C(n1031),
	.Y(n1067));
   CLKINVX1 U992 (.A(n1047),
	.Y(n1031));
   NAND4X1 U993 (.A(n1069),
	.B(FE_DBTN1_n475),
	.C(n1071),
	.D(n1072),
	.Y(n1047));
   XOR2X1 U994 (.A(counter_256[7]),
	.B(N307),
	.Y(n1074));
   XOR2X1 U995 (.A(counter_256[6]),
	.B(N306),
	.Y(n1073));
   NOR3X1 U996 (.A(n1076),
	.B(N308),
	.C(n1077),
	.Y(n1071));
   XOR2X1 U997 (.A(n474),
	.B(N305),
	.Y(n1069));
   NAND3X1 U998 (.A(sram_addr[0]),
	.B(n1080),
	.C(n1078),
	.Y(sram_wen_1));
   NAND3X2 U999 (.A(n1079),
	.B(n1080),
	.C(n1078),
	.Y(sram_wen_0));
   CLKINVX1 U1000 (.A(sram_addr[1]),
	.Y(n1080));
   AOI222XL U1001 (.A0(N506),
	.A1(n1085),
	.B0(N594),
	.B1(n1086),
	.C0(N550),
	.C1(n1087),
	.Y(n1082));
   AOI222XL U1002 (.A0(N505),
	.A1(n1085),
	.B0(N593),
	.B1(n1086),
	.C0(N549),
	.C1(n1087),
	.Y(n1088));
   AOI222XL U1003 (.A0(N504),
	.A1(n1085),
	.B0(N592),
	.B1(n1086),
	.C0(N548),
	.C1(n1087),
	.Y(n1089));
   AOI222XL U1004 (.A0(N503),
	.A1(n1085),
	.B0(N591),
	.B1(n1086),
	.C0(N547),
	.C1(n1087),
	.Y(n1090));
   OA22X1 U1005 (.A0(n1095),
	.A1(n1096),
	.B0(n1084),
	.B1(n467),
	.Y(n1094));
   AOI222XL U1006 (.A0(n1087),
	.A1(n1097),
	.B0(n1086),
	.B1(n1098),
	.C0(n1099),
	.C1(n1100),
	.Y(n1092));
   AOI222XL U1007 (.A0(N502),
	.A1(n1085),
	.B0(N590),
	.B1(n1086),
	.C0(N546),
	.C1(n1087),
	.Y(n1091));
   OA22X1 U1008 (.A0(n805),
	.A1(n1096),
	.B0(n1084),
	.B1(n468),
	.Y(n1103));
   AOI2BB1X1 U1009 (.A0N(origin_row[1]),
	.A1N(n1075),
	.B0(n1104),
	.Y(n1102));
   MXI2X1 U1010 (.S0(n1107),
	.B(n1106),
	.A(n1105),
	.Y(n1104));
   AOI222XL U1011 (.A0(N501),
	.A1(n1085),
	.B0(N589),
	.B1(n1086),
	.C0(N545),
	.C1(n1087),
	.Y(n1101));
   MXI2X1 U1012 (.S0(N544),
	.B(n1111),
	.A(n1110),
	.Y(n1109));
   OAI21XL U1013 (.A0(n1075),
	.A1(n1093),
	.B0(n1096),
	.Y(n1110));
   NOR2BX1 U1014 (.AN(n1112),
	.B(n1113),
	.Y(n1096));
   CLKINVX1 U1015 (.A(n1086),
	.Y(n1075));
   AOI222XL U1016 (.A0(N500),
	.A1(n1085),
	.B0(N588),
	.B1(n1086),
	.C0(N544),
	.C1(n1087),
	.Y(n1108));
   OAI21X1 U1017 (.A0(n1114),
	.A1(n1093),
	.B0(n1115),
	.Y(sram_addr[5]));
   AOI222XL U1018 (.A0(N507),
	.A1(n1085),
	.B0(N595),
	.B1(n1086),
	.C0(N551),
	.C1(n1087),
	.Y(n1116));
   NOR2BX1 U1019 (.AN(n1112),
	.B(n1117),
	.Y(n1081));
   OAI221XL U1020 (.A0(FE_DBTN2_N541),
	.A1(n1114),
	.B0(n1120),
	.B1(n1121),
	.C0(n1122),
	.Y(n1118));
   CLKINVX1 U1021 (.A(n1123),
	.Y(n1114));
   OAI21X2 U1022 (.A0(n1093),
	.A1(n1120),
	.B0(n1115),
	.Y(sram_addr[2]));
   OA22X1 U1023 (.A0(n470),
	.A1(n1084),
	.B0(n1125),
	.B1(n1083),
	.Y(n1115));
   AOI221XL U1024 (.A0(N587),
	.A1(n1086),
	.B0(N543),
	.B1(n1087),
	.C0(n1126),
	.Y(n1125));
   OAI2BB2XL U1025 (.A0N(N499),
	.A1N(n1085),
	.B0(n1105),
	.B1(n1127),
	.Y(n1126));
   XOR2X1 U1026 (.A(N542),
	.B(n1127),
	.Y(n1120));
   AOI222XL U1027 (.A0(N498),
	.A1(n1085),
	.B0(N586),
	.B1(n1086),
	.C0(N542),
	.C1(n1087),
	.Y(n1128));
   AOI222XL U1028 (.A0(N497),
	.A1(n1085),
	.B0(FE_DBTN2_N541),
	.B1(n1086),
	.C0(FE_OFN5_N541),
	.C1(n1087),
	.Y(n1129));
   NAND2X1 U1029 (.A(n1099),
	.B(n461),
	.Y(n1112));
   AO21X1 U1030 (.A0(n1130),
	.A1(n1066),
	.B0(n806),
	.Y(op_ready_nxt));
   CLKAND2X3 U1031 (.A(CONV_out_data[9]),
	.B(n1065),
	.Y(o_out_data[9]));
   CLKAND2X3 U1032 (.A(CONV_out_data[8]),
	.B(n1065),
	.Y(o_out_data[8]));
   CLKMX2X2 U1033 (.S0(n1132),
	.B(DIS_out_data[7]),
	.A(CONV_out_data[7]),
	.Y(o_out_data[7]));
   CLKMX2X2 U1034 (.S0(n1132),
	.B(DIS_out_data[6]),
	.A(CONV_out_data[6]),
	.Y(o_out_data[6]));
   CLKMX2X2 U1035 (.S0(n1132),
	.B(DIS_out_data[5]),
	.A(CONV_out_data[5]),
	.Y(o_out_data[5]));
   CLKMX2X2 U1036 (.S0(n1132),
	.B(DIS_out_data[4]),
	.A(CONV_out_data[4]),
	.Y(o_out_data[4]));
   CLKMX2X2 U1037 (.S0(n1132),
	.B(DIS_out_data[3]),
	.A(CONV_out_data[3]),
	.Y(o_out_data[3]));
   CLKMX2X2 U1038 (.S0(n1132),
	.B(DIS_out_data[2]),
	.A(CONV_out_data[2]),
	.Y(o_out_data[2]));
   CLKMX2X2 U1039 (.S0(n1132),
	.B(DIS_out_data[1]),
	.A(CONV_out_data[1]),
	.Y(o_out_data[1]));
   CLKAND2X3 U1040 (.A(CONV_out_data[12]),
	.B(n1065),
	.Y(o_out_data[12]));
   CLKAND2X3 U1041 (.A(CONV_out_data[11]),
	.B(n1065),
	.Y(o_out_data[11]));
   CLKAND2X3 U1042 (.A(CONV_out_data[10]),
	.B(n1065),
	.Y(o_out_data[10]));
   CLKMX2X2 U1043 (.S0(n1132),
	.B(DIS_out_data[0]),
	.A(CONV_out_data[0]),
	.Y(o_out_data[0]));
   OAI2BB2XL U1044 (.A0N(N410),
	.A1N(n1078),
	.B0(n472),
	.B1(n1133),
	.Y(n764));
   OAI2BB2XL U1045 (.A0N(N411),
	.A1N(n1078),
	.B0(n471),
	.B1(n1133),
	.Y(n763));
   OAI2BB2XL U1046 (.A0N(N412),
	.A1N(n1078),
	.B0(n470),
	.B1(n1133),
	.Y(n762));
   OAI2BB2XL U1047 (.A0N(N413),
	.A1N(n1078),
	.B0(n469),
	.B1(n1133),
	.Y(n761));
   OAI2BB2XL U1048 (.A0N(N414),
	.A1N(n1078),
	.B0(n468),
	.B1(n1133),
	.Y(n760));
   OAI2BB2XL U1049 (.A0N(N415),
	.A1N(n1078),
	.B0(n467),
	.B1(n1133),
	.Y(n759));
   OAI2BB2XL U1050 (.A0N(N416),
	.A1N(n1078),
	.B0(n466),
	.B1(n1133),
	.Y(n758));
   OAI2BB2XL U1051 (.A0N(N417),
	.A1N(n1078),
	.B0(n465),
	.B1(n1133),
	.Y(n757));
   OAI2BB2XL U1052 (.A0N(N418),
	.A1N(n1078),
	.B0(n464),
	.B1(n1133),
	.Y(n756));
   OAI2BB2XL U1053 (.A0N(N419),
	.A1N(n1078),
	.B0(n463),
	.B1(n1133),
	.Y(n755));
   OAI2BB2XL U1054 (.A0N(N420),
	.A1N(n1078),
	.B0(n462),
	.B1(n1133),
	.Y(n754));
   NAND3X1 U1055 (.A(n1130),
	.B(n1049),
	.C(state[2]),
	.Y(n1039));
   NOR3BXL U1056 (.AN(n1066),
	.B(n1023),
	.C(n1025),
	.Y(n1029));
   NOR2X1 U1057 (.A(state[2]),
	.B(state[3]),
	.Y(n1066));
   OAI21XL U1058 (.A0(n1208),
	.A1(n1134),
	.B0(n1135),
	.Y(n752));
   MXI2X1 U1059 (.S0(n806),
	.B(n1208),
	.A(n480),
	.Y(n751));
   OAI21XL U1060 (.A0(n1207),
	.A1(n1134),
	.B0(n1136),
	.Y(n750));
   MXI2X1 U1061 (.S0(n806),
	.B(n1207),
	.A(n481),
	.Y(n749));
   OAI21XL U1062 (.A0(n1206),
	.A1(n1134),
	.B0(n1137),
	.Y(n748));
   NAND3X1 U1063 (.A(n1137),
	.B(n1135),
	.C(n1136),
	.Y(n1134));
   NAND3X1 U1064 (.A(n1055),
	.B(n1138),
	.C(n1139),
	.Y(n1136));
   MXI2X1 U1065 (.S0(op[1]),
	.B(n1141),
	.A(n1140),
	.Y(n1139));
   NAND2X1 U1066 (.A(n1056),
	.B(n1142),
	.Y(n1141));
   NOR3BXL U1067 (.AN(n481),
	.B(n482),
	.C(N318),
	.Y(n1056));
   NAND3X1 U1068 (.A(op[1]),
	.B(n1142),
	.C(n1143),
	.Y(n1135));
   NAND3X1 U1069 (.A(op[0]),
	.B(n1144),
	.C(n1143),
	.Y(n1137));
   AND2X1 U1070 (.A(n482),
	.B(n1055),
	.Y(n1046));
   MXI2X1 U1071 (.S0(n806),
	.B(n1206),
	.A(n482),
	.Y(n747));
   OAI2BB2XL U1072 (.A0N(N436),
	.A1N(n1030),
	.B0(n304),
	.B1(n1040),
	.Y(n745));
   OAI2BB2XL U1073 (.A0N(N437),
	.A1N(n1030),
	.B0(n299),
	.B1(n1040),
	.Y(n744));
   OAI2BB2XL U1074 (.A0N(N438),
	.A1N(n1030),
	.B0(n477),
	.B1(n1040),
	.Y(n743));
   OAI2BB2XL U1075 (.A0N(N439),
	.A1N(n1030),
	.B0(n476),
	.B1(n1040),
	.Y(n742));
   OAI2BB2XL U1076 (.A0N(N440),
	.A1N(n1030),
	.B0(n475),
	.B1(n1040),
	.Y(n741));
   OAI2BB2XL U1077 (.A0N(N441),
	.A1N(n1030),
	.B0(n474),
	.B1(n1040),
	.Y(n740));
   OAI2BB2XL U1078 (.A0N(N442),
	.A1N(n1030),
	.B0(n473),
	.B1(n1040),
	.Y(n739));
   OAI2BB2XL U1079 (.A0N(N443),
	.A1N(n1030),
	.B0(n451),
	.B1(n1040),
	.Y(n738));
   MXI2X1 U1080 (.S0(n1147),
	.B(n1148),
	.A(n1127),
	.Y(n736));
   AOI22X1 U1081 (.A0(n1149),
	.A1(n1124),
	.B0(n1123),
	.B1(n1150),
	.Y(n1148));
   OAI21XL U1082 (.A0(n1151),
	.A1(n1127),
	.B0(n1152),
	.Y(n1123));
   XNOR2X1 U1083 (.A(n1153),
	.B(N543),
	.Y(n1124));
   NAND2X1 U1084 (.A(FE_OFN5_N541),
	.B(N542),
	.Y(n1153));
   MXI2X1 U1085 (.S0(n1155),
	.B(n1154),
	.A(n1095),
	.Y(n735));
   AOI22X1 U1086 (.A0(n1156),
	.A1(n1100),
	.B0(n1157),
	.B1(n1097),
	.Y(n1154));
   XOR2X1 U1087 (.A(n1158),
	.B(n1095),
	.Y(n1097));
   NAND2X1 U1088 (.A(origin_row[1]),
	.B(conv_row_3__0_),
	.Y(n1158));
   OAI21XL U1089 (.A0(n1159),
	.A1(n1095),
	.B0(n1160),
	.Y(n1100));
   XOR2X1 U1090 (.A(conv_row_3__0_),
	.B(n1155),
	.Y(n734));
   MXI2X1 U1091 (.S0(n1155),
	.B(n1161),
	.A(n805),
	.Y(n733));
   AOI2BB1X1 U1092 (.A0N(n1156),
	.A1N(n1157),
	.B0(n1146),
	.Y(n1155));
   MXI2X1 U1093 (.S0(n1107),
	.B(n1157),
	.A(n1156),
	.Y(n1161));
   AOI21X1 U1094 (.A0(conv_row_3__0_),
	.A1(origin_row[1]),
	.B0(n1159),
	.Y(n1107));
   AND4X1 U1095 (.A(n1138),
	.B(n1162),
	.C(n1142),
	.D(n1144),
	.Y(n1157));
   AND4X1 U1096 (.A(n1163),
	.B(op[1]),
	.C(op[0]),
	.D(n1160),
	.Y(n1156));
   MXI2X1 U1097 (.S0(n1147),
	.B(n1164),
	.A(n851),
	.Y(n732));
   AOI2BB1X1 U1098 (.A0N(n1150),
	.A1N(n1149),
	.B0(n1146),
	.Y(n1147));
   MXI2X1 U1099 (.S0(FE_DBTN3_N212),
	.B(n1149),
	.A(n1150),
	.Y(n1164));
   NOR2X1 U1100 (.A(op[3]),
	.B(op[2]),
	.Y(n1163));
   OAI22XL U1101 (.A0(n1165),
	.A1(n1404),
	.B0(n1166),
	.B1(n797),
	.Y(n731));
   OAI22XL U1102 (.A0(n1165),
	.A1(n1403),
	.B0(n1166),
	.B1(n798),
	.Y(n730));
   OAI22XL U1103 (.A0(n1165),
	.A1(n1402),
	.B0(n1166),
	.B1(n799),
	.Y(n729));
   OAI22XL U1104 (.A0(n1165),
	.A1(n1401),
	.B0(n1166),
	.B1(n800),
	.Y(n728));
   OAI22XL U1105 (.A0(n1165),
	.A1(n1400),
	.B0(n1166),
	.B1(n801),
	.Y(n727));
   OAI22XL U1106 (.A0(n1165),
	.A1(n1399),
	.B0(n1166),
	.B1(n802),
	.Y(n726));
   OAI22XL U1107 (.A0(n1165),
	.A1(n1398),
	.B0(n1166),
	.B1(n803),
	.Y(n725));
   OAI22XL U1108 (.A0(n1165),
	.A1(n1397),
	.B0(n1166),
	.B1(n804),
	.Y(n724));
   OAI22XL U1109 (.A0(n1165),
	.A1(n1396),
	.B0(n1168),
	.B1(n773),
	.Y(n723));
   OAI22XL U1110 (.A0(n1165),
	.A1(n1395),
	.B0(n1168),
	.B1(n774),
	.Y(n722));
   OAI22XL U1111 (.A0(n1165),
	.A1(n1394),
	.B0(n1168),
	.B1(n775),
	.Y(n721));
   OAI22XL U1112 (.A0(n1165),
	.A1(n1393),
	.B0(n1168),
	.B1(n776),
	.Y(n720));
   OAI22XL U1113 (.A0(n1165),
	.A1(n1392),
	.B0(n1168),
	.B1(n777),
	.Y(n719));
   OAI22XL U1114 (.A0(n1165),
	.A1(n1391),
	.B0(n1168),
	.B1(n778),
	.Y(n718));
   OAI22XL U1115 (.A0(n1165),
	.A1(n1390),
	.B0(n1168),
	.B1(n779),
	.Y(n717));
   OAI22XL U1116 (.A0(n1165),
	.A1(n1389),
	.B0(n1168),
	.B1(n780),
	.Y(n716));
   OAI22XL U1117 (.A0(n1165),
	.A1(n1388),
	.B0(n1168),
	.B1(n789),
	.Y(n715));
   OAI22XL U1118 (.A0(n1165),
	.A1(n1387),
	.B0(n1168),
	.B1(n790),
	.Y(n714));
   OAI22XL U1119 (.A0(n1165),
	.A1(n1386),
	.B0(n1168),
	.B1(n791),
	.Y(n713));
   OAI22XL U1120 (.A0(n1165),
	.A1(n1385),
	.B0(n1168),
	.B1(n792),
	.Y(n712));
   OAI22XL U1121 (.A0(n1165),
	.A1(n1384),
	.B0(n1168),
	.B1(n793),
	.Y(n711));
   OAI22XL U1122 (.A0(n1165),
	.A1(n1383),
	.B0(n1168),
	.B1(n794),
	.Y(n710));
   OAI22XL U1123 (.A0(n1165),
	.A1(n1382),
	.B0(n1168),
	.B1(n795),
	.Y(n709));
   OAI22XL U1124 (.A0(n1165),
	.A1(n1381),
	.B0(n1168),
	.B1(n796),
	.Y(n708));
   OAI22XL U1125 (.A0(n1165),
	.A1(n1380),
	.B0(n1169),
	.B1(n781),
	.Y(n707));
   OAI22XL U1126 (.A0(n1165),
	.A1(n1379),
	.B0(n1169),
	.B1(n782),
	.Y(n706));
   OAI22XL U1127 (.A0(n1165),
	.A1(n1378),
	.B0(n1169),
	.B1(n783),
	.Y(n705));
   OAI22XL U1128 (.A0(n1165),
	.A1(n1377),
	.B0(n1169),
	.B1(n784),
	.Y(n704));
   OAI22XL U1129 (.A0(n1165),
	.A1(n1376),
	.B0(n1169),
	.B1(n785),
	.Y(n703));
   OAI22XL U1130 (.A0(n1165),
	.A1(n1375),
	.B0(n1169),
	.B1(n786),
	.Y(n702));
   OAI22XL U1131 (.A0(n1165),
	.A1(n1374),
	.B0(n1169),
	.B1(n787),
	.Y(n701));
   OAI22XL U1132 (.A0(n1165),
	.A1(n1373),
	.B0(n1169),
	.B1(n788),
	.Y(n700));
   CLKINVX1 U1133 (.A(n1168),
	.Y(n1167));
   NAND3X1 U1134 (.A(origin_row[1]),
	.B(origin_row[2]),
	.C(N544),
	.Y(n1162));
   OAI22XL U1135 (.A0(n767),
	.A1(n1372),
	.B0(n797),
	.B1(n1171),
	.Y(n699));
   OAI22XL U1136 (.A0(n767),
	.A1(n1371),
	.B0(n798),
	.B1(n1171),
	.Y(n698));
   OAI22XL U1137 (.A0(n767),
	.A1(n1370),
	.B0(n799),
	.B1(n1171),
	.Y(n697));
   OAI22XL U1138 (.A0(n767),
	.A1(n1369),
	.B0(n800),
	.B1(n1171),
	.Y(n696));
   OAI22XL U1139 (.A0(n767),
	.A1(n1368),
	.B0(n801),
	.B1(n1171),
	.Y(n695));
   OAI22XL U1140 (.A0(n767),
	.A1(n1367),
	.B0(n802),
	.B1(n1171),
	.Y(n694));
   OAI22XL U1141 (.A0(n767),
	.A1(n1366),
	.B0(n803),
	.B1(n1171),
	.Y(n693));
   OAI22XL U1142 (.A0(n767),
	.A1(n1365),
	.B0(n804),
	.B1(n1171),
	.Y(n692));
   OAI22XL U1143 (.A0(n767),
	.A1(n1364),
	.B0(n773),
	.B1(n1173),
	.Y(n691));
   OAI22XL U1144 (.A0(n767),
	.A1(n1363),
	.B0(n774),
	.B1(n1173),
	.Y(n690));
   OAI22XL U1145 (.A0(n767),
	.A1(n1362),
	.B0(n775),
	.B1(n1173),
	.Y(n689));
   OAI22XL U1146 (.A0(n767),
	.A1(n1361),
	.B0(n776),
	.B1(n1173),
	.Y(n688));
   OAI22XL U1147 (.A0(n767),
	.A1(n1360),
	.B0(n777),
	.B1(n1173),
	.Y(n687));
   OAI22XL U1148 (.A0(n767),
	.A1(n1359),
	.B0(n778),
	.B1(n1173),
	.Y(n686));
   OAI22XL U1149 (.A0(n767),
	.A1(n1358),
	.B0(n779),
	.B1(n1173),
	.Y(n685));
   OAI22XL U1150 (.A0(n767),
	.A1(n1357),
	.B0(n780),
	.B1(n1173),
	.Y(n684));
   OAI22XL U1151 (.A0(n767),
	.A1(n1356),
	.B0(n789),
	.B1(n1173),
	.Y(n683));
   OAI22XL U1152 (.A0(n767),
	.A1(n1355),
	.B0(n790),
	.B1(n1173),
	.Y(n682));
   OAI22XL U1153 (.A0(n767),
	.A1(n1354),
	.B0(n791),
	.B1(n1173),
	.Y(n681));
   OAI22XL U1154 (.A0(n767),
	.A1(n1353),
	.B0(n792),
	.B1(n1173),
	.Y(n680));
   OAI22XL U1155 (.A0(n767),
	.A1(n1352),
	.B0(n793),
	.B1(n1173),
	.Y(n679));
   OAI22XL U1156 (.A0(n767),
	.A1(n1351),
	.B0(n794),
	.B1(n1173),
	.Y(n678));
   OAI22XL U1157 (.A0(n767),
	.A1(n1350),
	.B0(n795),
	.B1(n1173),
	.Y(n677));
   OAI22XL U1158 (.A0(n767),
	.A1(n1349),
	.B0(n796),
	.B1(n1173),
	.Y(n676));
   OAI22XL U1159 (.A0(n767),
	.A1(n1348),
	.B0(n781),
	.B1(n1174),
	.Y(n675));
   OAI22XL U1160 (.A0(n767),
	.A1(n1347),
	.B0(n782),
	.B1(n1174),
	.Y(n674));
   OAI22XL U1161 (.A0(n767),
	.A1(n1346),
	.B0(n783),
	.B1(n1174),
	.Y(n673));
   OAI22XL U1162 (.A0(n767),
	.A1(n1345),
	.B0(n784),
	.B1(n1174),
	.Y(n672));
   OAI22XL U1163 (.A0(n767),
	.A1(n1344),
	.B0(n785),
	.B1(n1174),
	.Y(n671));
   OAI22XL U1164 (.A0(n767),
	.A1(n1343),
	.B0(n786),
	.B1(n1174),
	.Y(n670));
   OAI22XL U1165 (.A0(n767),
	.A1(n1342),
	.B0(n787),
	.B1(n1174),
	.Y(n669));
   OAI22XL U1166 (.A0(n767),
	.A1(n1341),
	.B0(n788),
	.B1(n1174),
	.Y(n668));
   CLKINVX1 U1167 (.A(n1173),
	.Y(n1172));
   OAI22XL U1168 (.A0(n768),
	.A1(n1340),
	.B0(n797),
	.B1(n1176),
	.Y(n667));
   OAI22XL U1169 (.A0(n768),
	.A1(n1339),
	.B0(n798),
	.B1(n1176),
	.Y(n666));
   OAI22XL U1170 (.A0(n768),
	.A1(n1338),
	.B0(n799),
	.B1(n1176),
	.Y(n665));
   OAI22XL U1171 (.A0(n768),
	.A1(n1337),
	.B0(n800),
	.B1(n1176),
	.Y(n664));
   OAI22XL U1172 (.A0(n768),
	.A1(n1336),
	.B0(n801),
	.B1(n1176),
	.Y(n663));
   OAI22XL U1173 (.A0(n768),
	.A1(n1335),
	.B0(n802),
	.B1(n1176),
	.Y(n662));
   OAI22XL U1174 (.A0(n768),
	.A1(n1334),
	.B0(n803),
	.B1(n1176),
	.Y(n661));
   OAI22XL U1175 (.A0(n768),
	.A1(n1333),
	.B0(n804),
	.B1(n1176),
	.Y(n660));
   OAI22XL U1176 (.A0(n768),
	.A1(n1332),
	.B0(n773),
	.B1(n1178),
	.Y(n659));
   OAI22XL U1177 (.A0(n768),
	.A1(n1331),
	.B0(n774),
	.B1(n1178),
	.Y(n658));
   OAI22XL U1178 (.A0(n768),
	.A1(n1330),
	.B0(n775),
	.B1(n1178),
	.Y(n657));
   OAI22XL U1179 (.A0(n768),
	.A1(n1329),
	.B0(n776),
	.B1(n1178),
	.Y(n656));
   OAI22XL U1180 (.A0(n768),
	.A1(n1328),
	.B0(n777),
	.B1(n1178),
	.Y(n655));
   OAI22XL U1181 (.A0(n768),
	.A1(n1327),
	.B0(n778),
	.B1(n1178),
	.Y(n654));
   OAI22XL U1182 (.A0(n768),
	.A1(n1326),
	.B0(n779),
	.B1(n1178),
	.Y(n653));
   OAI22XL U1183 (.A0(n768),
	.A1(n1325),
	.B0(n780),
	.B1(n1178),
	.Y(n652));
   OAI22XL U1184 (.A0(n768),
	.A1(n1324),
	.B0(n789),
	.B1(n1178),
	.Y(n651));
   OAI22XL U1185 (.A0(n768),
	.A1(n1323),
	.B0(n790),
	.B1(n1178),
	.Y(n650));
   OAI22XL U1186 (.A0(n768),
	.A1(n1322),
	.B0(n791),
	.B1(n1178),
	.Y(n649));
   OAI22XL U1187 (.A0(n768),
	.A1(n1321),
	.B0(n792),
	.B1(n1178),
	.Y(n648));
   OAI22XL U1188 (.A0(n768),
	.A1(n1320),
	.B0(n793),
	.B1(n1178),
	.Y(n647));
   OAI22XL U1189 (.A0(n768),
	.A1(n1319),
	.B0(n794),
	.B1(n1178),
	.Y(n646));
   OAI22XL U1190 (.A0(n768),
	.A1(n1318),
	.B0(n795),
	.B1(n1178),
	.Y(n645));
   OAI22XL U1191 (.A0(n768),
	.A1(n1317),
	.B0(n796),
	.B1(n1178),
	.Y(n644));
   OAI22XL U1192 (.A0(n768),
	.A1(n1316),
	.B0(n781),
	.B1(n1179),
	.Y(n643));
   OAI22XL U1193 (.A0(n768),
	.A1(n1315),
	.B0(n782),
	.B1(n1179),
	.Y(n642));
   OAI22XL U1194 (.A0(n768),
	.A1(n1314),
	.B0(n783),
	.B1(n1179),
	.Y(n641));
   OAI22XL U1195 (.A0(n768),
	.A1(n1313),
	.B0(n784),
	.B1(n1179),
	.Y(n640));
   OAI22XL U1196 (.A0(n768),
	.A1(n1312),
	.B0(n785),
	.B1(n1179),
	.Y(n639));
   OAI22XL U1197 (.A0(n768),
	.A1(n1311),
	.B0(n786),
	.B1(n1179),
	.Y(n638));
   OAI22XL U1198 (.A0(n768),
	.A1(n1310),
	.B0(n787),
	.B1(n1179),
	.Y(n637));
   OAI22XL U1199 (.A0(n768),
	.A1(n1309),
	.B0(n788),
	.B1(n1179),
	.Y(n636));
   CLKINVX1 U1200 (.A(n1178),
	.Y(n1177));
   OAI22XL U1201 (.A0(n766),
	.A1(n1308),
	.B0(n797),
	.B1(n1180),
	.Y(n635));
   OAI22XL U1202 (.A0(n766),
	.A1(n1307),
	.B0(n798),
	.B1(n1180),
	.Y(n634));
   OAI22XL U1203 (.A0(n766),
	.A1(n1306),
	.B0(n799),
	.B1(n1180),
	.Y(n633));
   OAI22XL U1204 (.A0(n766),
	.A1(n1305),
	.B0(n800),
	.B1(n1180),
	.Y(n632));
   OAI22XL U1205 (.A0(n766),
	.A1(n1304),
	.B0(n801),
	.B1(n1180),
	.Y(n631));
   OAI22XL U1206 (.A0(n766),
	.A1(n1303),
	.B0(n802),
	.B1(n1180),
	.Y(n630));
   OAI22XL U1207 (.A0(n766),
	.A1(n1302),
	.B0(n803),
	.B1(n1180),
	.Y(n629));
   OAI22XL U1208 (.A0(n766),
	.A1(n1301),
	.B0(n804),
	.B1(n1180),
	.Y(n628));
   NAND3X1 U1209 (.A(FE_DBTN2_N541),
	.B(N542),
	.C(N543),
	.Y(n1122));
   OAI22XL U1210 (.A0(n766),
	.A1(n1300),
	.B0(n773),
	.B1(FE_OFN6_n1182),
	.Y(n627));
   OAI22XL U1211 (.A0(n766),
	.A1(n1299),
	.B0(n774),
	.B1(FE_OFN6_n1182),
	.Y(n626));
   OAI22XL U1212 (.A0(n766),
	.A1(n1298),
	.B0(n775),
	.B1(FE_OFN6_n1182),
	.Y(n625));
   OAI22XL U1213 (.A0(n766),
	.A1(n1297),
	.B0(n776),
	.B1(FE_OFN6_n1182),
	.Y(n624));
   OAI22XL U1214 (.A0(n766),
	.A1(n1296),
	.B0(n777),
	.B1(FE_OFN6_n1182),
	.Y(n623));
   OAI22XL U1215 (.A0(n766),
	.A1(n1295),
	.B0(n778),
	.B1(FE_OFN6_n1182),
	.Y(n622));
   OAI22XL U1216 (.A0(n766),
	.A1(n1294),
	.B0(n779),
	.B1(FE_OFN6_n1182),
	.Y(n621));
   OAI22XL U1217 (.A0(n766),
	.A1(n1293),
	.B0(n780),
	.B1(FE_OFN6_n1182),
	.Y(n620));
   OAI22XL U1218 (.A0(n766),
	.A1(n1292),
	.B0(n789),
	.B1(FE_OFN6_n1182),
	.Y(n619));
   OAI22XL U1219 (.A0(n766),
	.A1(n1291),
	.B0(n790),
	.B1(FE_OFN6_n1182),
	.Y(n618));
   OAI22XL U1220 (.A0(n766),
	.A1(n1290),
	.B0(n791),
	.B1(FE_OFN6_n1182),
	.Y(n617));
   OAI22XL U1221 (.A0(n766),
	.A1(n1289),
	.B0(n792),
	.B1(FE_OFN6_n1182),
	.Y(n616));
   OAI22XL U1222 (.A0(n766),
	.A1(n1288),
	.B0(n793),
	.B1(FE_OFN6_n1182),
	.Y(n615));
   OAI22XL U1223 (.A0(n766),
	.A1(n1287),
	.B0(n794),
	.B1(FE_OFN6_n1182),
	.Y(n614));
   OAI22XL U1224 (.A0(n766),
	.A1(n1286),
	.B0(n795),
	.B1(FE_OFN6_n1182),
	.Y(n613));
   OAI22XL U1225 (.A0(n766),
	.A1(n1285),
	.B0(n796),
	.B1(FE_OFN6_n1182),
	.Y(n612));
   OAI22XL U1226 (.A0(n766),
	.A1(n1284),
	.B0(n781),
	.B1(n1183),
	.Y(n611));
   OAI22XL U1227 (.A0(n766),
	.A1(n1283),
	.B0(n782),
	.B1(n1183),
	.Y(n610));
   OAI22XL U1228 (.A0(n766),
	.A1(n1282),
	.B0(n783),
	.B1(n1183),
	.Y(n609));
   OAI22XL U1229 (.A0(n766),
	.A1(n1281),
	.B0(n784),
	.B1(n1183),
	.Y(n608));
   OAI22XL U1230 (.A0(n766),
	.A1(n1280),
	.B0(n785),
	.B1(n1183),
	.Y(n607));
   OAI22XL U1231 (.A0(n766),
	.A1(n1279),
	.B0(n786),
	.B1(n1183),
	.Y(n606));
   OAI22XL U1232 (.A0(n766),
	.A1(n1278),
	.B0(n787),
	.B1(n1183),
	.Y(n605));
   OAI22XL U1233 (.A0(n766),
	.A1(n1277),
	.B0(n788),
	.B1(n1183),
	.Y(n604));
   NAND2X1 U1234 (.A(n1151),
	.B(n1127),
	.Y(n1152));
   CLKINVX1 U1235 (.A(n1121),
	.Y(n1151));
   CLKINVX1 U1236 (.A(FE_OFN6_n1182),
	.Y(n1181));
   NAND2X1 U1237 (.A(n1159),
	.B(n1095),
	.Y(n1160));
   NOR2X1 U1238 (.A(conv_row_3__0_),
	.B(origin_row[1]),
	.Y(n1159));
   CLKINVX1 U1239 (.A(n1184),
	.Y(n1170));
   OAI2BB2XL U1240 (.A0N(N2268),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1276),
	.Y(n603));
   OAI2BB2XL U1241 (.A0N(N2267),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1275),
	.Y(n602));
   OAI2BB2XL U1242 (.A0N(N2266),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1274),
	.Y(n601));
   OAI2BB2XL U1243 (.A0N(N2265),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1273),
	.Y(n600));
   OAI2BB2XL U1244 (.A0N(N2264),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1272),
	.Y(n599));
   OAI2BB2XL U1245 (.A0N(N2263),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1271),
	.Y(n598));
   OAI2BB2XL U1246 (.A0N(N2262),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1270),
	.Y(n597));
   OAI2BB2XL U1247 (.A0N(N2261),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1269),
	.Y(n596));
   OAI2BB2XL U1248 (.A0N(N2260),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1268),
	.Y(n5950));
   OAI2BB2XL U1249 (.A0N(N2259),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1267),
	.Y(n5940));
   OAI2BB2XL U1250 (.A0N(N2258),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1266),
	.Y(n5930));
   OAI2BB2XL U1251 (.A0N(N2257),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1265),
	.Y(n5920));
   OAI2BB2XL U1252 (.A0N(N2256),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1264),
	.Y(n5910));
   OAI2BB2XL U1253 (.A0N(N2255),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1263),
	.Y(n5900));
   OAI2BB2XL U1254 (.A0N(N2254),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1262),
	.Y(n5890));
   OAI2BB2XL U1255 (.A0N(N2253),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1261),
	.Y(n5880));
   OAI2BB2XL U1256 (.A0N(N2252),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1260),
	.Y(n5870));
   OAI2BB2XL U1257 (.A0N(N2157),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1259),
	.Y(n5860));
   OAI2BB2XL U1258 (.A0N(N2156),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1258),
	.Y(n5850));
   OAI2BB2XL U1259 (.A0N(N2155),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1257),
	.Y(n584));
   OAI2BB2XL U1260 (.A0N(N2154),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1256),
	.Y(n583));
   OAI2BB2XL U1261 (.A0N(N2153),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1255),
	.Y(n582));
   OAI2BB2XL U1262 (.A0N(N2152),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1254),
	.Y(n581));
   OAI2BB2XL U1263 (.A0N(N2151),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1253),
	.Y(n580));
   OAI2BB2XL U1264 (.A0N(N2150),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1252),
	.Y(n579));
   OAI2BB2XL U1265 (.A0N(N2149),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1251),
	.Y(n578));
   OAI2BB2XL U1266 (.A0N(N2148),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1250),
	.Y(n577));
   OAI2BB2XL U1267 (.A0N(N2147),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1249),
	.Y(n576));
   OAI2BB2XL U1268 (.A0N(N2146),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1248),
	.Y(n575));
   OAI2BB2XL U1269 (.A0N(N2145),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1247),
	.Y(n574));
   OAI2BB2XL U1270 (.A0N(N2144),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1246),
	.Y(n573));
   OAI2BB2XL U1271 (.A0N(N2143),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1245),
	.Y(n572));
   OAI2BB2XL U1272 (.A0N(N2142),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1244),
	.Y(n571));
   OAI2BB2XL U1273 (.A0N(N2141),
	.A1N(n1186),
	.B0(n1185),
	.B1(n1243),
	.Y(n570));
   NOR2BX4 U1274 (.AN(n1185),
	.B(n1165),
	.Y(n1186));
   AO21X4 U1275 (.A0(n1187),
	.A1(n1113),
	.B0(n1055),
	.Y(n1185));
   OAI2BB2XL U1276 (.A0N(N2045),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1242),
	.Y(n569));
   OAI2BB2XL U1277 (.A0N(N2044),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1241),
	.Y(n568));
   OAI2BB2XL U1278 (.A0N(N2043),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1240),
	.Y(n567));
   OAI2BB2XL U1279 (.A0N(N2042),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1239),
	.Y(n566));
   OAI2BB2XL U1280 (.A0N(N2041),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1238),
	.Y(n565));
   OAI2BB2XL U1281 (.A0N(N2040),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1237),
	.Y(n564));
   OAI2BB2XL U1282 (.A0N(N2039),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1236),
	.Y(n563));
   OAI2BB2XL U1283 (.A0N(N2038),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1235),
	.Y(n562));
   OAI2BB2XL U1284 (.A0N(N2037),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1234),
	.Y(n561));
   OAI2BB2XL U1285 (.A0N(N2036),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1233),
	.Y(n560));
   OAI2BB2XL U1286 (.A0N(N2035),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1232),
	.Y(n559));
   OAI2BB2XL U1287 (.A0N(N2034),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1231),
	.Y(n558));
   OAI2BB2XL U1288 (.A0N(N2033),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1230),
	.Y(n557));
   OAI2BB2XL U1289 (.A0N(N2032),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1229),
	.Y(n556));
   OAI2BB2XL U1290 (.A0N(N2031),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1228),
	.Y(n555));
   OAI2BB2XL U1291 (.A0N(N2030),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1227),
	.Y(n554));
   OAI2BB2XL U1292 (.A0N(N2029),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1226),
	.Y(n553));
   OAI2BB2XL U1293 (.A0N(N1934),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1225),
	.Y(n552));
   OAI2BB2XL U1294 (.A0N(N1933),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1224),
	.Y(n5510));
   OAI2BB2XL U1295 (.A0N(N1932),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1223),
	.Y(n5500));
   OAI2BB2XL U1296 (.A0N(N1931),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1222),
	.Y(n5490));
   OAI2BB2XL U1297 (.A0N(N1930),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1221),
	.Y(n5480));
   OAI2BB2XL U1298 (.A0N(N1929),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1220),
	.Y(n5470));
   OAI2BB2XL U1299 (.A0N(N1928),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1219),
	.Y(n5460));
   OAI2BB2XL U1300 (.A0N(N1927),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1218),
	.Y(n5450));
   OAI2BB2XL U1301 (.A0N(N1926),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1217),
	.Y(n5440));
   OAI2BB2XL U1302 (.A0N(N1925),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1216),
	.Y(n5430));
   OAI2BB2XL U1303 (.A0N(N1924),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1215),
	.Y(n5420));
   OAI2BB2XL U1304 (.A0N(N1923),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1214),
	.Y(n5410));
   OAI2BB2XL U1305 (.A0N(N1922),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1213),
	.Y(n540));
   OAI2BB2XL U1306 (.A0N(N1921),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1212),
	.Y(n539));
   OAI2BB2XL U1307 (.A0N(N1920),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1211),
	.Y(n538));
   OAI2BB2XL U1308 (.A0N(N1919),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1210),
	.Y(n537));
   OAI2BB2XL U1309 (.A0N(N1918),
	.A1N(FE_OFN15_n769),
	.B0(n1165),
	.B1(n1209),
	.Y(n536));
   INVX6 U1310 (.A(n1188),
	.Y(n1165));
   OAI21XL U1311 (.A0(n1055),
	.A1(n1099),
	.B0(n1175),
	.Y(n1188));
   NAND2X1 U1312 (.A(n1184),
	.B(n1146),
	.Y(n1175));
   OAI21XL U1313 (.A0(n1105),
	.A1(n1187),
	.B0(n1117),
	.Y(n1184));
   NAND4X1 U1314 (.A(n476),
	.B(n477),
	.C(n475),
	.D(n1189),
	.Y(n1187));
   NOR3X1 U1315 (.A(counter_256[7]),
	.B(n808),
	.C(counter_256[6]),
	.Y(n1189));
   CLKINVX1 U1316 (.A(n1105),
	.Y(n1099));
   NAND2X1 U1317 (.A(n299),
	.B(n304),
	.Y(n1105));
   OAI2BB2XL U1318 (.A0N(N2422),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n397),
	.Y(n535));
   OAI2BB2XL U1319 (.A0N(N2421),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n398),
	.Y(n534));
   OAI2BB2XL U1320 (.A0N(N2420),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n399),
	.Y(n533));
   OAI2BB2XL U1321 (.A0N(N2419),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n400),
	.Y(n532));
   OAI2BB2XL U1322 (.A0N(N2418),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n401),
	.Y(n531));
   OAI2BB2XL U1323 (.A0N(N2417),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n402),
	.Y(n530));
   OAI2BB2XL U1324 (.A0N(N2416),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n403),
	.Y(n529));
   OAI2BB2XL U1325 (.A0N(N2415),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n404),
	.Y(n528));
   OAI2BB2XL U1326 (.A0N(N2414),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n405),
	.Y(n527));
   OAI2BB2XL U1327 (.A0N(N2413),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n406),
	.Y(n526));
   OAI2BB2XL U1328 (.A0N(N2412),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n407),
	.Y(n525));
   OAI2BB2XL U1329 (.A0N(N2411),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n408),
	.Y(n524));
   OAI2BB2XL U1330 (.A0N(N2410),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n409),
	.Y(n523));
   OAI2BB2XL U1331 (.A0N(N2409),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4100),
	.Y(n522));
   OAI2BB2XL U1332 (.A0N(N2408),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4110),
	.Y(n521));
   OAI2BB2XL U1333 (.A0N(N2407),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4120),
	.Y(n520));
   OAI2BB2XL U1334 (.A0N(N2406),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4130),
	.Y(n519));
   OAI2BB2XL U1335 (.A0N(N2405),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4140),
	.Y(n518));
   OAI2BB2XL U1336 (.A0N(N2404),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4150),
	.Y(n517));
   OAI2BB2XL U1337 (.A0N(N2403),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4160),
	.Y(n516));
   OAI2BB2XL U1338 (.A0N(N2402),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4170),
	.Y(n515));
   OAI2BB2XL U1339 (.A0N(N2401),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4180),
	.Y(n514));
   OAI2BB2XL U1340 (.A0N(N2400),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4190),
	.Y(n513));
   OAI2BB2XL U1341 (.A0N(N2399),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n4200),
	.Y(n512));
   OAI2BB2XL U1342 (.A0N(N2398),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n421),
	.Y(n511));
   OAI2BB2XL U1343 (.A0N(N2397),
	.A1N(FE_DBTN0_n771),
	.B0(n772),
	.B1(n422),
	.Y(n510));
   OAI2BB2XL U1344 (.A0N(N2395),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n423),
	.Y(n509));
   OAI2BB2XL U1345 (.A0N(N2394),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n424),
	.Y(n508));
   OAI2BB2XL U1346 (.A0N(N2393),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n425),
	.Y(n5070));
   OAI2BB2XL U1347 (.A0N(N2392),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n426),
	.Y(n5060));
   OAI2BB2XL U1348 (.A0N(N2391),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n427),
	.Y(n5050));
   OAI2BB2XL U1349 (.A0N(N2390),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n428),
	.Y(n5040));
   OAI2BB2XL U1350 (.A0N(N2389),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n429),
	.Y(n5030));
   OAI2BB2XL U1351 (.A0N(N2388),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n430),
	.Y(n5020));
   OAI2BB2XL U1352 (.A0N(N2387),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n431),
	.Y(n5010));
   OAI2BB2XL U1353 (.A0N(N2386),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n432),
	.Y(n5000));
   OAI2BB2XL U1354 (.A0N(N2385),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n433),
	.Y(n4990));
   OAI2BB2XL U1355 (.A0N(N2384),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n434),
	.Y(n4980));
   OAI2BB2XL U1356 (.A0N(N2383),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n435),
	.Y(n4970));
   OAI2BB2XL U1357 (.A0N(N2382),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4360),
	.Y(n496));
   OAI2BB2XL U1358 (.A0N(N2381),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4370),
	.Y(n495));
   OAI2BB2XL U1359 (.A0N(N2380),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4380),
	.Y(n494));
   OAI2BB2XL U1360 (.A0N(N2379),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4390),
	.Y(n493));
   OAI2BB2XL U1361 (.A0N(N2378),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4400),
	.Y(n492));
   OAI2BB2XL U1362 (.A0N(N2377),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4410),
	.Y(n491));
   OAI2BB2XL U1363 (.A0N(N2376),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4420),
	.Y(n490));
   OAI2BB2XL U1364 (.A0N(N2375),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n4430),
	.Y(n489));
   OAI2BB2XL U1365 (.A0N(N2374),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n444),
	.Y(n488));
   OAI2BB2XL U1366 (.A0N(N2373),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n445),
	.Y(n487));
   OAI2BB2XL U1367 (.A0N(N2372),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n446),
	.Y(n486));
   OAI2BB2XL U1368 (.A0N(N2371),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n447),
	.Y(n485));
   OAI2BB2XL U1369 (.A0N(N2370),
	.A1N(FE_OFN16_n1190),
	.B0(n770),
	.B1(n448),
	.Y(n484));
   CLKINVX1 U1370 (.A(n1191),
	.Y(n1190));
   NAND4X1 U1371 (.A(n1200),
	.B(n1193),
	.C(n1113),
	.D(n1194),
	.Y(n1191));
   NOR4X1 U1372 (.A(counter_256[2]),
	.B(n1195),
	.C(counter_256[4]),
	.D(n1196),
	.Y(n1194));
   XOR2X1 U1373 (.A(counter_256[7]),
	.B(N318),
	.Y(n1196));
   NOR2X1 U1374 (.A(n1068),
	.B(n1064),
	.Y(n1117));
   XOR2X1 U1375 (.A(n474),
	.B(N316),
	.Y(n1193));
   CLKINVX1 U1377 (.A(n1054),
	.Y(n1130));
   CLKINVX1 U1378 (.A(n1083),
	.Y(n461));
   MXI2X1 U1379 (.S0(n1405),
	.B(n1198),
	.A(n453),
	.Y(n460));
   MXI2X1 U1380 (.S0(n1405),
	.B(n1197),
	.A(n454),
	.Y(n459));
   MXI2X1 U1381 (.S0(n1405),
	.B(n1144),
	.A(n455),
	.Y(n458));
   MXI2X1 U1382 (.S0(n1405),
	.B(n1142),
	.A(n456),
	.Y(n457));
   NAND2X1 U1383 (.A(n390),
	.B(n771),
	.Y(N2498));
   NAND2X1 U1384 (.A(n389),
	.B(n771),
	.Y(N2497));
   NAND2X1 U1385 (.A(n388),
	.B(n771),
	.Y(N2496));
   NAND4X1 U1386 (.A(n1199),
	.B(n1200),
	.C(n1201),
	.D(n1202),
	.Y(n1048));
   NOR4X1 U1387 (.A(counter_256[2]),
	.B(counter_256[3]),
	.C(FE_DBTN1_n475),
	.D(n1204),
	.Y(n1202));
   XOR2X1 U1388 (.A(n808),
	.B(N316),
	.Y(n1204));
   NOR2X1 U1389 (.A(n1064),
	.B(n1106),
	.Y(n1201));
   NAND2BX1 U1390 (.AN(n299),
	.B(n304),
	.Y(n1106));
   NAND3X1 U1391 (.A(op[0]),
	.B(n1138),
	.C(op[1]),
	.Y(n1064));
   NOR2X1 U1392 (.A(n1197),
	.B(op[3]),
	.Y(n1138));
   XOR2X1 U1393 (.A(n473),
	.B(N317),
	.Y(n1200));
   XOR2X1 U1394 (.A(n451),
	.B(N318),
	.Y(n1199));
   NAND3X1 U1395 (.A(n1054),
	.B(n1024),
	.C(state[3]),
	.Y(n1068));
   XOR2X1 U1396 (.A(n1205),
	.B(n945),
	.Y(N2483));
   NAND2BX1 U1397 (.AN(n946),
	.B(n1406),
	.Y(n1205));
   XOR2X1 U1398 (.A(n946),
	.B(n1131),
	.Y(N2482));
   NAND2X1 U1399 (.A(n851),
	.B(FE_DBTN2_N541),
	.Y(n1121));
endmodule

