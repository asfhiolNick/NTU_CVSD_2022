/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : R-2020.09-SP5
// Date      : Mon Nov  7 17:00:47 2022
/////////////////////////////////////////////////////////////


module core ( i_clk, i_rst_n, i_op_valid, i_op_mode, o_op_ready, i_in_valid, 
        i_in_data, o_in_ready, o_out_valid, o_out_data );
  input [3:0] i_op_mode;
  input [7:0] i_in_data;
  output [12:0] o_out_data;
  input i_clk, i_rst_n, i_op_valid, i_in_valid;
  output o_op_ready, o_in_ready, o_out_valid;
  wire   N212, N215, N216, N219, N220, N221, N222, N305, N306, N307, N308,
         N316, N317, N318, op_ready_nxt, N410, N411, N412, N413, N414, N415,
         N416, N417, N418, N419, N420, N436, N437, N438, N439, N440, N441,
         N442, N443, conv_row_3__0_, sram_wen_0, sram_wen_1, sram_wen_2,
         sram_wen_3, N497, N498, N499, N500, N501, N502, N503, N504, N505,
         N506, N507, N541, N542, N543, N544, N545, N546, N547, N548, N549,
         N550, N551, N585, N586, N587, N588, N589, N590, N591, N592, N593,
         N594, N595, N1850, N1851, N1852, N1853, N1854, N1855, N1856, N1857,
         N1858, N1918, N1919, N1920, N1921, N1922, N1923, N1924, N1925, N1926,
         N1927, N1928, N1929, N1930, N1931, N1932, N1933, N1934, N2029, N2030,
         N2031, N2032, N2033, N2034, N2035, N2036, N2037, N2038, N2039, N2040,
         N2041, N2042, N2043, N2044, N2045, N2141, N2142, N2143, N2144, N2145,
         N2146, N2147, N2148, N2149, N2150, N2151, N2152, N2153, N2154, N2155,
         N2156, N2157, N2252, N2253, N2254, N2255, N2256, N2257, N2258, N2259,
         N2260, N2261, N2262, N2263, N2264, N2265, N2266, N2267, N2268, N2370,
         N2371, N2372, N2373, N2374, N2375, N2376, N2377, N2378, N2379, N2380,
         N2381, N2382, N2383, N2384, N2385, N2386, N2387, N2388, N2389, N2390,
         N2391, N2392, N2393, N2394, N2395, N2397, N2398, N2399, N2400, N2401,
         N2402, N2403, N2404, N2405, N2406, N2407, N2408, N2409, N2410, N2411,
         N2412, N2413, N2414, N2415, N2416, N2417, N2418, N2419, N2420, N2421,
         N2422, N2482, N2483, N2496, N2497, N2498, n299, n304, n388, n389,
         n390, n397, n398, n399, n400, n401, n402, n403, n404, n405, n406,
         n407, n408, n409, n4100, n4110, n4120, n4130, n4140, n4150, n4160,
         n4170, n4180, n4190, n4200, n421, n422, n423, n424, n425, n426, n427,
         n428, n429, n430, n431, n432, n433, n434, n435, n4360, n4370, n4380,
         n4390, n4400, n4410, n4420, n4430, n444, n445, n446, n447, n448, n449,
         n451, n453, n454, n455, n456, n457, n458, n459, n460, n461, n462,
         n463, n464, n465, n466, n467, n468, n469, n470, n471, n472, n473,
         n474, n475, n476, n477, n480, n481, n482, n484, n485, n486, n487,
         n488, n489, n490, n491, n492, n493, n494, n495, n496, n4970, n4980,
         n4990, n5000, n5010, n5020, n5030, n5040, n5050, n5060, n5070, n508,
         n509, n510, n511, n512, n513, n514, n515, n516, n517, n518, n519,
         n520, n521, n522, n523, n524, n525, n526, n527, n528, n529, n530,
         n531, n532, n533, n534, n535, n536, n537, n538, n539, n540, n5410,
         n5420, n5430, n5440, n5450, n5460, n5470, n5480, n5490, n5500, n5510,
         n552, n553, n554, n555, n556, n557, n558, n559, n560, n561, n562,
         n563, n564, n565, n566, n567, n568, n569, n570, n571, n572, n573,
         n574, n575, n576, n577, n578, n579, n580, n581, n582, n583, n584,
         n5850, n5860, n5870, n5880, n5890, n5900, n5910, n5920, n5930, n5940,
         n5950, n596, n597, n598, n599, n600, n601, n602, n603, n604, n605,
         n606, n607, n608, n609, n610, n611, n612, n613, n614, n615, n616,
         n617, n618, n619, n620, n621, n622, n623, n624, n625, n626, n627,
         n628, n629, n630, n631, n632, n633, n634, n635, n636, n637, n638,
         n639, n640, n641, n642, n643, n644, n645, n646, n647, n648, n649,
         n650, n651, n652, n653, n654, n655, n656, n657, n658, n659, n660,
         n661, n662, n663, n664, n665, n666, n667, n668, n669, n670, n671,
         n672, n673, n674, n675, n676, n677, n678, n679, n680, n681, n682,
         n683, n684, n685, n686, n687, n688, n689, n690, n691, n692, n693,
         n694, n695, n696, n697, n698, n699, n700, n701, n702, n703, n704,
         n705, n706, n707, n708, n709, n710, n711, n712, n713, n714, n715,
         n716, n717, n718, n719, n720, n721, n722, n723, n724, n725, n726,
         n727, n728, n729, n730, n731, n732, n733, n734, n735, n736, n737,
         n738, n739, n740, n741, n742, n743, n744, n745, n747, n748, n749,
         n750, n751, n752, n754, n755, n756, n757, n758, n759, n760, n761,
         n762, n763, n764, N2250, N2249, N2248, N2247, N2246, N2245, N2244,
         N2243, N2239, N2238, N2237, N2236, N2235, N2234, N2233, N2232, N2231,
         N2215, N2214, N2213, N2212, N2211, N2210, N2209, N2208, N2207, N2206,
         N2205, N2203, N2202, N2201, N2200, N2199, N2198, N2197, N2196, N2195,
         N2194, N2192, N2191, N2190, N2189, N2188, N2187, N2186, N2185, N2184,
         N2174, N2173, N2172, N2171, N2170, N2169, N2168, N2167, N2166, N2165,
         N2164, N2163, N2162, N2161, N2160, N2159, N2158, N2139, N2138, N2137,
         N2136, N2135, N2134, N2133, N2132, N2128, N2127, N2126, N2125, N2124,
         N2123, N2122, N2121, N2120, N2104, N2103, N2102, N2101, N2100, N2099,
         N2098, N2097, N2096, N2095, N2094, N2092, N2091, N2090, N2089, N2088,
         N2087, N2086, N2085, N2084, N2083, N2081, N2080, N2079, N2078, N2077,
         N2076, N2075, N2074, N2073, N2063, N2062, N2061, N2060, N2059, N2058,
         N2057, N2056, N2055, N2054, N2053, N2052, N2051, N2050, N2049, N2048,
         N2047, N2027, N2026, N2025, N2024, N2023, N2022, N2021, N2020, N2016,
         N2015, N2014, N2013, N2012, N2011, N2010, N2009, N2008, N1992, N1991,
         N1990, N1989, N1988, N1987, N1986, N1985, N1984, N1983, N1982, N1980,
         N1979, N1978, N1977, N1976, N1975, N1974, N1973, N1972, N1971, N1969,
         N1968, N1967, N1966, N1965, N1964, N1963, N1962, N1961, N1951, N1950,
         N1949, N1948, N1947, N1946, N1945, N1944, N1943, N1942, N1941, N1940,
         N1939, N1938, N1937, N1936, N1935, N1916, N1915, N1914, N1913, N1912,
         N1911, N1910, N1909, N1905, N1904, N1903, N1902, N1901, N1900, N1899,
         N1898, N1897, N1881, N1880, N1879, N1878, N1877, N1876, N1875, N1874,
         N1873, N1872, N1871, N1869, N1868, N1867, N1866, N1865, N1864, N1863,
         N1862, N1861, N1860, N1840, N1839, N1838, N1837, N1836, N1835, N1834,
         N1833, N1832, N1831, N1830, N1829, N1828, N1827, N1826, N1825, N1824,
         r796_carry_2_, r796_carry_3_, r796_carry_4_, r796_carry_5_,
         r796_carry_6_, r796_carry_7_, r796_carry_8_, r796_carry_9_,
         r796_carry_10_, add_2_root_add_0_root_add_365_9_carry_3_,
         add_2_root_add_0_root_add_365_9_carry_4_,
         add_2_root_add_0_root_add_365_9_carry_5_,
         add_2_root_add_0_root_add_365_9_carry_6_,
         add_2_root_add_0_root_add_365_9_carry_7_,
         add_2_root_add_0_root_add_365_9_carry_8_,
         add_2_root_add_0_root_add_365_9_carry_9_,
         add_2_root_add_0_root_add_369_9_carry_3_,
         add_2_root_add_0_root_add_369_9_carry_4_,
         add_2_root_add_0_root_add_369_9_carry_5_,
         add_2_root_add_0_root_add_369_9_carry_6_,
         add_2_root_add_0_root_add_369_9_carry_7_,
         add_2_root_add_0_root_add_369_9_carry_8_,
         add_2_root_add_0_root_add_369_9_carry_9_,
         add_2_root_add_0_root_add_370_9_carry_3_,
         add_2_root_add_0_root_add_370_9_carry_4_,
         add_2_root_add_0_root_add_370_9_carry_5_,
         add_2_root_add_0_root_add_370_9_carry_6_,
         add_2_root_add_0_root_add_370_9_carry_7_,
         add_2_root_add_0_root_add_370_9_carry_8_,
         add_2_root_add_0_root_add_370_9_carry_9_,
         add_2_root_add_0_root_add_364_9_carry_3_,
         add_2_root_add_0_root_add_364_9_carry_4_,
         add_2_root_add_0_root_add_364_9_carry_5_,
         add_2_root_add_0_root_add_364_9_carry_6_,
         add_2_root_add_0_root_add_364_9_carry_7_,
         add_2_root_add_0_root_add_364_9_carry_8_,
         add_2_root_add_0_root_add_364_9_carry_9_, n766, n767, n768, n769,
         n770, n771, n772, n773, n774, n775, n776, n777, n778, n779, n780,
         n781, n782, n783, n784, n785, n786, n787, n788, n789, n790, n791,
         n792, n793, n794, n795, n796, n797, n798, n799, n800, n801, n802,
         n803, n804, n805, n806, n807, n808, n809, n810, n811, n812, n813,
         n814, n815, n816, n817, n818, n819, n820, n821, n822, n823, n824,
         n825, n826, n827, n828, n829, n830, n831, n832, n833, n834, n835,
         n836, n837, n838, n839, n840, n841, n842, n843, n844, n845, n846,
         n847, n848, n849, n850, n851, n852, n853, n854, n855, n856, n857,
         n858, n859, n860, n861, n862, n863, n864, n865, n866, n867, n868,
         n869, n870, n871, n872, n873, n874, n875, n876, n877, n878, n879,
         n880, n881, n882, n883, n884, n885, n886, n887, n888, n889, n890,
         n891, n892, n893, n894, n895, n896, n897, n898, n899, n900, n901,
         n902, n903, n904, n905, n906, n907, n908, n909, n910, n911, n912,
         n913, n914, n915, n916, n917, n918, n919, n920, n921, n922, n923,
         n924, n925, n926, n927, n928, n929, n930, n931, n932, n933, n934,
         n935, n936, n937, n938, n939, n940, n941, n942, n943, n944, n945,
         n946, n947, n948, n949, n950, n951, n952, n953, n954, n955, n956,
         n957, n958, n959, n960, n961, n962, n963, n964, n965, n966, n967,
         n968, n969, n970, n971, n972, n973, n974, n975, n976, n977, n978,
         n979, n980, n981, n982, n983, n984, n985, n986, n987, n988, n989,
         n990, n991, n992, n993, n994, n995, n996, n997, n998, n999, n1000,
         n1001, n1002, n1003, n1004, n1005, n1006, n1007, n1008, n1009, n1010,
         n1011, n1012, n1013, n1014, n1015, n1016, n1017, n1018, n1019, n1020,
         n1021, n1022, n1023, n1024, n1025, n1026, n1027, n1028, n1029, n1030,
         n1031, n1032, n1033, n1034, n1035, n1036, n1037, n1038, n1039, n1040,
         n1041, n1042, n1043, n1044, n1045, n1046, n1047, n1048, n1049, n1050,
         n1051, n1052, n1053, n1054, n1055, n1056, n1057, n1058, n1059, n1060,
         n1061, n1062, n1063, n1064, n1065, n1066, n1067, n1068, n1069, n1070,
         n1071, n1072, n1073, n1074, n1075, n1076, n1077, n1078, n1079, n1080,
         n1081, n1082, n1083, n1084, n1085, n1086, n1087, n1088, n1089, n1090,
         n1091, n1092, n1093, n1094, n1095, n1096, n1097, n1098, n1099, n1100,
         n1101, n1102, n1103, n1104, n1105, n1106, n1107, n1108, n1109, n1110,
         n1111, n1112, n1113, n1114, n1115, n1116, n1117, n1118, n1119, n1120,
         n1121, n1122, n1123, n1124, n1125, n1126, n1127, n1128, n1129, n1130,
         n1131, n1132, n1133, n1134, n1135, n1136, n1137, n1138, n1139, n1140,
         n1141, n1142, n1143, n1144, n1145, n1146, n1147, n1148, n1149, n1150,
         n1151, n1152, n1153, n1154, n1155, n1156, n1157, n1158, n1159, n1160,
         n1161, n1162, n1163, n1164, n1165, n1166, n1167, n1168, n1169, n1170,
         n1171, n1172, n1173, n1174, n1175, n1176, n1177, n1178, n1179, n1180,
         n1181, n1182, n1183, n1184, n1185, n1186, n1187, n1188, n1189, n1190,
         n1191, n1192, n1193, n1194, n1195, n1196, n1197, n1198, n1199, n1200,
         n1201, n1202, n1203, n1204, n1205, n1206, n1207, n1208, n1209, n1210,
         n1211, n1212, n1213, n1214, n1215, n1216, n1217, n1218, n1219, n1220,
         n1221, n1222, n1223, n1224, n1225, n1226, n1227, n1228, n1229, n1230,
         n1231, n1232, n1233, n1234, n1235, n1236, n1237, n1238, n1239, n1240,
         n1241, n1242, n1243, n1244, n1245, n1246, n1247, n1248, n1249, n1250,
         n1251, n1252, n1253, n1254, n1255, n1256, n1257, n1258, n1259, n1260,
         n1261, n1262, n1263, n1264, n1265, n1266, n1267, n1268, n1269, n1270,
         n1271, n1272, n1273, n1274, n1275, n1276, n1277, n1278, n1279, n1280,
         n1281, n1282, n1283, n1284, n1285, n1286, n1287, n1288, n1289, n1290,
         n1291, n1292, n1293, n1294, n1295, n1296, n1297, n1298, n1299, n1300,
         n1301, n1302, n1303, n1304, n1305, n1306, n1307, n1308, n1309, n1310,
         n1311, n1312, n1313, n1314, n1315, n1316, n1317, n1318, n1319, n1320,
         n1321, n1322, n1323, n1324, n1325, n1326, n1327, n1328, n1329, n1330,
         n1331, n1332, n1333, n1334, n1335, n1336, n1337, n1338, n1339, n1340,
         n1341, n1342, n1343, n1344, n1345, n1346, n1347, n1348, n1349, n1350,
         n1351, n1352, n1353, n1354, n1355, n1356, n1357, n1358, n1359, n1360,
         n1361, n1362, n1363, n1364, n1365, n1366, n1367, n1368, n1369, n1370,
         n1371, n1372, n1373, n1374, n1375, n1376, n1377, n1378, n1379, n1380,
         n1381, n1382, n1383, n1384, n1385, n1386, n1387, n1388, n1389, n1390,
         n1391, n1392, n1393, n1394, n1395, n1396, n1397, n1398, n1399, n1400,
         n1401, n1402, n1403, n1404, n1405, n1406, n1409, n1410, n1411, n1412,
         n1413, n1414, n1415, n1416, n1417, n1419, n1420, n1421, n1422, n1423,
         n1424, n1425, n1426, n1427, n1437, n1438, n1439, n1440, n1441, n1442,
         n1443, n1444, n1445, n1447, n1448, n1449, n1450, n1451, n1452, n1453,
         n1454, n1455, n1466, n1467, n1468, n1469, n1470, n1471, n1472, n1473,
         n1474, n1476, n1477, n1478, n1479, n1480, n1481, n1482, n1483, n1484,
         n1495, n1496, n1497, n1498, n1499, n1500, n1501, n1502, n1503,
         SYNOPSYS_UNCONNECTED_1, SYNOPSYS_UNCONNECTED_2,
         SYNOPSYS_UNCONNECTED_3, SYNOPSYS_UNCONNECTED_4,
         SYNOPSYS_UNCONNECTED_5, SYNOPSYS_UNCONNECTED_6,
         SYNOPSYS_UNCONNECTED_7, SYNOPSYS_UNCONNECTED_8,
         SYNOPSYS_UNCONNECTED_9, SYNOPSYS_UNCONNECTED_10,
         SYNOPSYS_UNCONNECTED_11, SYNOPSYS_UNCONNECTED_12,
         SYNOPSYS_UNCONNECTED_13, SYNOPSYS_UNCONNECTED_14,
         SYNOPSYS_UNCONNECTED_15, SYNOPSYS_UNCONNECTED_16,
         SYNOPSYS_UNCONNECTED_17, SYNOPSYS_UNCONNECTED_18,
         SYNOPSYS_UNCONNECTED_19, SYNOPSYS_UNCONNECTED_20,
         SYNOPSYS_UNCONNECTED_21, SYNOPSYS_UNCONNECTED_22,
         SYNOPSYS_UNCONNECTED_23, SYNOPSYS_UNCONNECTED_24,
         SYNOPSYS_UNCONNECTED_25, SYNOPSYS_UNCONNECTED_26,
         SYNOPSYS_UNCONNECTED_27;
  wire   [7:0] in_data;
  wire   [3:0] op;
  wire   [3:0] state;
  wire   [7:0] counter_256;
  wire   [3:0] state_nxt;
  wire   [10:0] counter_2047;
  wire   [2:1] origin_row;
  wire   [13:0] sram_addr;
  wire   [31:0] q;
  wire   [127:0] x;
  wire   [67:0] y;
  wire   [51:0] z;
  wire   [7:0] DIS_out_data;
  wire   [12:0] CONV_out_data;
  wire   [10:5] r795_carry;

  sram_512x8 number_0 ( .Q(q[7:0]), .A({sram_addr[13:6], sram_addr[2]}), .D(
        in_data), .CLK(i_clk), .CEN(1'b0), .WEN(sram_wen_0) );
  sram_512x8 number_1 ( .Q(q[15:8]), .A({sram_addr[13:6], sram_addr[3]}), .D(
        in_data), .CLK(i_clk), .CEN(1'b0), .WEN(sram_wen_1) );
  sram_512x8 number_2 ( .Q(q[23:16]), .A({sram_addr[13:6], sram_addr[4]}), .D(
        in_data), .CLK(i_clk), .CEN(1'b0), .WEN(sram_wen_2) );
  sram_512x8 number_3 ( .Q(q[31:24]), .A(sram_addr[13:5]), .D(in_data), .CLK(
        i_clk), .CEN(1'b0), .WEN(sram_wen_3) );
  core_DW01_inc_0_DW01_inc_2 add_395_round ( .A(y[67:54]), .\SUM[13] (N2422), 
        .\SUM[12] (N2421), .\SUM[11] (N2420), .\SUM[10] (N2419), .\SUM[9] (
        N2418), .\SUM[8] (N2417), .\SUM[7] (N2416), .\SUM[6] (N2415), 
        .\SUM[5] (N2414), .\SUM[4] (N2413), .\SUM[3] (N2412), .\SUM[2] (N2411), 
        .\SUM[1] (N2410) );
  core_DW01_inc_1_DW01_inc_3 add_394_round ( .A(y[50:37]), .\SUM[13] (N2409), 
        .\SUM[12] (N2408), .\SUM[11] (N2407), .\SUM[10] (N2406), .\SUM[9] (
        N2405), .\SUM[8] (N2404), .\SUM[7] (N2403), .\SUM[6] (N2402), 
        .\SUM[5] (N2401), .\SUM[4] (N2400), .\SUM[3] (N2399), .\SUM[2] (N2398), 
        .\SUM[1] (N2397) );
  core_DW01_inc_2_DW01_inc_4 add_390_round ( .A(y[33:20]), .\SUM[13] (N2395), 
        .\SUM[12] (N2394), .\SUM[11] (N2393), .\SUM[10] (N2392), .\SUM[9] (
        N2391), .\SUM[8] (N2390), .\SUM[7] (N2389), .\SUM[6] (N2388), 
        .\SUM[5] (N2387), .\SUM[4] (N2386), .\SUM[3] (N2385), .\SUM[2] (N2384), 
        .\SUM[1] (N2383) );
  core_DW01_inc_3_DW01_inc_5 add_389_round ( .A(y[16:3]), .\SUM[13] (N2382), 
        .\SUM[12] (N2381), .\SUM[11] (N2380), .\SUM[10] (N2379), .\SUM[9] (
        N2378), .\SUM[8] (N2377), .\SUM[7] (N2376), .\SUM[6] (N2375), 
        .\SUM[5] (N2374), .\SUM[4] (N2373), .\SUM[3] (N2372), .\SUM[2] (N2371), 
        .\SUM[1] (N2370) );
  core_DW01_inc_5_DW01_inc_7 add_147 ( .A(counter_256), .SUM({N443, N442, N441, 
        N440, N439, N438, N437, N436}) );
  core_DW01_inc_6_DW01_inc_8 add_138_S2 ( .A(counter_2047), .SUM({N420, N419, 
        N418, N417, N416, N415, N414, N413, N412, N411, N410}) );
  core_DW01_add_0_DW01_add_3 r801 ( .\A[7] (x[55]), .\A[6] (x[54]), .\A[5] (
        x[53]), .\A[4] (x[52]), .\A[3] (x[51]), .\A[2] (x[50]), .\A[1] (x[49]), 
        .\A[0] (x[48]), .\B[7] (x[79]), .\B[6] (x[78]), .\B[5] (x[77]), 
        .\B[4] (x[76]), .\B[3] (x[75]), .\B[2] (x[74]), .\B[1] (x[73]), 
        .\B[0] (x[72]), .\SUM[8] (N1858), .\SUM[7] (N1857), .\SUM[6] (N1856), 
        .\SUM[5] (N1855), .\SUM[4] (N1854), .\SUM[3] (N1853), .\SUM[2] (N1852), 
        .\SUM[1] (N1851), .\SUM[0] (N1850) );
  core_DW01_inc_7_DW01_inc_9 r794 ( .A({counter_256[6], n808, n1203, n1195, 
        counter_256[2], origin_row[2], n961, conv_row_3__0_, N543, N542, n960}), .SUM({N507, N506, N505, N504, N503, N502, N501, N500, N499, N498, N497}) );
  core_DW01_add_29_DW01_add_32 add_1_root_add_0_root_add_370_4 ( .\A[7] (x[95]), .\A[6] (x[94]), .\A[5] (x[93]), .\A[4] (x[92]), .\A[3] (x[91]), .\A[2] (
        x[90]), .\A[1] (x[89]), .\A[0] (x[88]), .\B[7] (x[119]), .\B[6] (
        x[118]), .\B[5] (x[117]), .\B[4] (x[116]), .\B[3] (x[115]), .\B[2] (
        x[114]), .\B[1] (x[113]), .\B[0] (x[112]), .\SUM[8] (N2192), 
        .\SUM[7] (N2191), .\SUM[6] (N2190), .\SUM[5] (N2189), .\SUM[4] (N2188), 
        .\SUM[3] (N2187), .\SUM[2] (N2186), .\SUM[1] (N2185), .\SUM[0] (N2184)
         );
  core_DW01_add_28_DW01_add_31 add_0_root_add_0_root_add_370_4 ( .\A[8] (N1858), .\A[7] (N1857), .\A[6] (N1856), .\A[5] (N1855), .\A[4] (N1854), .\A[3] (
        N1853), .\A[2] (N1852), .\A[1] (N1851), .\A[0] (N1850), .\B[8] (N2192), 
        .\B[7] (N2191), .\B[6] (N2190), .\B[5] (N2189), .\B[4] (N2188), 
        .\B[3] (N2187), .\B[2] (N2186), .\B[1] (N2185), .\B[0] (N2184), 
        .\SUM[9] (N2203), .\SUM[8] (N2202), .\SUM[7] (N2201), .\SUM[6] (N2200), 
        .\SUM[5] (N2199), .\SUM[4] (N2198), .\SUM[3] (N2197), .\SUM[2] (N2196), 
        .\SUM[1] (N2195), .\SUM[0] (N2194) );
  core_DW01_add_27_DW01_add_30 add_1_root_add_0_root_add_370_9 ( .B(y[67:51]), 
        .SUM({N2174, N2173, N2172, N2171, N2170, N2169, N2168, N2167, N2166, 
        N2165, N2164, N2163, N2162, N2161, N2160, N2159, N2158}), .\A[10] (
        N2203), .\A[9] (N2202), .\A[8] (N2201), .\A[7] (N2200), .\A[6] (N2199), 
        .\A[5] (N2198), .\A[4] (N2197), .\A[3] (N2196), .\A[2] (N2195), 
        .\A[1] (N2194) );
  core_DW01_add_26_DW01_add_29 add_1_root_add_0_root_add_370_8 ( .\A[7] (x[47]), .\A[6] (x[46]), .\A[5] (x[45]), .\A[4] (x[44]), .\A[3] (x[43]), .\A[2] (
        x[42]), .\A[1] (x[41]), .\A[0] (n807), .\B[7] (x[63]), .\B[6] (x[62]), 
        .\B[5] (x[61]), .\B[4] (x[60]), .\B[3] (x[59]), .\B[2] (x[58]), 
        .\B[1] (x[57]), .\B[0] (x[56]), .\SUM[8] (n1503), .\SUM[7] (n1502), 
        .\SUM[6] (n1501), .\SUM[5] (n1500), .\SUM[4] (n1499), .\SUM[3] (n1498), 
        .\SUM[2] (n1497), .\SUM[1] (n1496), .\SUM[0] (n1495) );
  core_DW01_add_25_DW01_add_28 add_2_root_add_0_root_add_370_8 ( .\A[7] (
        x[127]), .\A[6] (x[126]), .\A[5] (x[125]), .\A[4] (x[124]), .\A[3] (
        x[123]), .\A[2] (x[122]), .\A[1] (x[121]), .\A[0] (x[120]), .\B[7] (
        x[111]), .\B[6] (x[110]), .\B[5] (x[109]), .\B[4] (x[108]), .\B[3] (
        x[107]), .\B[2] (x[106]), .\B[1] (x[105]), .\B[0] (x[104]), .\SUM[8] (
        N2239), .\SUM[7] (N2238), .\SUM[6] (N2237), .\SUM[5] (N2236), 
        .\SUM[4] (N2235), .\SUM[3] (N2234), .\SUM[2] (N2233), .\SUM[1] (N2232), 
        .\SUM[0] (N2231) );
  core_DW01_add_24_DW01_add_27 add_0_root_add_0_root_add_370_8 ( .\A[8] (N2239), .\A[7] (N2238), .\A[6] (N2237), .\A[5] (N2236), .\A[4] (N2235), .\A[3] (
        N2234), .\A[2] (N2233), .\A[1] (N2232), .\A[0] (N2231), .\B[8] (n1503), 
        .\B[7] (n1502), .\B[6] (n1501), .\B[5] (n1500), .\B[4] (n1499), 
        .\B[3] (n1498), .\B[2] (n1497), .\B[1] (n1496), .\B[0] (n1495), 
        .\SUM[9] (N2250), .\SUM[8] (N2249), .\SUM[7] (N2248), .\SUM[6] (N2247), 
        .\SUM[5] (N2246), .\SUM[4] (N2245), .\SUM[3] (N2244), .\SUM[2] (N2243), 
        .\SUM[1] (N2206), .\SUM[0] (N2205) );
  core_DW01_add_22_DW01_add_25 add_0_root_add_0_root_add_370_9 ( .B({N2174, 
        N2173, N2172, N2171, N2170, N2169, N2168, N2167, N2166, N2165, N2164, 
        N2163, N2162, N2161, N2160, N2159, N2158}), .SUM({N2268, N2267, N2266, 
        N2265, N2264, N2263, N2262, N2261, N2260, N2259, N2258, N2257, N2256, 
        N2255, N2254, N2253, N2252}), .\A[10] (N2215), .\A[9] (N2214), 
        .\A[8] (N2213), .\A[7] (N2212), .\A[6] (N2211), .\A[5] (N2210), 
        .\A[4] (N2209), .\A[3] (N2208), .\A[2] (N2207), .\A[1] (N2206), 
        .\A[0] (N2205) );
  core_DW01_add_21_DW01_add_24 add_2_root_add_0_root_add_369_4 ( .\A[7] (
        x[111]), .\A[6] (x[110]), .\A[5] (x[109]), .\A[4] (x[108]), .\A[3] (
        x[107]), .\A[2] (x[106]), .\A[1] (x[105]), .\A[0] (x[104]), .\B[7] (
        x[71]), .\B[6] (x[70]), .\B[5] (x[69]), .\B[4] (x[68]), .\B[3] (x[67]), 
        .\B[2] (x[66]), .\B[1] (x[65]), .\B[0] (x[64]), .\SUM[8] (N2081), 
        .\SUM[7] (N2080), .\SUM[6] (N2079), .\SUM[5] (N2078), .\SUM[4] (N2077), 
        .\SUM[3] (N2076), .\SUM[2] (N2075), .\SUM[1] (N2074), .\SUM[0] (N2073)
         );
  core_DW01_add_20_DW01_add_23 add_1_root_add_0_root_add_369_4 ( .\A[7] (x[47]), .\A[6] (x[46]), .\A[5] (x[45]), .\A[4] (x[44]), .\A[3] (x[43]), .\A[2] (
        x[42]), .\A[1] (x[41]), .\A[0] (x[40]), .\B[7] (x[87]), .\B[6] (x[86]), 
        .\B[5] (x[85]), .\B[4] (x[84]), .\B[3] (x[83]), .\B[2] (x[82]), 
        .\B[1] (x[81]), .\B[0] (x[80]), .\SUM[8] (n1474), .\SUM[7] (n1473), 
        .\SUM[6] (n1472), .\SUM[5] (n1471), .\SUM[4] (n1470), .\SUM[3] (n1469), 
        .\SUM[2] (n1468), .\SUM[1] (n1467), .\SUM[0] (n1466) );
  core_DW01_add_19_DW01_add_22 add_0_root_add_0_root_add_369_4 ( .\A[8] (N2081), .\A[7] (N2080), .\A[6] (N2079), .\A[5] (N2078), .\A[4] (N2077), .\A[3] (
        N2076), .\A[2] (N2075), .\A[1] (N2074), .\A[0] (N2073), .\B[8] (n1474), 
        .\B[7] (n1473), .\B[6] (n1472), .\B[5] (n1471), .\B[4] (n1470), 
        .\B[3] (n1469), .\B[2] (n1468), .\B[1] (n1467), .\B[0] (n1466), 
        .\SUM[9] (N2092), .\SUM[8] (N2091), .\SUM[7] (N2090), .\SUM[6] (N2089), 
        .\SUM[5] (N2088), .\SUM[4] (N2087), .\SUM[3] (N2086), .\SUM[2] (N2085), 
        .\SUM[1] (N2084), .\SUM[0] (N2083) );
  core_DW01_add_18_DW01_add_21 add_1_root_add_0_root_add_369_9 ( .B(y[50:34]), 
        .SUM({N2063, N2062, N2061, N2060, N2059, N2058, N2057, N2056, N2055, 
        N2054, N2053, N2052, N2051, N2050, N2049, N2048, N2047}), .\A[10] (
        N2092), .\A[9] (N2091), .\A[8] (N2090), .\A[7] (N2089), .\A[6] (N2088), 
        .\A[5] (N2087), .\A[4] (N2086), .\A[3] (N2085), .\A[2] (N2084), 
        .\A[1] (N2083) );
  core_DW01_add_17_DW01_add_20 add_1_root_add_0_root_add_369_8 ( .\A[7] (
        x[119]), .\A[6] (x[118]), .\A[5] (x[117]), .\A[4] (x[116]), .\A[3] (
        x[115]), .\A[2] (x[114]), .\A[1] (x[113]), .\A[0] (x[112]), .\B[7] (
        x[55]), .\B[6] (x[54]), .\B[5] (x[53]), .\B[4] (x[52]), .\B[3] (x[51]), 
        .\B[2] (x[50]), .\B[1] (x[49]), .\B[0] (x[48]), .\SUM[8] (n1484), 
        .\SUM[7] (n1483), .\SUM[6] (n1482), .\SUM[5] (n1481), .\SUM[4] (n1480), 
        .\SUM[3] (n1479), .\SUM[2] (n1478), .\SUM[1] (n1477), .\SUM[0] (n1476)
         );
  core_DW01_add_16_DW01_add_19 add_2_root_add_0_root_add_369_8 ( .\A[7] (
        x[103]), .\A[6] (x[102]), .\A[5] (x[101]), .\A[4] (x[100]), .\A[3] (
        x[99]), .\A[2] (x[98]), .\A[1] (x[97]), .\A[0] (x[96]), .\B[7] (x[39]), 
        .\B[6] (x[38]), .\B[5] (x[37]), .\B[4] (x[36]), .\B[3] (x[35]), 
        .\B[2] (x[34]), .\B[1] (x[33]), .\B[0] (x[32]), .\SUM[8] (N2128), 
        .\SUM[7] (N2127), .\SUM[6] (N2126), .\SUM[5] (N2125), .\SUM[4] (N2124), 
        .\SUM[3] (N2123), .\SUM[2] (N2122), .\SUM[1] (N2121), .\SUM[0] (N2120)
         );
  core_DW01_add_15_DW01_add_18 add_0_root_add_0_root_add_369_8 ( .\A[8] (N2128), .\A[7] (N2127), .\A[6] (N2126), .\A[5] (N2125), .\A[4] (N2124), .\A[3] (
        N2123), .\A[2] (N2122), .\A[1] (N2121), .\A[0] (N2120), .\B[8] (n1484), 
        .\B[7] (n1483), .\B[6] (n1482), .\B[5] (n1481), .\B[4] (n1480), 
        .\B[3] (n1479), .\B[2] (n1478), .\B[1] (n1477), .\B[0] (n1476), 
        .\SUM[9] (N2139), .\SUM[8] (N2138), .\SUM[7] (N2137), .\SUM[6] (N2136), 
        .\SUM[5] (N2135), .\SUM[4] (N2134), .\SUM[3] (N2133), .\SUM[2] (N2132), 
        .\SUM[1] (N2095), .\SUM[0] (N2094) );
  core_DW01_add_13_DW01_add_16 add_0_root_add_0_root_add_369_9 ( .B({N2063, 
        N2062, N2061, N2060, N2059, N2058, N2057, N2056, N2055, N2054, N2053, 
        N2052, N2051, N2050, N2049, N2048, N2047}), .SUM({N2157, N2156, N2155, 
        N2154, N2153, N2152, N2151, N2150, N2149, N2148, N2147, N2146, N2145, 
        N2144, N2143, N2142, N2141}), .\A[10] (N2104), .\A[9] (N2103), 
        .\A[8] (N2102), .\A[7] (N2101), .\A[6] (N2100), .\A[5] (N2099), 
        .\A[4] (N2098), .\A[3] (N2097), .\A[2] (N2096), .\A[1] (N2095), 
        .\A[0] (N2094) );
  core_DW01_add_12_DW01_add_15 add_2_root_add_0_root_add_365_4 ( .\A[7] (x[23]), .\A[6] (x[22]), .\A[5] (x[21]), .\A[4] (x[20]), .\A[3] (x[19]), .\A[2] (
        x[18]), .\A[1] (x[17]), .\A[0] (x[16]), .\B[7] (x[63]), .\B[6] (x[62]), 
        .\B[5] (x[61]), .\B[4] (x[60]), .\B[3] (x[59]), .\B[2] (x[58]), 
        .\B[1] (x[57]), .\B[0] (x[56]), .\SUM[8] (N1969), .\SUM[7] (N1968), 
        .\SUM[6] (N1967), .\SUM[5] (N1966), .\SUM[4] (N1965), .\SUM[3] (N1964), 
        .\SUM[2] (N1963), .\SUM[1] (N1962), .\SUM[0] (N1961) );
  core_DW01_add_11_DW01_add_14 add_1_root_add_0_root_add_365_4 ( .\A[7] (x[47]), .\A[6] (x[46]), .\A[5] (x[45]), .\A[4] (x[44]), .\A[3] (x[43]), .\A[2] (
        x[42]), .\A[1] (x[41]), .\A[0] (x[40]), .\B[7] (x[87]), .\B[6] (x[86]), 
        .\B[5] (x[85]), .\B[4] (x[84]), .\B[3] (x[83]), .\B[2] (x[82]), 
        .\B[1] (x[81]), .\B[0] (x[80]), .\SUM[8] (n1445), .\SUM[7] (n1444), 
        .\SUM[6] (n1443), .\SUM[5] (n1442), .\SUM[4] (n1441), .\SUM[3] (n1440), 
        .\SUM[2] (n1439), .\SUM[1] (n1438), .\SUM[0] (n1437) );
  core_DW01_add_10_DW01_add_13 add_0_root_add_0_root_add_365_4 ( .\A[8] (N1969), .\A[7] (N1968), .\A[6] (N1967), .\A[5] (N1966), .\A[4] (N1965), .\A[3] (
        N1964), .\A[2] (N1963), .\A[1] (N1962), .\A[0] (N1961), .\B[8] (n1445), 
        .\B[7] (n1444), .\B[6] (n1443), .\B[5] (n1442), .\B[4] (n1441), 
        .\B[3] (n1440), .\B[2] (n1439), .\B[1] (n1438), .\B[0] (n1437), 
        .\SUM[9] (N1980), .\SUM[8] (N1979), .\SUM[7] (N1978), .\SUM[6] (N1977), 
        .\SUM[5] (N1976), .\SUM[4] (N1975), .\SUM[3] (N1974), .\SUM[2] (N1973), 
        .\SUM[1] (N1972), .\SUM[0] (N1971) );
  core_DW01_add_9_DW01_add_12 add_1_root_add_0_root_add_365_9 ( .B(y[33:17]), 
        .SUM({N1951, N1950, N1949, N1948, N1947, N1946, N1945, N1944, N1943, 
        N1942, N1941, N1940, N1939, N1938, N1937, N1936, N1935}), .\A[10] (
        N1980), .\A[9] (N1979), .\A[8] (N1978), .\A[7] (N1977), .\A[6] (N1976), 
        .\A[5] (N1975), .\A[4] (N1974), .\A[3] (N1973), .\A[2] (N1972), 
        .\A[1] (N1971) );
  core_DW01_add_8_DW01_add_11 add_1_root_add_0_root_add_365_8 ( .\A[7] (x[95]), 
        .\A[6] (x[94]), .\A[5] (x[93]), .\A[4] (x[92]), .\A[3] (x[91]), 
        .\A[2] (x[90]), .\A[1] (x[89]), .\A[0] (x[88]), .\B[7] (x[79]), 
        .\B[6] (x[78]), .\B[5] (x[77]), .\B[4] (x[76]), .\B[3] (x[75]), 
        .\B[2] (x[74]), .\B[1] (x[73]), .\B[0] (x[72]), .\SUM[8] (n1455), 
        .\SUM[7] (n1454), .\SUM[6] (n1453), .\SUM[5] (n1452), .\SUM[4] (n1451), 
        .\SUM[3] (n1450), .\SUM[2] (n1449), .\SUM[1] (n1448), .\SUM[0] (n1447)
         );
  core_DW01_add_7_DW01_add_10 add_2_root_add_0_root_add_365_8 ( .\A[7] (x[15]), 
        .\A[6] (x[14]), .\A[5] (x[13]), .\A[4] (x[12]), .\A[3] (x[11]), 
        .\A[2] (x[10]), .\A[1] (x[9]), .\A[0] (x[8]), .\B[7] (x[31]), .\B[6] (
        x[30]), .\B[5] (x[29]), .\B[4] (x[28]), .\B[3] (x[27]), .\B[2] (x[26]), 
        .\B[1] (x[25]), .\B[0] (x[24]), .\SUM[8] (N2016), .\SUM[7] (N2015), 
        .\SUM[6] (N2014), .\SUM[5] (N2013), .\SUM[4] (N2012), .\SUM[3] (N2011), 
        .\SUM[2] (N2010), .\SUM[1] (N2009), .\SUM[0] (N2008) );
  core_DW01_add_6_DW01_add_9 add_0_root_add_0_root_add_365_8 ( .\A[8] (N2016), 
        .\A[7] (N2015), .\A[6] (N2014), .\A[5] (N2013), .\A[4] (N2012), 
        .\A[3] (N2011), .\A[2] (N2010), .\A[1] (N2009), .\A[0] (N2008), 
        .\B[8] (n1455), .\B[7] (n1454), .\B[6] (n1453), .\B[5] (n1452), 
        .\B[4] (n1451), .\B[3] (n1450), .\B[2] (n1449), .\B[1] (n1448), 
        .\B[0] (n1447), .\SUM[9] (N2027), .\SUM[8] (N2026), .\SUM[7] (N2025), 
        .\SUM[6] (N2024), .\SUM[5] (N2023), .\SUM[4] (N2022), .\SUM[3] (N2021), 
        .\SUM[2] (N2020), .\SUM[1] (N1983), .\SUM[0] (N1982) );
  core_DW01_add_4_DW01_add_7 add_0_root_add_0_root_add_365_9 ( .B({N1951, 
        N1950, N1949, N1948, N1947, N1946, N1945, N1944, N1943, N1942, N1941, 
        N1940, N1939, N1938, N1937, N1936, N1935}), .SUM({N2045, N2044, N2043, 
        N2042, N2041, N2040, N2039, N2038, N2037, N2036, N2035, N2034, N2033, 
        N2032, N2031, N2030, N2029}), .\A[10] (N1992), .\A[9] (N1991), 
        .\A[8] (N1990), .\A[7] (N1989), .\A[6] (N1988), .\A[5] (N1987), 
        .\A[4] (N1986), .\A[3] (N1985), .\A[2] (N1984), .\A[1] (N1983), 
        .\A[0] (N1982) );
  core_DW01_add_37_DW01_add_40 add_1_root_add_0_root_add_364_4 ( .\A[7] (x[15]), .\A[6] (x[14]), .\A[5] (x[13]), .\A[4] (x[12]), .\A[3] (x[11]), .\A[2] (
        x[10]), .\A[1] (x[9]), .\A[0] (x[8]), .\B[7] (x[39]), .\B[6] (x[38]), 
        .\B[5] (x[37]), .\B[4] (x[36]), .\B[3] (x[35]), .\B[2] (x[34]), 
        .\B[1] (x[33]), .\B[0] (x[32]), .\SUM[8] (n1417), .\SUM[7] (n1416), 
        .\SUM[6] (n1415), .\SUM[5] (n1414), .\SUM[4] (n1413), .\SUM[3] (n1412), 
        .\SUM[2] (n1411), .\SUM[1] (n1410), .\SUM[0] (n1409) );
  core_DW01_add_36_DW01_add_39 add_0_root_add_0_root_add_364_4 ( .\A[8] (n1417), .\A[7] (n1416), .\A[6] (n1415), .\A[5] (n1414), .\A[4] (n1413), .\A[3] (
        n1412), .\A[2] (n1411), .\A[1] (n1410), .\A[0] (n1409), .\B[8] (N1858), 
        .\B[7] (N1857), .\B[6] (N1856), .\B[5] (N1855), .\B[4] (N1854), 
        .\B[3] (N1853), .\B[2] (N1852), .\B[1] (N1851), .\B[0] (N1850), 
        .\SUM[9] (N1869), .\SUM[8] (N1868), .\SUM[7] (N1867), .\SUM[6] (N1866), 
        .\SUM[5] (N1865), .\SUM[4] (N1864), .\SUM[3] (N1863), .\SUM[2] (N1862), 
        .\SUM[1] (N1861), .\SUM[0] (N1860) );
  core_DW01_add_35_DW01_add_38 add_1_root_add_0_root_add_364_9 ( .B(y[16:0]), 
        .SUM({N1840, N1839, N1838, N1837, N1836, N1835, N1834, N1833, N1832, 
        N1831, N1830, N1829, N1828, N1827, N1826, N1825, N1824}), .\A[10] (
        N1869), .\A[9] (N1868), .\A[8] (N1867), .\A[7] (N1866), .\A[6] (N1865), 
        .\A[5] (N1864), .\A[4] (N1863), .\A[3] (N1862), .\A[2] (N1861), 
        .\A[1] (N1860) );
  core_DW01_add_34_DW01_add_37 add_1_root_add_0_root_add_364_8 ( .\A[7] (x[71]), .\A[6] (x[70]), .\A[5] (x[69]), .\A[4] (x[68]), .\A[3] (x[67]), .\A[2] (
        x[66]), .\A[1] (x[65]), .\A[0] (x[64]), .\B[7] (x[87]), .\B[6] (x[86]), 
        .\B[5] (x[85]), .\B[4] (x[84]), .\B[3] (x[83]), .\B[2] (x[82]), 
        .\B[1] (x[81]), .\B[0] (x[80]), .\SUM[8] (n1427), .\SUM[7] (n1426), 
        .\SUM[6] (n1425), .\SUM[5] (n1424), .\SUM[4] (n1423), .\SUM[3] (n1422), 
        .\SUM[2] (n1421), .\SUM[1] (n1420), .\SUM[0] (n1419) );
  core_DW01_add_33_DW01_add_36 add_2_root_add_0_root_add_364_8 ( .\A[7] (x[7]), 
        .\A[6] (x[6]), .\A[5] (x[5]), .\A[4] (x[4]), .\A[3] (x[3]), .\A[2] (
        x[2]), .\A[1] (x[1]), .\A[0] (x[0]), .\B[7] (x[23]), .\B[6] (x[22]), 
        .\B[5] (x[21]), .\B[4] (x[20]), .\B[3] (x[19]), .\B[2] (x[18]), 
        .\B[1] (x[17]), .\B[0] (x[16]), .\SUM[8] (N1905), .\SUM[7] (N1904), 
        .\SUM[6] (N1903), .\SUM[5] (N1902), .\SUM[4] (N1901), .\SUM[3] (N1900), 
        .\SUM[2] (N1899), .\SUM[1] (N1898), .\SUM[0] (N1897) );
  core_DW01_add_32_DW01_add_35 add_0_root_add_0_root_add_364_8 ( .\A[8] (N1905), .\A[7] (N1904), .\A[6] (N1903), .\A[5] (N1902), .\A[4] (N1901), .\A[3] (
        N1900), .\A[2] (N1899), .\A[1] (N1898), .\A[0] (N1897), .\B[8] (n1427), 
        .\B[7] (n1426), .\B[6] (n1425), .\B[5] (n1424), .\B[4] (n1423), 
        .\B[3] (n1422), .\B[2] (n1421), .\B[1] (n1420), .\B[0] (n1419), 
        .\SUM[9] (N1916), .\SUM[8] (N1915), .\SUM[7] (N1914), .\SUM[6] (N1913), 
        .\SUM[5] (N1912), .\SUM[4] (N1911), .\SUM[3] (N1910), .\SUM[2] (N1909), 
        .\SUM[1] (N1872), .\SUM[0] (N1871) );
  core_DW01_add_30_DW01_add_33 add_0_root_add_0_root_add_364_9 ( .B({N1840, 
        N1839, N1838, N1837, N1836, N1835, N1834, N1833, N1832, N1831, N1830, 
        N1829, N1828, N1827, N1826, N1825, N1824}), .SUM({N1934, N1933, N1932, 
        N1931, N1930, N1929, N1928, N1927, N1926, N1925, N1924, N1923, N1922, 
        N1921, N1920, N1919, N1918}), .\A[10] (N1881), .\A[9] (N1880), 
        .\A[8] (N1879), .\A[7] (N1878), .\A[6] (N1877), .\A[5] (N1876), 
        .\A[4] (N1875), .\A[3] (N1874), .\A[2] (N1873), .\A[1] (N1872), 
        .\A[0] (N1871) );
  DFFRX1 CONV_out_valid_3nxt_reg ( .D(n981), .CK(i_clk), .RN(n996), .QN(n388)
         );
  DFFRX1 CONV_out_valid_2nxt_reg ( .D(N2496), .CK(i_clk), .RN(n996), .QN(n389)
         );
  DFFRX1 CONV_out_valid_nxt_reg ( .D(N2497), .CK(i_clk), .RN(n996), .QN(n390)
         );
  DFFRX1 op_mode_reg_3_ ( .D(i_op_mode[3]), .CK(i_clk), .RN(n995), .QN(n453)
         );
  DFFRX1 op_mode_reg_2_ ( .D(i_op_mode[2]), .CK(i_clk), .RN(n995), .QN(n454)
         );
  DFFRX1 op_mode_reg_1_ ( .D(i_op_mode[1]), .CK(i_clk), .RN(n995), .QN(n455)
         );
  DFFRX1 op_mode_reg_0_ ( .D(i_op_mode[0]), .CK(i_clk), .RN(n994), .QN(n456)
         );
  DFFRX1 op_valid_reg ( .D(i_op_valid), .CK(i_clk), .RN(n996), .QN(n1405) );
  DFFRX1 dis_size_nxt_reg_4_ ( .D(n750), .CK(i_clk), .RN(n994), .QN(n1207) );
  DFFRX1 dis_size_nxt_reg_3_ ( .D(n748), .CK(i_clk), .RN(n992), .QN(n1206) );
  DFFRX1 y_reg_3__16_ ( .D(n603), .CK(i_clk), .RN(n1006), .Q(y[67]), .QN(n1276) );
  DFFRX1 y_reg_2__16_ ( .D(n5860), .CK(i_clk), .RN(n1005), .Q(y[50]), .QN(
        n1259) );
  DFFRX1 y_reg_1__16_ ( .D(n569), .CK(i_clk), .RN(n1004), .Q(y[33]), .QN(n1242) );
  DFFRX1 y_reg_0__16_ ( .D(n552), .CK(i_clk), .RN(n1002), .Q(y[16]), .QN(n1225) );
  DFFRX1 y_reg_3__15_ ( .D(n602), .CK(i_clk), .RN(n1006), .Q(y[66]), .QN(n1275) );
  DFFRX1 y_reg_2__15_ ( .D(n5850), .CK(i_clk), .RN(n1005), .Q(y[49]), .QN(
        n1258) );
  DFFRX1 y_reg_1__15_ ( .D(n568), .CK(i_clk), .RN(n1003), .Q(y[32]), .QN(n1241) );
  DFFRX1 y_reg_0__15_ ( .D(n5510), .CK(i_clk), .RN(n1002), .Q(y[15]), .QN(
        n1224) );
  DFFRX1 y_reg_3__14_ ( .D(n601), .CK(i_clk), .RN(n1006), .Q(y[65]), .QN(n1274) );
  DFFRX1 y_reg_2__14_ ( .D(n584), .CK(i_clk), .RN(n1005), .Q(y[48]), .QN(n1257) );
  DFFRX1 y_reg_1__14_ ( .D(n567), .CK(i_clk), .RN(n1003), .Q(y[31]), .QN(n1240) );
  DFFRX1 y_reg_0__14_ ( .D(n5500), .CK(i_clk), .RN(n1002), .Q(y[14]), .QN(
        n1223) );
  DFFRX1 y_reg_3__13_ ( .D(n600), .CK(i_clk), .RN(n1006), .Q(y[64]), .QN(n1273) );
  DFFRX1 y_reg_2__13_ ( .D(n583), .CK(i_clk), .RN(n1005), .Q(y[47]), .QN(n1256) );
  DFFRX1 y_reg_1__13_ ( .D(n566), .CK(i_clk), .RN(n1003), .Q(y[30]), .QN(n1239) );
  DFFRX1 y_reg_0__13_ ( .D(n5490), .CK(i_clk), .RN(n1002), .Q(y[13]), .QN(
        n1222) );
  DFFRX1 y_reg_3__12_ ( .D(n599), .CK(i_clk), .RN(n1006), .Q(y[63]), .QN(n1272) );
  DFFRX1 y_reg_2__12_ ( .D(n582), .CK(i_clk), .RN(n1005), .Q(y[46]), .QN(n1255) );
  DFFRX1 y_reg_1__12_ ( .D(n565), .CK(i_clk), .RN(n1003), .Q(y[29]), .QN(n1238) );
  DFFRX1 y_reg_0__12_ ( .D(n5480), .CK(i_clk), .RN(n1002), .Q(y[12]), .QN(
        n1221) );
  DFFRX1 y_reg_3__11_ ( .D(n598), .CK(i_clk), .RN(n1006), .Q(y[62]), .QN(n1271) );
  DFFRX1 y_reg_2__11_ ( .D(n581), .CK(i_clk), .RN(n1005), .Q(y[45]), .QN(n1254) );
  DFFRX1 y_reg_1__11_ ( .D(n564), .CK(i_clk), .RN(n1003), .Q(y[28]), .QN(n1237) );
  DFFRX1 y_reg_0__11_ ( .D(n5470), .CK(i_clk), .RN(n1002), .Q(y[11]), .QN(
        n1220) );
  DFFRX1 y_reg_3__10_ ( .D(n597), .CK(i_clk), .RN(n1006), .Q(y[61]), .QN(n1270) );
  DFFRX1 y_reg_2__10_ ( .D(n580), .CK(i_clk), .RN(n1004), .Q(y[44]), .QN(n1253) );
  DFFRX1 y_reg_1__10_ ( .D(n563), .CK(i_clk), .RN(n1003), .Q(y[27]), .QN(n1236) );
  DFFRX1 y_reg_0__10_ ( .D(n5460), .CK(i_clk), .RN(n1002), .Q(y[10]), .QN(
        n1219) );
  DFFRX1 y_reg_3__9_ ( .D(n596), .CK(i_clk), .RN(n1006), .Q(y[60]), .QN(n1269)
         );
  DFFRX1 y_reg_2__9_ ( .D(n579), .CK(i_clk), .RN(n1004), .Q(y[43]), .QN(n1252)
         );
  DFFRX1 y_reg_1__9_ ( .D(n562), .CK(i_clk), .RN(n1003), .Q(y[26]), .QN(n1235)
         );
  DFFRX1 y_reg_0__9_ ( .D(n5450), .CK(i_clk), .RN(n1001), .Q(y[9]), .QN(n1218)
         );
  DFFRX1 y_reg_3__8_ ( .D(n5950), .CK(i_clk), .RN(n1006), .Q(y[59]), .QN(n1268) );
  DFFRX1 y_reg_2__8_ ( .D(n578), .CK(i_clk), .RN(n1004), .Q(y[42]), .QN(n1251)
         );
  DFFRX1 y_reg_1__8_ ( .D(n561), .CK(i_clk), .RN(n1003), .Q(y[25]), .QN(n1234)
         );
  DFFRX1 y_reg_0__8_ ( .D(n5440), .CK(i_clk), .RN(n1001), .Q(y[8]), .QN(n1217)
         );
  DFFRX1 y_reg_3__7_ ( .D(n5940), .CK(i_clk), .RN(n1006), .Q(y[58]), .QN(n1267) );
  DFFRX1 y_reg_2__7_ ( .D(n577), .CK(i_clk), .RN(n1004), .Q(y[41]), .QN(n1250)
         );
  DFFRX1 y_reg_1__7_ ( .D(n560), .CK(i_clk), .RN(n1003), .Q(y[24]), .QN(n1233)
         );
  DFFRX1 y_reg_0__7_ ( .D(n5430), .CK(i_clk), .RN(n1001), .Q(y[7]), .QN(n1216)
         );
  DFFRX1 y_reg_3__6_ ( .D(n5930), .CK(i_clk), .RN(n1005), .Q(y[57]), .QN(n1266) );
  DFFRX1 y_reg_2__6_ ( .D(n576), .CK(i_clk), .RN(n1004), .Q(y[40]), .QN(n1249)
         );
  DFFRX1 y_reg_1__6_ ( .D(n559), .CK(i_clk), .RN(n1003), .Q(y[23]), .QN(n1232)
         );
  DFFRX1 y_reg_0__6_ ( .D(n5420), .CK(i_clk), .RN(n1001), .Q(y[6]), .QN(n1215)
         );
  DFFRX1 y_reg_3__5_ ( .D(n5920), .CK(i_clk), .RN(n1006), .Q(y[56]), .QN(n1265) );
  DFFRX1 y_reg_2__5_ ( .D(n575), .CK(i_clk), .RN(n1004), .Q(y[39]), .QN(n1248)
         );
  DFFRX1 y_reg_1__5_ ( .D(n558), .CK(i_clk), .RN(n1003), .Q(y[22]), .QN(n1231)
         );
  DFFRX1 y_reg_0__5_ ( .D(n5410), .CK(i_clk), .RN(n1001), .Q(y[5]), .QN(n1214)
         );
  DFFRX1 y_reg_3__4_ ( .D(n5910), .CK(i_clk), .RN(n1005), .Q(y[55]), .QN(n1264) );
  DFFRX1 y_reg_2__4_ ( .D(n574), .CK(i_clk), .RN(n1004), .Q(y[38]), .QN(n1247)
         );
  DFFRX1 y_reg_1__4_ ( .D(n557), .CK(i_clk), .RN(n1003), .Q(y[21]), .QN(n1230)
         );
  DFFRX1 y_reg_0__4_ ( .D(n540), .CK(i_clk), .RN(n1001), .Q(y[4]), .QN(n1213)
         );
  DFFRX1 x_reg_3__7_ ( .D(n635), .CK(i_clk), .RN(n983), .Q(x[31]), .QN(n1308)
         );
  DFFRX1 x_reg_15__7_ ( .D(n731), .CK(i_clk), .RN(n991), .Q(x[127]), .QN(n1404) );
  DFFRX1 x_reg_12__7_ ( .D(n707), .CK(i_clk), .RN(n989), .Q(x[103]), .QN(n1380) );
  DFFRX1 x_reg_0__7_ ( .D(n611), .CK(i_clk), .RN(n1007), .Q(x[7]), .QN(n1284)
         );
  DFFRX1 x_reg_11__7_ ( .D(n699), .CK(i_clk), .RN(n988), .Q(x[95]), .QN(n1372)
         );
  DFFRX1 x_reg_7__7_ ( .D(n667), .CK(i_clk), .RN(n986), .Q(x[63]), .QN(n1340)
         );
  DFFRX1 x_reg_13__7_ ( .D(n715), .CK(i_clk), .RN(n990), .Q(x[111]), .QN(n1388) );
  DFFRX1 x_reg_2__7_ ( .D(n627), .CK(i_clk), .RN(n1008), .Q(x[23]), .QN(n1300)
         );
  DFFRX1 x_reg_6__7_ ( .D(n659), .CK(i_clk), .RN(n985), .Q(x[55]), .QN(n1332)
         );
  DFFRX1 x_reg_14__7_ ( .D(n723), .CK(i_clk), .RN(n990), .Q(x[119]), .QN(n1396) );
  DFFRX1 x_reg_8__7_ ( .D(n675), .CK(i_clk), .RN(n986), .Q(x[71]), .QN(n1348)
         );
  DFFRX1 x_reg_1__7_ ( .D(n619), .CK(i_clk), .RN(n1008), .Q(x[15]), .QN(n1292)
         );
  DFFRX1 x_reg_4__7_ ( .D(n643), .CK(i_clk), .RN(n984), .Q(x[39]), .QN(n1316)
         );
  DFFRX1 y_reg_3__3_ ( .D(n5900), .CK(i_clk), .RN(n1005), .Q(y[54]), .QN(n1263) );
  DFFRX1 y_reg_2__3_ ( .D(n573), .CK(i_clk), .RN(n1004), .Q(y[37]), .QN(n1246)
         );
  DFFRX1 y_reg_1__3_ ( .D(n556), .CK(i_clk), .RN(n1002), .Q(y[20]), .QN(n1229)
         );
  DFFRX1 y_reg_0__3_ ( .D(n539), .CK(i_clk), .RN(n1001), .Q(y[3]), .QN(n1212)
         );
  DFFRX1 x_reg_3__6_ ( .D(n634), .CK(i_clk), .RN(n983), .Q(x[30]), .QN(n1307)
         );
  DFFRX1 x_reg_15__6_ ( .D(n730), .CK(i_clk), .RN(n991), .Q(x[126]), .QN(n1403) );
  DFFRX1 x_reg_12__6_ ( .D(n706), .CK(i_clk), .RN(n989), .Q(x[102]), .QN(n1379) );
  DFFRX1 x_reg_0__6_ ( .D(n610), .CK(i_clk), .RN(n1007), .Q(x[6]), .QN(n1283)
         );
  DFFRX1 x_reg_7__6_ ( .D(n666), .CK(i_clk), .RN(n986), .Q(x[62]), .QN(n1339)
         );
  DFFRX1 x_reg_13__6_ ( .D(n714), .CK(i_clk), .RN(n990), .Q(x[110]), .QN(n1387) );
  DFFRX1 x_reg_2__6_ ( .D(n626), .CK(i_clk), .RN(n1008), .Q(x[22]), .QN(n1299)
         );
  DFFRX1 x_reg_11__6_ ( .D(n698), .CK(i_clk), .RN(n988), .Q(x[94]), .QN(n1371)
         );
  DFFRX1 x_reg_6__6_ ( .D(n658), .CK(i_clk), .RN(n985), .Q(x[54]), .QN(n1331)
         );
  DFFRX1 y_reg_3__2_ ( .D(n5890), .CK(i_clk), .RN(n1005), .Q(y[53]), .QN(n1262) );
  DFFRX1 y_reg_2__2_ ( .D(n572), .CK(i_clk), .RN(n1004), .Q(y[36]), .QN(n1245)
         );
  DFFRX1 y_reg_1__2_ ( .D(n555), .CK(i_clk), .RN(n1002), .Q(y[19]), .QN(n1228)
         );
  DFFRX1 y_reg_0__2_ ( .D(n538), .CK(i_clk), .RN(n1001), .Q(y[2]), .QN(n1211)
         );
  DFFRX1 x_reg_4__6_ ( .D(n642), .CK(i_clk), .RN(n984), .Q(x[38]), .QN(n1315)
         );
  DFFRX1 x_reg_14__6_ ( .D(n722), .CK(i_clk), .RN(n990), .Q(x[118]), .QN(n1395) );
  DFFRX1 x_reg_8__6_ ( .D(n674), .CK(i_clk), .RN(n986), .Q(x[70]), .QN(n1347)
         );
  DFFRX1 x_reg_1__6_ ( .D(n618), .CK(i_clk), .RN(n1008), .Q(x[14]), .QN(n1291)
         );
  DFFRX1 y_reg_2__1_ ( .D(n571), .CK(i_clk), .RN(n1004), .Q(y[35]), .QN(n1244)
         );
  DFFRX1 y_reg_1__1_ ( .D(n554), .CK(i_clk), .RN(n1002), .Q(y[18]), .QN(n1227)
         );
  DFFRX1 y_reg_3__1_ ( .D(n5880), .CK(i_clk), .RN(n1005), .Q(y[52]), .QN(n1261) );
  DFFRX1 y_reg_0__1_ ( .D(n537), .CK(i_clk), .RN(n1001), .Q(y[1]), .QN(n1210)
         );
  DFFRX1 x_reg_3__5_ ( .D(n633), .CK(i_clk), .RN(n983), .Q(x[29]), .QN(n1306)
         );
  DFFRX1 y_reg_3__0_ ( .D(n5870), .CK(i_clk), .RN(n1005), .Q(y[51]), .QN(n1260) );
  DFFRX1 y_reg_2__0_ ( .D(n570), .CK(i_clk), .RN(n1004), .Q(y[34]), .QN(n1243)
         );
  DFFRX1 y_reg_1__0_ ( .D(n553), .CK(i_clk), .RN(n1002), .Q(y[17]), .QN(n1226)
         );
  DFFRX1 y_reg_0__0_ ( .D(n536), .CK(i_clk), .RN(n1001), .Q(y[0]), .QN(n1209)
         );
  DFFRX1 x_reg_15__5_ ( .D(n729), .CK(i_clk), .RN(n991), .Q(x[125]), .QN(n1402) );
  DFFRX1 x_reg_12__5_ ( .D(n705), .CK(i_clk), .RN(n989), .Q(x[101]), .QN(n1378) );
  DFFRX1 x_reg_0__5_ ( .D(n609), .CK(i_clk), .RN(n1007), .Q(x[5]), .QN(n1282)
         );
  DFFRX1 x_reg_7__5_ ( .D(n665), .CK(i_clk), .RN(n986), .Q(x[61]), .QN(n1338)
         );
  DFFRX1 x_reg_13__5_ ( .D(n713), .CK(i_clk), .RN(n990), .Q(x[109]), .QN(n1386) );
  DFFRX1 x_reg_2__5_ ( .D(n625), .CK(i_clk), .RN(n1008), .Q(x[21]), .QN(n1298)
         );
  DFFRX1 x_reg_11__5_ ( .D(n697), .CK(i_clk), .RN(n988), .Q(x[93]), .QN(n1370)
         );
  DFFRX1 x_reg_6__5_ ( .D(n657), .CK(i_clk), .RN(n985), .Q(x[53]), .QN(n1330)
         );
  DFFRX1 x_reg_4__5_ ( .D(n641), .CK(i_clk), .RN(n984), .Q(x[37]), .QN(n1314)
         );
  DFFRX1 x_reg_14__5_ ( .D(n721), .CK(i_clk), .RN(n990), .Q(x[117]), .QN(n1394) );
  DFFRX1 x_reg_8__5_ ( .D(n673), .CK(i_clk), .RN(n986), .Q(x[69]), .QN(n1346)
         );
  DFFRX1 x_reg_1__5_ ( .D(n617), .CK(i_clk), .RN(n1008), .Q(x[13]), .QN(n1290)
         );
  DFFRX1 x_reg_3__4_ ( .D(n632), .CK(i_clk), .RN(n983), .Q(x[28]), .QN(n1305)
         );
  DFFRX1 x_reg_15__4_ ( .D(n728), .CK(i_clk), .RN(n991), .Q(x[124]), .QN(n1401) );
  DFFRX1 x_reg_12__4_ ( .D(n704), .CK(i_clk), .RN(n989), .Q(x[100]), .QN(n1377) );
  DFFRX1 x_reg_0__4_ ( .D(n608), .CK(i_clk), .RN(n1007), .Q(x[4]), .QN(n1281)
         );
  DFFRX1 x_reg_7__4_ ( .D(n664), .CK(i_clk), .RN(n985), .Q(x[60]), .QN(n1337)
         );
  DFFRX1 x_reg_13__4_ ( .D(n712), .CK(i_clk), .RN(n990), .Q(x[108]), .QN(n1385) );
  DFFRX1 x_reg_2__4_ ( .D(n624), .CK(i_clk), .RN(n1008), .Q(x[20]), .QN(n1297)
         );
  DFFRX1 x_reg_11__4_ ( .D(n696), .CK(i_clk), .RN(n988), .Q(x[92]), .QN(n1369)
         );
  DFFRX1 x_reg_6__4_ ( .D(n656), .CK(i_clk), .RN(n985), .Q(x[52]), .QN(n1329)
         );
  DFFRX1 x_reg_4__4_ ( .D(n640), .CK(i_clk), .RN(n983), .Q(x[36]), .QN(n1313)
         );
  DFFRX1 x_reg_14__4_ ( .D(n720), .CK(i_clk), .RN(n990), .Q(x[116]), .QN(n1393) );
  DFFRX1 x_reg_8__4_ ( .D(n672), .CK(i_clk), .RN(n986), .Q(x[68]), .QN(n1345)
         );
  DFFRX1 x_reg_1__4_ ( .D(n616), .CK(i_clk), .RN(n1007), .Q(x[12]), .QN(n1289)
         );
  DFFRX1 x_reg_3__3_ ( .D(n631), .CK(i_clk), .RN(n983), .Q(x[27]), .QN(n1304)
         );
  DFFRX1 x_reg_15__3_ ( .D(n727), .CK(i_clk), .RN(n991), .Q(x[123]), .QN(n1400) );
  DFFRX1 x_reg_12__3_ ( .D(n703), .CK(i_clk), .RN(n989), .Q(x[99]), .QN(n1376)
         );
  DFFRX1 x_reg_0__3_ ( .D(n607), .CK(i_clk), .RN(n1007), .Q(x[3]), .QN(n1280)
         );
  DFFRX1 x_reg_7__3_ ( .D(n663), .CK(i_clk), .RN(n985), .Q(x[59]), .QN(n1336)
         );
  DFFRX1 x_reg_13__3_ ( .D(n711), .CK(i_clk), .RN(n989), .Q(x[107]), .QN(n1384) );
  DFFRX1 x_reg_2__3_ ( .D(n623), .CK(i_clk), .RN(n1008), .Q(x[19]), .QN(n1296)
         );
  DFFRX1 x_reg_11__3_ ( .D(n695), .CK(i_clk), .RN(n988), .Q(x[91]), .QN(n1368)
         );
  DFFRX1 x_reg_6__3_ ( .D(n655), .CK(i_clk), .RN(n985), .Q(x[51]), .QN(n1328)
         );
  DFFRX1 x_reg_4__3_ ( .D(n639), .CK(i_clk), .RN(n983), .Q(x[35]), .QN(n1312)
         );
  DFFRX1 x_reg_14__3_ ( .D(n719), .CK(i_clk), .RN(n990), .Q(x[115]), .QN(n1392) );
  DFFRX1 x_reg_8__3_ ( .D(n671), .CK(i_clk), .RN(n986), .Q(x[67]), .QN(n1344)
         );
  DFFRX1 x_reg_1__3_ ( .D(n615), .CK(i_clk), .RN(n1008), .Q(x[11]), .QN(n1288)
         );
  DFFRX1 x_reg_3__2_ ( .D(n630), .CK(i_clk), .RN(n983), .Q(x[26]), .QN(n1303)
         );
  DFFRX1 x_reg_15__2_ ( .D(n726), .CK(i_clk), .RN(n991), .Q(x[122]), .QN(n1399) );
  DFFRX1 x_reg_12__2_ ( .D(n702), .CK(i_clk), .RN(n989), .Q(x[98]), .QN(n1375)
         );
  DFFRX1 x_reg_0__2_ ( .D(n606), .CK(i_clk), .RN(n1007), .Q(x[2]), .QN(n1279)
         );
  DFFRX1 x_reg_7__2_ ( .D(n662), .CK(i_clk), .RN(n985), .Q(x[58]), .QN(n1335)
         );
  DFFRX1 x_reg_13__2_ ( .D(n710), .CK(i_clk), .RN(n989), .Q(x[106]), .QN(n1383) );
  DFFRX1 x_reg_2__2_ ( .D(n622), .CK(i_clk), .RN(n1007), .Q(x[18]), .QN(n1295)
         );
  DFFRX1 x_reg_11__2_ ( .D(n694), .CK(i_clk), .RN(n988), .Q(x[90]), .QN(n1367)
         );
  DFFRX1 x_reg_6__2_ ( .D(n654), .CK(i_clk), .RN(n985), .Q(x[50]), .QN(n1327)
         );
  DFFRX1 x_reg_4__2_ ( .D(n638), .CK(i_clk), .RN(n983), .Q(x[34]), .QN(n1311)
         );
  DFFRX1 x_reg_14__2_ ( .D(n718), .CK(i_clk), .RN(n990), .Q(x[114]), .QN(n1391) );
  DFFRX1 x_reg_8__2_ ( .D(n670), .CK(i_clk), .RN(n986), .Q(x[66]), .QN(n1343)
         );
  DFFRX1 x_reg_1__2_ ( .D(n614), .CK(i_clk), .RN(n1007), .Q(x[10]), .QN(n1287)
         );
  DFFRX1 x_reg_3__1_ ( .D(n629), .CK(i_clk), .RN(n989), .Q(x[25]), .QN(n1302)
         );
  DFFRX1 x_reg_15__1_ ( .D(n725), .CK(i_clk), .RN(n991), .Q(x[121]), .QN(n1398) );
  DFFRX1 x_reg_12__1_ ( .D(n701), .CK(i_clk), .RN(n989), .Q(x[97]), .QN(n1374)
         );
  DFFRX1 x_reg_0__1_ ( .D(n605), .CK(i_clk), .RN(n1006), .Q(x[1]), .QN(n1278)
         );
  DFFRX1 x_reg_11__1_ ( .D(n693), .CK(i_clk), .RN(n988), .Q(x[89]), .QN(n1366)
         );
  DFFRX1 x_reg_7__1_ ( .D(n661), .CK(i_clk), .RN(n985), .Q(x[57]), .QN(n1334)
         );
  DFFRX1 x_reg_13__1_ ( .D(n709), .CK(i_clk), .RN(n989), .Q(x[105]), .QN(n1382) );
  DFFRX1 x_reg_2__1_ ( .D(n621), .CK(i_clk), .RN(n1008), .Q(x[17]), .QN(n1294)
         );
  DFFRX1 x_reg_6__1_ ( .D(n653), .CK(i_clk), .RN(n985), .Q(x[49]), .QN(n1326)
         );
  DFFRX1 x_reg_14__1_ ( .D(n717), .CK(i_clk), .RN(n990), .Q(x[113]), .QN(n1390) );
  DFFRX1 x_reg_8__1_ ( .D(n669), .CK(i_clk), .RN(n986), .Q(x[65]), .QN(n1342)
         );
  DFFRX1 x_reg_1__1_ ( .D(n613), .CK(i_clk), .RN(n1007), .Q(x[9]), .QN(n1286)
         );
  DFFRX1 x_reg_4__1_ ( .D(n637), .CK(i_clk), .RN(n983), .Q(x[33]), .QN(n1310)
         );
  DFFRX1 x_reg_3__0_ ( .D(n628), .CK(i_clk), .RN(n1008), .Q(x[24]), .QN(n1301)
         );
  DFFRX1 x_reg_15__0_ ( .D(n724), .CK(i_clk), .RN(n991), .Q(x[120]), .QN(n1397) );
  DFFRX1 x_reg_12__0_ ( .D(n700), .CK(i_clk), .RN(n988), .Q(x[96]), .QN(n1373)
         );
  DFFRX1 x_reg_0__0_ ( .D(n604), .CK(i_clk), .RN(n1007), .Q(x[0]), .QN(n1277)
         );
  DFFRX1 x_reg_7__0_ ( .D(n660), .CK(i_clk), .RN(n985), .Q(x[56]), .QN(n1333)
         );
  DFFRX1 x_reg_14__0_ ( .D(n716), .CK(i_clk), .RN(n990), .Q(x[112]), .QN(n1389) );
  DFFRX1 x_reg_11__0_ ( .D(n692), .CK(i_clk), .RN(n988), .Q(x[88]), .QN(n1365)
         );
  DFFRX1 x_reg_8__0_ ( .D(n668), .CK(i_clk), .RN(n986), .Q(x[64]), .QN(n1341)
         );
  DFFRX1 x_reg_4__0_ ( .D(n636), .CK(i_clk), .RN(n983), .Q(x[32]), .QN(n1309)
         );
  DFFRX1 x_reg_13__0_ ( .D(n708), .CK(i_clk), .RN(n989), .Q(x[104]), .QN(n1381) );
  DFFRX1 x_reg_2__0_ ( .D(n620), .CK(i_clk), .RN(n1008), .Q(x[16]), .QN(n1293)
         );
  DFFRX1 x_reg_1__0_ ( .D(n612), .CK(i_clk), .RN(n1007), .Q(x[8]), .QN(n1285)
         );
  DFFRX1 DIS_out_valid_reg ( .D(n461), .CK(i_clk), .RN(n996), .QN(n449) );
  DFFRX1 z_reg_0__12_ ( .D(n496), .CK(i_clk), .RN(n997), .Q(z[12]), .QN(n4360)
         );
  DFFRX1 z_reg_1__7_ ( .D(n5040), .CK(i_clk), .RN(n998), .Q(z[20]), .QN(n428)
         );
  DFFRX1 z_reg_1__6_ ( .D(n5030), .CK(i_clk), .RN(n998), .Q(z[19]), .QN(n429)
         );
  DFFRX1 z_reg_1__5_ ( .D(n5020), .CK(i_clk), .RN(n998), .Q(z[18]), .QN(n430)
         );
  DFFRX1 z_reg_1__4_ ( .D(n5010), .CK(i_clk), .RN(n998), .Q(z[17]), .QN(n431)
         );
  DFFRX1 z_reg_1__3_ ( .D(n5000), .CK(i_clk), .RN(n998), .Q(z[16]), .QN(n432)
         );
  DFFRX1 z_reg_1__2_ ( .D(n4990), .CK(i_clk), .RN(n998), .Q(z[15]), .QN(n433)
         );
  DFFRX1 z_reg_1__1_ ( .D(n4980), .CK(i_clk), .RN(n998), .Q(z[14]), .QN(n434)
         );
  DFFRX1 z_reg_1__0_ ( .D(n4970), .CK(i_clk), .RN(n998), .Q(z[13]), .QN(n435)
         );
  DFFRX1 z_reg_1__9_ ( .D(n5060), .CK(i_clk), .RN(n998), .Q(z[22]), .QN(n426)
         );
  DFFRX1 z_reg_1__8_ ( .D(n5050), .CK(i_clk), .RN(n998), .Q(z[21]), .QN(n427)
         );
  DFFRX1 x_reg_9__7_ ( .D(n683), .CK(i_clk), .RN(n987), .Q(x[79]), .QN(n1356)
         );
  DFFRX1 x_reg_5__7_ ( .D(n651), .CK(i_clk), .RN(n984), .Q(x[47]), .QN(n1324)
         );
  DFFRX1 x_reg_10__7_ ( .D(n691), .CK(i_clk), .RN(n988), .Q(x[87]), .QN(n1364)
         );
  DFFRX1 x_reg_9__6_ ( .D(n682), .CK(i_clk), .RN(n987), .Q(x[78]), .QN(n1355)
         );
  DFFRX1 x_reg_5__6_ ( .D(n650), .CK(i_clk), .RN(n984), .Q(x[46]), .QN(n1323)
         );
  DFFRX1 x_reg_10__6_ ( .D(n690), .CK(i_clk), .RN(n988), .Q(x[86]), .QN(n1363)
         );
  DFFRX1 x_reg_9__5_ ( .D(n681), .CK(i_clk), .RN(n987), .Q(x[77]), .QN(n1354)
         );
  DFFRX1 x_reg_5__5_ ( .D(n649), .CK(i_clk), .RN(n984), .Q(x[45]), .QN(n1322)
         );
  DFFRX1 x_reg_10__5_ ( .D(n689), .CK(i_clk), .RN(n988), .Q(x[85]), .QN(n1362)
         );
  DFFRX1 x_reg_9__4_ ( .D(n680), .CK(i_clk), .RN(n987), .Q(x[76]), .QN(n1353)
         );
  DFFRX1 x_reg_5__4_ ( .D(n648), .CK(i_clk), .RN(n984), .Q(x[44]), .QN(n1321)
         );
  DFFRX1 x_reg_10__4_ ( .D(n688), .CK(i_clk), .RN(n987), .Q(x[84]), .QN(n1361)
         );
  DFFRX1 x_reg_9__3_ ( .D(n679), .CK(i_clk), .RN(n987), .Q(x[75]), .QN(n1352)
         );
  DFFRX1 x_reg_5__3_ ( .D(n647), .CK(i_clk), .RN(n984), .Q(x[43]), .QN(n1320)
         );
  DFFRX1 x_reg_10__3_ ( .D(n687), .CK(i_clk), .RN(n987), .Q(x[83]), .QN(n1360)
         );
  DFFRX1 x_reg_9__2_ ( .D(n678), .CK(i_clk), .RN(n987), .Q(x[74]), .QN(n1351)
         );
  DFFRX1 x_reg_5__2_ ( .D(n646), .CK(i_clk), .RN(n984), .Q(x[42]), .QN(n1319)
         );
  DFFRX1 x_reg_10__2_ ( .D(n686), .CK(i_clk), .RN(n987), .Q(x[82]), .QN(n1359)
         );
  DFFRX1 x_reg_9__1_ ( .D(n677), .CK(i_clk), .RN(n987), .Q(x[73]), .QN(n1350)
         );
  DFFRX1 x_reg_5__1_ ( .D(n645), .CK(i_clk), .RN(n984), .Q(x[41]), .QN(n1318)
         );
  DFFRX1 x_reg_10__1_ ( .D(n685), .CK(i_clk), .RN(n987), .Q(x[81]), .QN(n1358)
         );
  DFFRX1 x_reg_9__0_ ( .D(n676), .CK(i_clk), .RN(n986), .Q(x[72]), .QN(n1349)
         );
  DFFRX1 x_reg_6__0_ ( .D(n652), .CK(i_clk), .RN(n984), .Q(x[48]), .QN(n1325)
         );
  DFFRX1 in_ready_reg ( .D(1'b1), .CK(i_clk), .RN(n996), .Q(o_in_ready) );
  DFFSX1 dis_size_reg_5_ ( .D(n751), .CK(i_clk), .SN(i_rst_n), .Q(N318), .QN(
        n480) );
  DFFSX1 dis_size_nxt_reg_5_ ( .D(n752), .CK(i_clk), .SN(i_rst_n), .QN(n1208)
         );
  DFFRX1 origin_row_reg_2_ ( .D(n735), .CK(i_clk), .RN(i_rst_n), .Q(
        origin_row[2]), .QN(n1095) );
  DFFRX1 origin_col_reg_2_ ( .D(n736), .CK(i_clk), .RN(n991), .Q(N543), .QN(
        n1127) );
  DFFRX1 state_reg_3_ ( .D(state_nxt[3]), .CK(i_clk), .RN(n993), .Q(state[3]), 
        .QN(n1049) );
  DFFRX1 sram_addr_prev_reg_1_ ( .D(sram_addr[1]), .CK(i_clk), .RN(n996), .Q(
        N220), .QN(n914) );
  DFFRX1 origin_col_reg_0_ ( .D(n737), .CK(i_clk), .RN(i_rst_n), .Q(N541), 
        .QN(N215) );
  DFFRX1 x_reg_5__0_ ( .D(n644), .CK(i_clk), .RN(n984), .Q(x[40]), .QN(n1317)
         );
  DFFRX1 op_reg_2_ ( .D(n459), .CK(i_clk), .RN(i_rst_n), .Q(op[2]), .QN(n1197)
         );
  DFFRX1 op_reg_3_ ( .D(n460), .CK(i_clk), .RN(n995), .Q(op[3]), .QN(n1198) );
  DFFRX1 op_reg_1_ ( .D(n458), .CK(i_clk), .RN(n994), .Q(op[1]), .QN(n1144) );
  DFFRX1 op_reg_0_ ( .D(n457), .CK(i_clk), .RN(n994), .Q(op[0]), .QN(n1142) );
  DFFRX1 op_ready_reg ( .D(op_ready_nxt), .CK(i_clk), .RN(n992), .Q(o_op_ready) );
  DFFRX1 origin_row_reg_1_ ( .D(n733), .CK(i_clk), .RN(n991), .Q(origin_row[1]), .QN(n805) );
  DFFRX1 CONV_out_valid_reg ( .D(N2498), .CK(i_clk), .RN(n996), .Q(n1406), 
        .QN(n1131) );
  DFFRX1 state_reg_1_ ( .D(state_nxt[1]), .CK(i_clk), .RN(n993), .Q(state[1]), 
        .QN(n1025) );
  DFFRX1 sram_addr_prev_reg_0_ ( .D(sram_addr[0]), .CK(i_clk), .RN(n996), .Q(
        N219), .QN(n913) );
  DFFRX1 in_data_reg_7_ ( .D(i_in_data[7]), .CK(i_clk), .RN(n983), .Q(
        in_data[7]) );
  DFFRX1 in_data_reg_6_ ( .D(i_in_data[6]), .CK(i_clk), .RN(n995), .Q(
        in_data[6]) );
  DFFRX1 in_data_reg_5_ ( .D(i_in_data[5]), .CK(i_clk), .RN(n995), .Q(
        in_data[5]) );
  DFFRX1 in_data_reg_4_ ( .D(i_in_data[4]), .CK(i_clk), .RN(n995), .Q(
        in_data[4]) );
  DFFRX1 in_data_reg_3_ ( .D(i_in_data[3]), .CK(i_clk), .RN(n995), .Q(
        in_data[3]) );
  DFFRX1 in_data_reg_2_ ( .D(i_in_data[2]), .CK(i_clk), .RN(n995), .Q(
        in_data[2]) );
  DFFRX1 in_data_reg_1_ ( .D(i_in_data[1]), .CK(i_clk), .RN(n995), .Q(
        in_data[1]) );
  DFFRX1 in_data_reg_0_ ( .D(i_in_data[0]), .CK(i_clk), .RN(n995), .Q(
        in_data[0]) );
  DFFRX1 CONV_out_num_reg_1_ ( .D(N2483), .CK(i_clk), .RN(i_rst_n), .Q(N222), 
        .QN(n945) );
  DFFRX1 CONV_out_num_reg_0_ ( .D(N2482), .CK(i_clk), .RN(n996), .Q(N221), 
        .QN(n946) );
  DFFRX1 dis_size_reg_4_ ( .D(n749), .CK(i_clk), .RN(n994), .Q(N317), .QN(n481) );
  DFFRX1 dis_size_reg_3_ ( .D(n747), .CK(i_clk), .RN(n992), .Q(N316), .QN(n482) );
  DFFRX1 counter_256_reg_7_ ( .D(n738), .CK(i_clk), .RN(n993), .Q(
        counter_256[7]), .QN(n451) );
  DFFRX1 counter_256_reg_6_ ( .D(n739), .CK(i_clk), .RN(n993), .Q(
        counter_256[6]), .QN(n473) );
  DFFRX1 counter_256_reg_5_ ( .D(n740), .CK(i_clk), .RN(n993), .Q(
        counter_256[5]), .QN(n474) );
  DFFRX1 counter_256_reg_4_ ( .D(n741), .CK(i_clk), .RN(n994), .Q(
        counter_256[4]), .QN(n475) );
  DFFRX1 counter_256_reg_3_ ( .D(n742), .CK(i_clk), .RN(n994), .Q(
        counter_256[3]), .QN(n476) );
  DFFRX1 counter_256_reg_2_ ( .D(n743), .CK(i_clk), .RN(n994), .Q(
        counter_256[2]), .QN(n477) );
  DFFRX1 counter_256_reg_1_ ( .D(n744), .CK(i_clk), .RN(n994), .Q(
        counter_256[1]), .QN(n299) );
  DFFRX1 counter_256_reg_0_ ( .D(n745), .CK(i_clk), .RN(n994), .Q(
        counter_256[0]), .QN(n304) );
  DFFRX1 z_reg_2__10_ ( .D(n520), .CK(i_clk), .RN(n999), .Q(z[36]), .QN(n4120)
         );
  DFFRX1 z_reg_2__9_ ( .D(n519), .CK(i_clk), .RN(n999), .Q(z[35]), .QN(n4130)
         );
  DFFRX1 z_reg_2__8_ ( .D(n518), .CK(i_clk), .RN(n999), .Q(z[34]), .QN(n4140)
         );
  DFFRX1 z_reg_2__7_ ( .D(n517), .CK(i_clk), .RN(n999), .Q(z[33]), .QN(n4150)
         );
  DFFRX1 z_reg_2__6_ ( .D(n516), .CK(i_clk), .RN(n999), .Q(z[32]), .QN(n4160)
         );
  DFFRX1 z_reg_2__5_ ( .D(n515), .CK(i_clk), .RN(n999), .Q(z[31]), .QN(n4170)
         );
  DFFRX1 z_reg_2__4_ ( .D(n514), .CK(i_clk), .RN(n999), .Q(z[30]), .QN(n4180)
         );
  DFFRX1 z_reg_2__3_ ( .D(n513), .CK(i_clk), .RN(n999), .Q(z[29]), .QN(n4190)
         );
  DFFRX1 z_reg_2__2_ ( .D(n512), .CK(i_clk), .RN(n999), .Q(z[28]), .QN(n4200)
         );
  DFFRX1 z_reg_2__1_ ( .D(n511), .CK(i_clk), .RN(n999), .Q(z[27]), .QN(n421)
         );
  DFFRX1 z_reg_2__0_ ( .D(n510), .CK(i_clk), .RN(n1002), .Q(z[26]), .QN(n422)
         );
  DFFRX1 z_reg_3__10_ ( .D(n533), .CK(i_clk), .RN(n1000), .Q(z[49]), .QN(n399)
         );
  DFFRX1 z_reg_3__9_ ( .D(n532), .CK(i_clk), .RN(n1000), .Q(z[48]), .QN(n400)
         );
  DFFRX1 z_reg_3__8_ ( .D(n531), .CK(i_clk), .RN(n1000), .Q(z[47]), .QN(n401)
         );
  DFFRX1 z_reg_3__7_ ( .D(n530), .CK(i_clk), .RN(n1000), .Q(z[46]), .QN(n402)
         );
  DFFRX1 z_reg_3__6_ ( .D(n529), .CK(i_clk), .RN(n1000), .Q(z[45]), .QN(n403)
         );
  DFFRX1 z_reg_3__5_ ( .D(n528), .CK(i_clk), .RN(n1000), .Q(z[44]), .QN(n404)
         );
  DFFRX1 z_reg_3__4_ ( .D(n527), .CK(i_clk), .RN(n1000), .Q(z[43]), .QN(n405)
         );
  DFFRX1 z_reg_3__3_ ( .D(n526), .CK(i_clk), .RN(n1000), .Q(z[42]), .QN(n406)
         );
  DFFRX1 z_reg_3__2_ ( .D(n525), .CK(i_clk), .RN(n1000), .Q(z[41]), .QN(n407)
         );
  DFFRX1 z_reg_3__1_ ( .D(n524), .CK(i_clk), .RN(n1000), .Q(z[40]), .QN(n408)
         );
  DFFRX1 z_reg_3__0_ ( .D(n523), .CK(i_clk), .RN(n1000), .Q(z[39]), .QN(n409)
         );
  DFFRX1 z_reg_3__11_ ( .D(n534), .CK(i_clk), .RN(n1001), .Q(z[50]), .QN(n398)
         );
  DFFRX1 z_reg_2__11_ ( .D(n521), .CK(i_clk), .RN(n999), .Q(z[37]), .QN(n4110)
         );
  DFFRX1 z_reg_3__12_ ( .D(n535), .CK(i_clk), .RN(n1001), .Q(z[51]), .QN(n397)
         );
  DFFRX1 z_reg_2__12_ ( .D(n522), .CK(i_clk), .RN(n1000), .Q(z[38]), .QN(n4100) );
  DFFRX1 counter_2047_reg_10_ ( .D(n754), .CK(i_clk), .RN(n992), .Q(
        counter_2047[10]), .QN(n462) );
  DFFRX1 counter_2047_reg_9_ ( .D(n755), .CK(i_clk), .RN(n992), .Q(
        counter_2047[9]), .QN(n463) );
  DFFRX1 counter_2047_reg_8_ ( .D(n756), .CK(i_clk), .RN(n992), .Q(
        counter_2047[8]), .QN(n464) );
  DFFRX1 counter_2047_reg_7_ ( .D(n757), .CK(i_clk), .RN(n992), .Q(
        counter_2047[7]), .QN(n465) );
  DFFRX1 counter_2047_reg_6_ ( .D(n758), .CK(i_clk), .RN(n992), .Q(
        counter_2047[6]), .QN(n466) );
  DFFRX1 counter_2047_reg_5_ ( .D(n759), .CK(i_clk), .RN(n992), .Q(
        counter_2047[5]), .QN(n467) );
  DFFRX1 counter_2047_reg_4_ ( .D(n760), .CK(i_clk), .RN(n992), .Q(
        counter_2047[4]), .QN(n468) );
  DFFRX1 counter_2047_reg_3_ ( .D(n761), .CK(i_clk), .RN(n993), .Q(
        counter_2047[3]), .QN(n469) );
  DFFRX1 counter_2047_reg_2_ ( .D(n762), .CK(i_clk), .RN(n993), .Q(
        counter_2047[2]), .QN(n470) );
  DFFRX1 counter_2047_reg_1_ ( .D(n763), .CK(i_clk), .RN(n993), .Q(
        counter_2047[1]), .QN(n471) );
  DFFRX1 counter_2047_reg_0_ ( .D(n764), .CK(i_clk), .RN(n993), .Q(
        counter_2047[0]), .QN(n472) );
  DFFRX1 z_reg_1__12_ ( .D(n509), .CK(i_clk), .RN(n999), .Q(z[25]), .QN(n423)
         );
  DFFRX1 z_reg_1__11_ ( .D(n508), .CK(i_clk), .RN(n998), .Q(z[24]), .QN(n424)
         );
  DFFRX1 z_reg_0__11_ ( .D(n495), .CK(i_clk), .RN(n997), .Q(z[11]), .QN(n4370)
         );
  DFFRX1 z_reg_0__10_ ( .D(n494), .CK(i_clk), .RN(n997), .Q(z[10]), .QN(n4380)
         );
  DFFRX1 z_reg_0__9_ ( .D(n493), .CK(i_clk), .RN(n997), .Q(z[9]), .QN(n4390)
         );
  DFFRX1 z_reg_0__8_ ( .D(n492), .CK(i_clk), .RN(n997), .Q(z[8]), .QN(n4400)
         );
  DFFRX1 z_reg_0__7_ ( .D(n491), .CK(i_clk), .RN(n997), .Q(z[7]), .QN(n4410)
         );
  DFFRX1 z_reg_0__6_ ( .D(n490), .CK(i_clk), .RN(n997), .Q(z[6]), .QN(n4420)
         );
  DFFRX1 z_reg_0__5_ ( .D(n489), .CK(i_clk), .RN(n997), .Q(z[5]), .QN(n4430)
         );
  DFFRX1 z_reg_0__4_ ( .D(n488), .CK(i_clk), .RN(n997), .Q(z[4]), .QN(n444) );
  DFFRX1 z_reg_0__3_ ( .D(n487), .CK(i_clk), .RN(n997), .Q(z[3]), .QN(n445) );
  DFFRX1 z_reg_0__2_ ( .D(n486), .CK(i_clk), .RN(n997), .Q(z[2]), .QN(n446) );
  DFFRX1 z_reg_0__1_ ( .D(n485), .CK(i_clk), .RN(n997), .Q(z[1]), .QN(n447) );
  DFFRX1 z_reg_0__0_ ( .D(n484), .CK(i_clk), .RN(n996), .Q(z[0]), .QN(n448) );
  DFFRX1 z_reg_1__10_ ( .D(n5070), .CK(i_clk), .RN(n998), .Q(z[23]), .QN(n425)
         );
  DFFRX2 origin_col_reg_1_ ( .D(n732), .CK(i_clk), .RN(n991), .Q(N542), .QN(
        n851) );
  DFFRX2 origin_row_reg_0_ ( .D(n734), .CK(i_clk), .RN(n992), .Q(
        conv_row_3__0_), .QN(N544) );
  DFFRX2 x_reg_10__0_ ( .D(n684), .CK(i_clk), .RN(n987), .Q(x[80]), .QN(n1357)
         );
  DFFRX2 state_reg_0_ ( .D(state_nxt[0]), .CK(i_clk), .RN(n994), .Q(state[0]), 
        .QN(n1023) );
  DFFRX2 state_reg_2_ ( .D(state_nxt[2]), .CK(i_clk), .RN(n993), .Q(state[2]), 
        .QN(n1024) );
  CLKINVX6 U552 ( .A(counter_256[3]), .Y(n1076) );
  CLKINVX6 U553 ( .A(n475), .Y(n1070) );
  XOR2X1 U554 ( .A(n809), .B(1'b1), .Y(n1077) );
  AND4X1 U555 ( .A(n480), .B(1'b1), .C(n1046), .D(n1145), .Y(n1143) );
  AND4X1 U556 ( .A(n481), .B(1'b1), .C(1'b1), .D(1'b1), .Y(n1053) );
  AND3X1 U557 ( .A(n1046), .B(1'b1), .C(n480), .Y(n1044) );
  CLKINVX6 U558 ( .A(N316), .Y(N305) );
  CLKINVX6 U559 ( .A(n481), .Y(n1045) );
  NOR2BX4 U560 ( .AN(n1138), .B(n481), .Y(n1145) );
  OA21X2 U561 ( .A0(n1055), .A1(n958), .B0(n1175), .Y(n766) );
  OA21X2 U562 ( .A0(n1055), .A1(n1086), .B0(n1175), .Y(n767) );
  OA21X2 U563 ( .A0(n1055), .A1(n956), .B0(n1175), .Y(n768) );
  NOR2X1 U564 ( .A(n1188), .B(n1055), .Y(n769) );
  NAND2X1 U565 ( .A(n1146), .B(n1191), .Y(n770) );
  OR2X1 U566 ( .A(n1068), .B(n1048), .Y(n771) );
  NAND2X1 U567 ( .A(n1146), .B(n771), .Y(n772) );
  CLKBUFX2 U568 ( .A(n1186), .Y(n975) );
  AND2X2 U569 ( .A(n871), .B(n870), .Y(n773) );
  AND2X2 U570 ( .A(n865), .B(n864), .Y(n774) );
  AND2X2 U571 ( .A(n863), .B(n862), .Y(n775) );
  AND2X2 U572 ( .A(n861), .B(n860), .Y(n776) );
  AND2X2 U573 ( .A(n859), .B(n858), .Y(n777) );
  AND2X2 U574 ( .A(n857), .B(n856), .Y(n778) );
  AND2X2 U575 ( .A(n855), .B(n854), .Y(n779) );
  AND2X2 U576 ( .A(n853), .B(n852), .Y(n780) );
  AND2X2 U577 ( .A(n829), .B(n828), .Y(n781) );
  AND2X2 U578 ( .A(n823), .B(n822), .Y(n782) );
  AND2X2 U579 ( .A(n821), .B(n820), .Y(n783) );
  AND2X2 U580 ( .A(n819), .B(n818), .Y(n784) );
  AND2X2 U581 ( .A(n817), .B(n816), .Y(n785) );
  AND2X2 U582 ( .A(n815), .B(n814), .Y(n786) );
  AND2X2 U583 ( .A(n813), .B(n812), .Y(n787) );
  AND2X2 U584 ( .A(n811), .B(n810), .Y(n788) );
  AND2X2 U585 ( .A(n850), .B(n849), .Y(n789) );
  AND2X2 U586 ( .A(n844), .B(n843), .Y(n790) );
  AND2X2 U587 ( .A(n842), .B(n841), .Y(n791) );
  AND2X2 U588 ( .A(n840), .B(n839), .Y(n792) );
  AND2X2 U589 ( .A(n838), .B(n837), .Y(n793) );
  AND2X2 U590 ( .A(n836), .B(n835), .Y(n794) );
  AND2X2 U591 ( .A(n834), .B(n833), .Y(n795) );
  AND2X2 U592 ( .A(n832), .B(n831), .Y(n796) );
  AND2X2 U593 ( .A(n892), .B(n891), .Y(n797) );
  AND2X2 U594 ( .A(n886), .B(n885), .Y(n798) );
  AND2X2 U595 ( .A(n884), .B(n883), .Y(n799) );
  AND2X2 U596 ( .A(n882), .B(n881), .Y(n800) );
  AND2X2 U597 ( .A(n880), .B(n879), .Y(n801) );
  AND2X2 U598 ( .A(n878), .B(n877), .Y(n802) );
  AND2X2 U599 ( .A(n876), .B(n875), .Y(n803) );
  AND2X2 U600 ( .A(n874), .B(n873), .Y(n804) );
  NOR4X2 U601 ( .A(n1023), .B(n1025), .C(n1024), .D(n1049), .Y(n806) );
  XNOR2XL U602 ( .A(N215), .B(n1147), .Y(n737) );
  NAND3XL U603 ( .A(n1053), .B(N318), .C(n1046), .Y(n1052) );
  NAND4XL U604 ( .A(n482), .B(n1053), .C(op[0]), .D(N318), .Y(n1140) );
  XOR2XL U605 ( .A(origin_row[2]), .B(r796_carry_5_), .Y(N590) );
  XOR2XL U606 ( .A(origin_row[2]), .B(n961), .Y(n1098) );
  XOR2XL U607 ( .A(origin_row[2]), .B(r795_carry[5]), .Y(N546) );
  INVXL U608 ( .A(n1317), .Y(n807) );
  INVXL U609 ( .A(n474), .Y(n808) );
  INVXL U610 ( .A(n475), .Y(n1203) );
  INVXL U611 ( .A(n477), .Y(n809) );
  INVXL U612 ( .A(n476), .Y(n1195) );
  OAI222X1 U613 ( .A0(n851), .A1(n1112), .B0(n1128), .B1(n1083), .C0(n471), 
        .C1(n1084), .Y(sram_addr[1]) );
  OAI222X1 U614 ( .A0(n1112), .A1(n1119), .B0(n1129), .B1(n1083), .C0(n472), 
        .C1(n1084), .Y(sram_addr[0]) );
  OAI221X4 U615 ( .A0(n1091), .A1(n1083), .B0(n1092), .B1(n1093), .C0(n1094), 
        .Y(sram_addr[8]) );
  OAI221X4 U616 ( .A0(n1101), .A1(n1083), .B0(n1102), .B1(n1093), .C0(n1103), 
        .Y(sram_addr[7]) );
  CLKINVX2 U617 ( .A(n1117), .Y(n1093) );
  NOR2X2 U618 ( .A(N585), .B(n851), .Y(n889) );
  OAI221X4 U619 ( .A0(n1108), .A1(n1083), .B0(n469), .B1(n1084), .C0(n1109), 
        .Y(sram_addr[6]) );
  AND4XL U620 ( .A(n1163), .B(op[1]), .C(n1152), .D(n1142), .Y(n1150) );
  AND4XL U621 ( .A(n1163), .B(op[0]), .C(n1122), .D(n1144), .Y(n1149) );
  NOR2X2 U622 ( .A(N585), .B(N542), .Y(n847) );
  OAI222X4 U623 ( .A0(n473), .A1(n1081), .B0(n1116), .B1(n1083), .C0(n462), 
        .C1(n1084), .Y(sram_addr[13]) );
  NAND2X2 U624 ( .A(n1172), .B(n1152), .Y(n1174) );
  NAND2X2 U625 ( .A(n1177), .B(n1122), .Y(n1176) );
  NOR2X2 U626 ( .A(N541), .B(N212), .Y(n826) );
  NOR2X2 U627 ( .A(n960), .B(n851), .Y(n890) );
  NOR2X2 U628 ( .A(n872), .B(N215), .Y(n867) );
  OAI222X4 U629 ( .A0(n474), .A1(n1081), .B0(n1082), .B1(n1083), .C0(n463), 
        .C1(n1084), .Y(sram_addr[12]) );
  NAND2X2 U630 ( .A(n1172), .B(n1122), .Y(n1171) );
  NAND2X2 U631 ( .A(n1177), .B(n1152), .Y(n1179) );
  NOR2X2 U632 ( .A(n851), .B(N585), .Y(n845) );
  NOR2X2 U633 ( .A(n830), .B(N541), .Y(n824) );
  NOR2X2 U634 ( .A(N542), .B(n960), .Y(n888) );
  NOR2X2 U635 ( .A(N215), .B(N216), .Y(n869) );
  OAI222X4 U636 ( .A0(n475), .A1(n1081), .B0(n1088), .B1(n1083), .C0(n464), 
        .C1(n1084), .Y(sram_addr[11]) );
  NAND4X2 U637 ( .A(op[3]), .B(n1142), .C(n1144), .D(n1197), .Y(n1065) );
  NAND2X2 U638 ( .A(n1181), .B(n1152), .Y(n1183) );
  NAND2X2 U639 ( .A(n1167), .B(n1122), .Y(n1166) );
  NOR2X2 U640 ( .A(n872), .B(n960), .Y(n866) );
  NOR2X2 U641 ( .A(n914), .B(n913), .Y(n907) );
  NOR2X2 U642 ( .A(n960), .B(N542), .Y(n848) );
  NOR2X2 U643 ( .A(N215), .B(N212), .Y(n827) );
  OAI21X1 U644 ( .A0(n851), .A1(n1119), .B0(n1121), .Y(N212) );
  NOR2X2 U645 ( .A(N219), .B(N220), .Y(n910) );
  OAI222X4 U646 ( .A0(n476), .A1(n1081), .B0(n1089), .B1(n1083), .C0(n465), 
        .C1(n1084), .Y(sram_addr[10]) );
  NAND3X2 U647 ( .A(state[3]), .B(n1024), .C(n1130), .Y(n1146) );
  NAND2X2 U648 ( .A(n1181), .B(n1122), .Y(n1180) );
  NAND2X2 U649 ( .A(n1167), .B(n1152), .Y(n1169) );
  MXI2X2 U650 ( .A(n1131), .B(n449), .S0(n959), .Y(o_out_valid) );
  NOR2X2 U651 ( .A(N542), .B(N585), .Y(n887) );
  NOR2X2 U652 ( .A(n960), .B(N216), .Y(n868) );
  NOR2X2 U653 ( .A(n913), .B(N220), .Y(n909) );
  NOR2X2 U654 ( .A(n851), .B(n960), .Y(n846) );
  NOR2X2 U655 ( .A(n830), .B(N215), .Y(n825) );
  NOR2X2 U656 ( .A(n914), .B(N219), .Y(n908) );
  OAI222X4 U657 ( .A0(n477), .A1(n1081), .B0(n1090), .B1(n1083), .C0(n466), 
        .C1(n1084), .Y(sram_addr[9]) );
  AOI2BB1XL U658 ( .A0N(n956), .A1N(n1099), .B0(n1093), .Y(n1111) );
  NAND2XL U659 ( .A(n1023), .B(n1025), .Y(n1054) );
  INVXL U660 ( .A(sram_addr[0]), .Y(n1079) );
  NAND3XL U661 ( .A(sram_addr[1]), .B(n1079), .C(n952), .Y(sram_wen_2) );
  NAND3XL U662 ( .A(sram_addr[0]), .B(sram_addr[1]), .C(n952), .Y(sram_wen_3)
         );
  AND2XL U663 ( .A(n958), .B(n1117), .Y(n1113) );
  INVX1 U664 ( .A(N212), .Y(N216) );
  OAI2BB1XL U665 ( .A0N(n1118), .A1N(n1117), .B0(n1115), .Y(sram_addr[4]) );
  OAI2BB1XL U666 ( .A0N(n1124), .A1N(n1117), .B0(n1115), .Y(sram_addr[3]) );
  OAI211XL U667 ( .A0(n1026), .A1(n1024), .B0(n1020), .C0(n1027), .Y(
        state_nxt[2]) );
  NOR3XL U668 ( .A(n1054), .B(n1049), .C(n1024), .Y(n1036) );
  AOI22XL U669 ( .A0(q[0]), .A1(n910), .B0(q[8]), .B1(n909), .Y(n893) );
  AOI22XL U670 ( .A0(q[1]), .A1(n910), .B0(q[9]), .B1(n909), .Y(n895) );
  AOI22XL U671 ( .A0(q[2]), .A1(n910), .B0(q[10]), .B1(n909), .Y(n897) );
  AOI22XL U672 ( .A0(q[3]), .A1(n910), .B0(q[11]), .B1(n909), .Y(n899) );
  AOI22XL U673 ( .A0(q[4]), .A1(n910), .B0(q[12]), .B1(n909), .Y(n901) );
  AOI22XL U674 ( .A0(q[5]), .A1(n910), .B0(q[13]), .B1(n909), .Y(n903) );
  AOI22XL U675 ( .A0(q[6]), .A1(n910), .B0(q[14]), .B1(n909), .Y(n905) );
  AOI22XL U676 ( .A0(q[7]), .A1(n910), .B0(q[15]), .B1(n909), .Y(n911) );
  AOI22XL U677 ( .A0(q[16]), .A1(n908), .B0(q[24]), .B1(n907), .Y(n894) );
  AOI22XL U678 ( .A0(q[17]), .A1(n908), .B0(q[25]), .B1(n907), .Y(n896) );
  AOI22XL U679 ( .A0(q[18]), .A1(n908), .B0(q[26]), .B1(n907), .Y(n898) );
  AOI22XL U680 ( .A0(q[19]), .A1(n908), .B0(q[27]), .B1(n907), .Y(n900) );
  AOI22XL U681 ( .A0(q[20]), .A1(n908), .B0(q[28]), .B1(n907), .Y(n902) );
  AOI22XL U682 ( .A0(q[21]), .A1(n908), .B0(q[29]), .B1(n907), .Y(n904) );
  AOI22XL U683 ( .A0(q[22]), .A1(n908), .B0(q[30]), .B1(n907), .Y(n906) );
  AOI22XL U684 ( .A0(q[23]), .A1(n908), .B0(q[31]), .B1(n907), .Y(n912) );
  AOI22XL U685 ( .A0(q[16]), .A1(n867), .B0(q[24]), .B1(n866), .Y(n853) );
  AOI22XL U686 ( .A0(q[0]), .A1(n869), .B0(q[8]), .B1(n868), .Y(n852) );
  AOI22XL U687 ( .A0(q[17]), .A1(n867), .B0(q[25]), .B1(n866), .Y(n855) );
  AOI22XL U688 ( .A0(q[1]), .A1(n869), .B0(q[9]), .B1(n868), .Y(n854) );
  AOI22XL U689 ( .A0(q[18]), .A1(n867), .B0(q[26]), .B1(n866), .Y(n857) );
  AOI22XL U690 ( .A0(q[2]), .A1(n869), .B0(q[10]), .B1(n868), .Y(n856) );
  AOI22XL U691 ( .A0(q[19]), .A1(n867), .B0(q[27]), .B1(n866), .Y(n859) );
  AOI22XL U692 ( .A0(q[3]), .A1(n869), .B0(q[11]), .B1(n868), .Y(n858) );
  AOI22XL U693 ( .A0(q[20]), .A1(n867), .B0(q[28]), .B1(n866), .Y(n861) );
  AOI22XL U694 ( .A0(q[4]), .A1(n869), .B0(q[12]), .B1(n868), .Y(n860) );
  AOI22XL U695 ( .A0(q[21]), .A1(n867), .B0(q[29]), .B1(n866), .Y(n863) );
  AOI22XL U696 ( .A0(q[5]), .A1(n869), .B0(q[13]), .B1(n868), .Y(n862) );
  AOI22XL U697 ( .A0(q[22]), .A1(n867), .B0(q[30]), .B1(n866), .Y(n865) );
  AOI22XL U698 ( .A0(q[6]), .A1(n869), .B0(q[14]), .B1(n868), .Y(n864) );
  AOI22XL U699 ( .A0(q[23]), .A1(n867), .B0(q[31]), .B1(n866), .Y(n871) );
  AOI22XL U700 ( .A0(q[7]), .A1(n869), .B0(q[15]), .B1(n868), .Y(n870) );
  AOI22XL U701 ( .A0(q[0]), .A1(n827), .B0(q[8]), .B1(n826), .Y(n810) );
  AOI22XL U702 ( .A0(q[16]), .A1(n825), .B0(q[24]), .B1(n824), .Y(n811) );
  AOI22XL U703 ( .A0(q[1]), .A1(n827), .B0(q[9]), .B1(n826), .Y(n812) );
  AOI22XL U704 ( .A0(q[17]), .A1(n825), .B0(q[25]), .B1(n824), .Y(n813) );
  AOI22XL U705 ( .A0(q[2]), .A1(n827), .B0(q[10]), .B1(n826), .Y(n814) );
  AOI22XL U706 ( .A0(q[18]), .A1(n825), .B0(q[26]), .B1(n824), .Y(n815) );
  AOI22XL U707 ( .A0(q[3]), .A1(n827), .B0(q[11]), .B1(n826), .Y(n816) );
  AOI22XL U708 ( .A0(q[19]), .A1(n825), .B0(q[27]), .B1(n824), .Y(n817) );
  AOI22XL U709 ( .A0(q[4]), .A1(n827), .B0(q[12]), .B1(n826), .Y(n818) );
  AOI22XL U710 ( .A0(q[20]), .A1(n825), .B0(q[28]), .B1(n824), .Y(n819) );
  AOI22XL U711 ( .A0(q[5]), .A1(n827), .B0(q[13]), .B1(n826), .Y(n820) );
  AOI22XL U712 ( .A0(q[21]), .A1(n825), .B0(q[29]), .B1(n824), .Y(n821) );
  AOI22XL U713 ( .A0(q[6]), .A1(n827), .B0(q[14]), .B1(n826), .Y(n822) );
  AOI22XL U714 ( .A0(q[22]), .A1(n825), .B0(q[30]), .B1(n824), .Y(n823) );
  AOI22XL U715 ( .A0(q[7]), .A1(n827), .B0(q[15]), .B1(n826), .Y(n828) );
  AOI22XL U716 ( .A0(q[23]), .A1(n825), .B0(q[31]), .B1(n824), .Y(n829) );
  NAND3XL U717 ( .A(n1064), .B(n1065), .C(n1055), .Y(n1058) );
  AOI32XL U718 ( .A0(n1047), .A1(n1048), .A2(n1030), .B0(n1023), .B1(n1049), 
        .Y(n1041) );
  NOR3XL U719 ( .A(n1023), .B(n1024), .C(n1025), .Y(n1021) );
  NOR4XL U720 ( .A(n1073), .B(n1074), .C(n1075), .D(n1065), .Y(n1072) );
  AOI22XL U721 ( .A0(q[0]), .A1(n848), .B0(q[8]), .B1(n847), .Y(n831) );
  AOI22XL U722 ( .A0(q[16]), .A1(n846), .B0(q[24]), .B1(n845), .Y(n832) );
  AOI22XL U723 ( .A0(q[1]), .A1(n848), .B0(q[9]), .B1(n847), .Y(n833) );
  AOI22XL U724 ( .A0(q[17]), .A1(n846), .B0(q[25]), .B1(n845), .Y(n834) );
  AOI22XL U725 ( .A0(q[2]), .A1(n848), .B0(q[10]), .B1(n847), .Y(n835) );
  AOI22XL U726 ( .A0(q[18]), .A1(n846), .B0(q[26]), .B1(n845), .Y(n836) );
  AOI22XL U727 ( .A0(q[3]), .A1(n848), .B0(q[11]), .B1(n847), .Y(n837) );
  AOI22XL U728 ( .A0(q[19]), .A1(n846), .B0(q[27]), .B1(n845), .Y(n838) );
  AOI22XL U729 ( .A0(q[4]), .A1(n848), .B0(q[12]), .B1(n847), .Y(n839) );
  AOI22XL U730 ( .A0(q[20]), .A1(n846), .B0(q[28]), .B1(n845), .Y(n840) );
  AOI22XL U731 ( .A0(q[5]), .A1(n848), .B0(q[13]), .B1(n847), .Y(n841) );
  AOI22XL U732 ( .A0(q[21]), .A1(n846), .B0(q[29]), .B1(n845), .Y(n842) );
  AOI22XL U733 ( .A0(q[6]), .A1(n848), .B0(q[14]), .B1(n847), .Y(n843) );
  AOI22XL U734 ( .A0(q[22]), .A1(n846), .B0(q[30]), .B1(n845), .Y(n844) );
  AOI22XL U735 ( .A0(q[7]), .A1(n848), .B0(q[15]), .B1(n847), .Y(n849) );
  AOI22XL U736 ( .A0(q[23]), .A1(n846), .B0(q[31]), .B1(n845), .Y(n850) );
  AOI22XL U737 ( .A0(q[0]), .A1(n890), .B0(q[8]), .B1(n889), .Y(n873) );
  AOI22XL U738 ( .A0(q[16]), .A1(n888), .B0(q[24]), .B1(n887), .Y(n874) );
  AOI22XL U739 ( .A0(q[1]), .A1(n890), .B0(q[9]), .B1(n889), .Y(n875) );
  AOI22XL U740 ( .A0(q[17]), .A1(n888), .B0(q[25]), .B1(n887), .Y(n876) );
  AOI22XL U741 ( .A0(q[2]), .A1(n890), .B0(q[10]), .B1(n889), .Y(n877) );
  AOI22XL U742 ( .A0(q[18]), .A1(n888), .B0(q[26]), .B1(n887), .Y(n878) );
  AOI22XL U743 ( .A0(q[3]), .A1(n890), .B0(q[11]), .B1(n889), .Y(n879) );
  AOI22XL U744 ( .A0(q[19]), .A1(n888), .B0(q[27]), .B1(n887), .Y(n880) );
  AOI22XL U745 ( .A0(q[4]), .A1(n890), .B0(q[12]), .B1(n889), .Y(n881) );
  AOI22XL U746 ( .A0(q[20]), .A1(n888), .B0(q[28]), .B1(n887), .Y(n882) );
  AOI22XL U747 ( .A0(q[5]), .A1(n890), .B0(q[13]), .B1(n889), .Y(n883) );
  AOI22XL U748 ( .A0(q[21]), .A1(n888), .B0(q[29]), .B1(n887), .Y(n884) );
  AOI22XL U749 ( .A0(q[6]), .A1(n890), .B0(q[14]), .B1(n889), .Y(n885) );
  AOI22XL U750 ( .A0(q[22]), .A1(n888), .B0(q[30]), .B1(n887), .Y(n886) );
  AOI22XL U751 ( .A0(q[7]), .A1(n890), .B0(q[15]), .B1(n889), .Y(n891) );
  AOI22XL U752 ( .A0(q[23]), .A1(n888), .B0(q[31]), .B1(n887), .Y(n892) );
  NOR3XL U753 ( .A(n1024), .B(state[1]), .C(n1023), .Y(n1035) );
  NAND3XL U754 ( .A(state[2]), .B(n1023), .C(state[1]), .Y(n1057) );
  NOR3XL U755 ( .A(state[1]), .B(state[3]), .C(n1023), .Y(n1037) );
  NAND2X2 U756 ( .A(n959), .B(n1030), .Y(n1083) );
  CLKBUFX3 U757 ( .A(n975), .Y(n974) );
  CLKBUFX3 U758 ( .A(n962), .Y(n964) );
  CLKBUFX3 U759 ( .A(n962), .Y(n965) );
  CLKBUFX3 U760 ( .A(n965), .Y(n963) );
  CLKBUFX3 U761 ( .A(n977), .Y(n976) );
  CLKBUFX3 U762 ( .A(n1165), .Y(n962) );
  CLKBUFX3 U763 ( .A(n1178), .Y(n955) );
  NAND2X1 U764 ( .A(n968), .B(n1170), .Y(n1178) );
  CLKBUFX3 U765 ( .A(n1173), .Y(n954) );
  NAND2X1 U766 ( .A(n966), .B(n1170), .Y(n1173) );
  CLKBUFX3 U767 ( .A(n969), .Y(n968) );
  CLKBUFX3 U768 ( .A(n768), .Y(n969) );
  NAND2X2 U769 ( .A(n1083), .B(n1093), .Y(n1084) );
  CLKBUFX3 U770 ( .A(n769), .Y(n977) );
  CLKBUFX3 U771 ( .A(n973), .Y(n972) );
  CLKBUFX3 U772 ( .A(n770), .Y(n979) );
  CLKBUFX3 U773 ( .A(n772), .Y(n978) );
  CLKBUFX3 U774 ( .A(n1182), .Y(n957) );
  NAND3X1 U775 ( .A(n1170), .B(n1160), .C(n970), .Y(n1182) );
  CLKBUFX3 U776 ( .A(n971), .Y(n970) );
  CLKBUFX3 U777 ( .A(n766), .Y(n971) );
  CLKBUFX3 U778 ( .A(n967), .Y(n966) );
  CLKBUFX3 U779 ( .A(n767), .Y(n967) );
  CLKBUFX3 U780 ( .A(n1185), .Y(n973) );
  CLKINVX1 U781 ( .A(N216), .Y(n872) );
  INVX3 U782 ( .A(n771), .Y(n981) );
  INVX3 U783 ( .A(n771), .Y(n982) );
  CLKBUFX3 U784 ( .A(n1133), .Y(n951) );
  OR2X1 U785 ( .A(n1029), .B(n952), .Y(n1133) );
  CLKBUFX3 U786 ( .A(n1132), .Y(n959) );
  INVXL U787 ( .A(n1065), .Y(n1132) );
  CLKBUFX3 U788 ( .A(n939), .Y(n948) );
  NOR2X1 U789 ( .A(n945), .B(n946), .Y(n939) );
  CLKBUFX3 U790 ( .A(n1168), .Y(n953) );
  NAND3X1 U791 ( .A(n962), .B(n1162), .C(n1170), .Y(n1168) );
  INVX3 U792 ( .A(n1068), .Y(n1030) );
  CLKINVX2 U793 ( .A(n1146), .Y(n1055) );
  INVXL U794 ( .A(N212), .Y(n830) );
  CLKBUFX3 U795 ( .A(n1190), .Y(n980) );
  CLKBUFX3 U796 ( .A(n1087), .Y(n956) );
  CLKINVX1 U797 ( .A(n1106), .Y(n1087) );
  NAND2X2 U798 ( .A(n1068), .B(n1146), .Y(n1040) );
  CLKBUFX3 U799 ( .A(n1078), .Y(n952) );
  CLKINVX1 U800 ( .A(n1039), .Y(n1078) );
  CLKBUFX3 U801 ( .A(n1017), .Y(n997) );
  CLKBUFX3 U802 ( .A(n1013), .Y(n998) );
  CLKBUFX3 U803 ( .A(n1013), .Y(n999) );
  CLKBUFX3 U804 ( .A(n1012), .Y(n1000) );
  CLKBUFX3 U805 ( .A(n1012), .Y(n1001) );
  CLKBUFX3 U806 ( .A(n1011), .Y(n1002) );
  CLKBUFX3 U807 ( .A(n1011), .Y(n1003) );
  CLKBUFX3 U808 ( .A(n1010), .Y(n1004) );
  CLKBUFX3 U809 ( .A(n1010), .Y(n1005) );
  CLKBUFX3 U810 ( .A(n1010), .Y(n1006) );
  CLKBUFX3 U811 ( .A(n1016), .Y(n1007) );
  CLKBUFX3 U812 ( .A(n1009), .Y(n1008) );
  CLKBUFX3 U813 ( .A(n1016), .Y(n984) );
  CLKBUFX3 U814 ( .A(n1016), .Y(n985) );
  CLKBUFX3 U815 ( .A(n1015), .Y(n986) );
  CLKBUFX3 U816 ( .A(n1015), .Y(n987) );
  CLKBUFX3 U817 ( .A(n1014), .Y(n988) );
  CLKBUFX3 U818 ( .A(n1014), .Y(n989) );
  CLKBUFX3 U819 ( .A(n1015), .Y(n990) );
  CLKBUFX3 U820 ( .A(n1014), .Y(n991) );
  CLKBUFX3 U821 ( .A(n1012), .Y(n992) );
  CLKBUFX3 U822 ( .A(n1017), .Y(n995) );
  CLKBUFX3 U823 ( .A(n1009), .Y(n996) );
  CLKBUFX3 U824 ( .A(n1013), .Y(n994) );
  CLKBUFX3 U825 ( .A(n1011), .Y(n993) );
  CLKBUFX3 U826 ( .A(n941), .Y(n950) );
  NOR2X1 U827 ( .A(n946), .B(N222), .Y(n941) );
  CLKBUFX3 U828 ( .A(n940), .Y(n947) );
  NOR2X1 U829 ( .A(n945), .B(N221), .Y(n940) );
  CLKBUFX3 U830 ( .A(n942), .Y(n949) );
  NOR2X1 U831 ( .A(N221), .B(N222), .Y(n942) );
  CLKBUFX3 U832 ( .A(N541), .Y(n960) );
  CLKBUFX3 U833 ( .A(origin_row[1]), .Y(n961) );
  ADDFXL U834 ( .A(x[81]), .B(N2244), .CI(
        add_2_root_add_0_root_add_370_9_carry_3_), .CO(
        add_2_root_add_0_root_add_370_9_carry_4_), .S(N2208) );
  ADDFXL U835 ( .A(x[41]), .B(N1910), .CI(
        add_2_root_add_0_root_add_364_9_carry_3_), .CO(
        add_2_root_add_0_root_add_364_9_carry_4_), .S(N1874) );
  ADDFXL U836 ( .A(x[82]), .B(N2245), .CI(
        add_2_root_add_0_root_add_370_9_carry_4_), .CO(
        add_2_root_add_0_root_add_370_9_carry_5_), .S(N2209) );
  ADDFXL U837 ( .A(x[83]), .B(N2246), .CI(
        add_2_root_add_0_root_add_370_9_carry_5_), .CO(
        add_2_root_add_0_root_add_370_9_carry_6_), .S(N2210) );
  ADDFXL U838 ( .A(x[84]), .B(N2247), .CI(
        add_2_root_add_0_root_add_370_9_carry_6_), .CO(
        add_2_root_add_0_root_add_370_9_carry_7_), .S(N2211) );
  ADDFXL U839 ( .A(x[85]), .B(N2248), .CI(
        add_2_root_add_0_root_add_370_9_carry_7_), .CO(
        add_2_root_add_0_root_add_370_9_carry_8_), .S(N2212) );
  ADDFXL U840 ( .A(x[86]), .B(N2249), .CI(
        add_2_root_add_0_root_add_370_9_carry_8_), .CO(
        add_2_root_add_0_root_add_370_9_carry_9_), .S(N2213) );
  ADDFXL U841 ( .A(x[87]), .B(N2250), .CI(
        add_2_root_add_0_root_add_370_9_carry_9_), .CO(N2215), .S(N2214) );
  ADDFXL U842 ( .A(x[42]), .B(N1911), .CI(
        add_2_root_add_0_root_add_364_9_carry_4_), .CO(
        add_2_root_add_0_root_add_364_9_carry_5_), .S(N1875) );
  ADDFXL U843 ( .A(x[43]), .B(N1912), .CI(
        add_2_root_add_0_root_add_364_9_carry_5_), .CO(
        add_2_root_add_0_root_add_364_9_carry_6_), .S(N1876) );
  ADDFXL U844 ( .A(x[44]), .B(N1913), .CI(
        add_2_root_add_0_root_add_364_9_carry_6_), .CO(
        add_2_root_add_0_root_add_364_9_carry_7_), .S(N1877) );
  ADDFXL U845 ( .A(x[46]), .B(N1915), .CI(
        add_2_root_add_0_root_add_364_9_carry_8_), .CO(
        add_2_root_add_0_root_add_364_9_carry_9_), .S(N1879) );
  ADDFXL U846 ( .A(x[47]), .B(N1916), .CI(
        add_2_root_add_0_root_add_364_9_carry_9_), .CO(N1881), .S(N1880) );
  ADDFXL U847 ( .A(x[45]), .B(N1914), .CI(
        add_2_root_add_0_root_add_364_9_carry_7_), .CO(
        add_2_root_add_0_root_add_364_9_carry_8_), .S(N1878) );
  ADDFXL U848 ( .A(x[49]), .B(N2021), .CI(
        add_2_root_add_0_root_add_365_9_carry_3_), .CO(
        add_2_root_add_0_root_add_365_9_carry_4_), .S(N1985) );
  ADDFXL U849 ( .A(x[73]), .B(N2133), .CI(
        add_2_root_add_0_root_add_369_9_carry_3_), .CO(
        add_2_root_add_0_root_add_369_9_carry_4_), .S(N2097) );
  ADDFXL U850 ( .A(x[50]), .B(N2022), .CI(
        add_2_root_add_0_root_add_365_9_carry_4_), .CO(
        add_2_root_add_0_root_add_365_9_carry_5_), .S(N1986) );
  ADDFXL U851 ( .A(x[51]), .B(N2023), .CI(
        add_2_root_add_0_root_add_365_9_carry_5_), .CO(
        add_2_root_add_0_root_add_365_9_carry_6_), .S(N1987) );
  ADDFXL U852 ( .A(x[52]), .B(N2024), .CI(
        add_2_root_add_0_root_add_365_9_carry_6_), .CO(
        add_2_root_add_0_root_add_365_9_carry_7_), .S(N1988) );
  ADDFXL U853 ( .A(x[53]), .B(N2025), .CI(
        add_2_root_add_0_root_add_365_9_carry_7_), .CO(
        add_2_root_add_0_root_add_365_9_carry_8_), .S(N1989) );
  ADDFXL U854 ( .A(x[54]), .B(N2026), .CI(
        add_2_root_add_0_root_add_365_9_carry_8_), .CO(
        add_2_root_add_0_root_add_365_9_carry_9_), .S(N1990) );
  ADDFXL U855 ( .A(x[55]), .B(N2027), .CI(
        add_2_root_add_0_root_add_365_9_carry_9_), .CO(N1992), .S(N1991) );
  ADDFXL U856 ( .A(x[74]), .B(N2134), .CI(
        add_2_root_add_0_root_add_369_9_carry_4_), .CO(
        add_2_root_add_0_root_add_369_9_carry_5_), .S(N2098) );
  ADDFXL U857 ( .A(x[75]), .B(N2135), .CI(
        add_2_root_add_0_root_add_369_9_carry_5_), .CO(
        add_2_root_add_0_root_add_369_9_carry_6_), .S(N2099) );
  ADDFXL U858 ( .A(x[76]), .B(N2136), .CI(
        add_2_root_add_0_root_add_369_9_carry_6_), .CO(
        add_2_root_add_0_root_add_369_9_carry_7_), .S(N2100) );
  ADDFXL U859 ( .A(x[77]), .B(N2137), .CI(
        add_2_root_add_0_root_add_369_9_carry_7_), .CO(
        add_2_root_add_0_root_add_369_9_carry_8_), .S(N2101) );
  ADDFXL U860 ( .A(x[78]), .B(N2138), .CI(
        add_2_root_add_0_root_add_369_9_carry_8_), .CO(
        add_2_root_add_0_root_add_369_9_carry_9_), .S(N2102) );
  ADDFXL U861 ( .A(x[79]), .B(N2139), .CI(
        add_2_root_add_0_root_add_369_9_carry_9_), .CO(N2104), .S(N2103) );
  NOR2X4 U862 ( .A(n299), .B(n304), .Y(n1086) );
  CLKBUFX3 U863 ( .A(n1085), .Y(n958) );
  NOR2BX1 U864 ( .AN(n299), .B(n304), .Y(n1085) );
  CLKBUFX3 U865 ( .A(n1017), .Y(n983) );
  CLKBUFX3 U866 ( .A(i_rst_n), .Y(n1017) );
  CLKBUFX3 U867 ( .A(i_rst_n), .Y(n1013) );
  CLKBUFX3 U868 ( .A(i_rst_n), .Y(n1012) );
  CLKBUFX3 U869 ( .A(i_rst_n), .Y(n1011) );
  CLKBUFX3 U870 ( .A(i_rst_n), .Y(n1010) );
  CLKBUFX3 U871 ( .A(i_rst_n), .Y(n1016) );
  CLKBUFX3 U872 ( .A(i_rst_n), .Y(n1015) );
  CLKBUFX3 U873 ( .A(i_rst_n), .Y(n1014) );
  CLKBUFX3 U874 ( .A(i_rst_n), .Y(n1009) );
  NAND2X1 U879 ( .A(n894), .B(n893), .Y(DIS_out_data[0]) );
  NAND2X1 U880 ( .A(n896), .B(n895), .Y(DIS_out_data[1]) );
  NAND2X1 U881 ( .A(n898), .B(n897), .Y(DIS_out_data[2]) );
  NAND2X1 U882 ( .A(n900), .B(n899), .Y(DIS_out_data[3]) );
  NAND2X1 U883 ( .A(n902), .B(n901), .Y(DIS_out_data[4]) );
  NAND2X1 U884 ( .A(n904), .B(n903), .Y(DIS_out_data[5]) );
  NAND2X1 U885 ( .A(n906), .B(n905), .Y(DIS_out_data[6]) );
  NAND2X1 U886 ( .A(n912), .B(n911), .Y(DIS_out_data[7]) );
  AOI22X1 U887 ( .A0(z[26]), .A1(n947), .B0(z[39]), .B1(n948), .Y(n916) );
  AOI22X1 U888 ( .A0(z[0]), .A1(n949), .B0(z[13]), .B1(n950), .Y(n915) );
  NAND2X1 U889 ( .A(n916), .B(n915), .Y(CONV_out_data[0]) );
  AOI22X1 U890 ( .A0(z[27]), .A1(n947), .B0(z[40]), .B1(n948), .Y(n918) );
  AOI22X1 U891 ( .A0(z[1]), .A1(n949), .B0(z[14]), .B1(n950), .Y(n917) );
  NAND2X1 U892 ( .A(n918), .B(n917), .Y(CONV_out_data[1]) );
  AOI22X1 U893 ( .A0(z[28]), .A1(n947), .B0(z[41]), .B1(n948), .Y(n920) );
  AOI22X1 U894 ( .A0(z[2]), .A1(n949), .B0(z[15]), .B1(n950), .Y(n919) );
  NAND2X1 U895 ( .A(n920), .B(n919), .Y(CONV_out_data[2]) );
  AOI22X1 U896 ( .A0(z[29]), .A1(n947), .B0(z[42]), .B1(n948), .Y(n922) );
  AOI22X1 U897 ( .A0(z[3]), .A1(n949), .B0(z[16]), .B1(n950), .Y(n921) );
  NAND2X1 U898 ( .A(n922), .B(n921), .Y(CONV_out_data[3]) );
  AOI22X1 U899 ( .A0(z[30]), .A1(n947), .B0(z[43]), .B1(n948), .Y(n924) );
  AOI22X1 U900 ( .A0(z[4]), .A1(n949), .B0(z[17]), .B1(n950), .Y(n923) );
  NAND2X1 U901 ( .A(n924), .B(n923), .Y(CONV_out_data[4]) );
  AOI22X1 U902 ( .A0(z[31]), .A1(n947), .B0(z[44]), .B1(n948), .Y(n926) );
  AOI22X1 U903 ( .A0(z[5]), .A1(n949), .B0(z[18]), .B1(n950), .Y(n925) );
  NAND2X1 U904 ( .A(n926), .B(n925), .Y(CONV_out_data[5]) );
  AOI22X1 U905 ( .A0(z[32]), .A1(n947), .B0(z[45]), .B1(n948), .Y(n928) );
  AOI22X1 U906 ( .A0(z[6]), .A1(n949), .B0(z[19]), .B1(n950), .Y(n927) );
  NAND2X1 U907 ( .A(n928), .B(n927), .Y(CONV_out_data[6]) );
  AOI22X1 U908 ( .A0(z[33]), .A1(n947), .B0(z[46]), .B1(n948), .Y(n930) );
  AOI22X1 U909 ( .A0(z[7]), .A1(n949), .B0(z[20]), .B1(n950), .Y(n929) );
  NAND2X1 U910 ( .A(n930), .B(n929), .Y(CONV_out_data[7]) );
  AOI22X1 U911 ( .A0(z[34]), .A1(n947), .B0(z[47]), .B1(n948), .Y(n932) );
  AOI22X1 U912 ( .A0(z[8]), .A1(n949), .B0(z[21]), .B1(n950), .Y(n931) );
  NAND2X1 U913 ( .A(n932), .B(n931), .Y(CONV_out_data[8]) );
  AOI22X1 U914 ( .A0(z[35]), .A1(n947), .B0(z[48]), .B1(n948), .Y(n934) );
  AOI22X1 U915 ( .A0(z[9]), .A1(n949), .B0(z[22]), .B1(n950), .Y(n933) );
  NAND2X1 U916 ( .A(n934), .B(n933), .Y(CONV_out_data[9]) );
  AOI22X1 U917 ( .A0(z[36]), .A1(n947), .B0(z[49]), .B1(n948), .Y(n936) );
  AOI22X1 U918 ( .A0(z[10]), .A1(n949), .B0(z[23]), .B1(n950), .Y(n935) );
  NAND2X1 U919 ( .A(n936), .B(n935), .Y(CONV_out_data[10]) );
  AOI22X1 U920 ( .A0(z[37]), .A1(n947), .B0(z[50]), .B1(n948), .Y(n938) );
  AOI22X1 U921 ( .A0(z[11]), .A1(n949), .B0(z[24]), .B1(n950), .Y(n937) );
  NAND2X1 U922 ( .A(n938), .B(n937), .Y(CONV_out_data[11]) );
  AOI22X1 U923 ( .A0(z[38]), .A1(n947), .B0(z[51]), .B1(n948), .Y(n944) );
  AOI22X1 U924 ( .A0(z[12]), .A1(n949), .B0(z[25]), .B1(n950), .Y(n943) );
  NAND2X1 U925 ( .A(n944), .B(n943), .Y(CONV_out_data[12]) );
  AND2X1 U926 ( .A(x[40]), .B(N1909), .Y(
        add_2_root_add_0_root_add_364_9_carry_3_) );
  XOR2X1 U927 ( .A(N1909), .B(n807), .Y(N1873) );
  AND2X1 U928 ( .A(x[48]), .B(N2020), .Y(
        add_2_root_add_0_root_add_365_9_carry_3_) );
  XOR2X1 U929 ( .A(N2020), .B(x[48]), .Y(N1984) );
  AND2X1 U930 ( .A(x[72]), .B(N2132), .Y(
        add_2_root_add_0_root_add_369_9_carry_3_) );
  XOR2X1 U931 ( .A(N2132), .B(x[72]), .Y(N2096) );
  AND2X1 U932 ( .A(x[80]), .B(N2243), .Y(
        add_2_root_add_0_root_add_370_9_carry_3_) );
  XOR2X1 U933 ( .A(N2243), .B(x[80]), .Y(N2207) );
  XOR2X1 U934 ( .A(counter_256[6]), .B(r795_carry[10]), .Y(N551) );
  AND2X1 U935 ( .A(r795_carry[9]), .B(counter_256[5]), .Y(r795_carry[10]) );
  XOR2X1 U936 ( .A(counter_256[5]), .B(r795_carry[9]), .Y(N550) );
  AND2X1 U937 ( .A(r795_carry[8]), .B(counter_256[4]), .Y(r795_carry[9]) );
  XOR2X1 U938 ( .A(counter_256[4]), .B(r795_carry[8]), .Y(N549) );
  AND2X1 U939 ( .A(r795_carry[7]), .B(counter_256[3]), .Y(r795_carry[8]) );
  XOR2X1 U940 ( .A(counter_256[3]), .B(r795_carry[7]), .Y(N548) );
  AND2X1 U941 ( .A(r795_carry[6]), .B(n809), .Y(r795_carry[7]) );
  XOR2X1 U942 ( .A(counter_256[2]), .B(r795_carry[6]), .Y(N547) );
  AND2X1 U943 ( .A(r795_carry[5]), .B(origin_row[2]), .Y(r795_carry[6]) );
  AND2X1 U944 ( .A(conv_row_3__0_), .B(n961), .Y(r795_carry[5]) );
  XOR2X1 U945 ( .A(n961), .B(conv_row_3__0_), .Y(N545) );
  XOR2X1 U946 ( .A(counter_256[6]), .B(r796_carry_10_), .Y(N595) );
  AND2X1 U947 ( .A(r796_carry_9_), .B(counter_256[5]), .Y(r796_carry_10_) );
  XOR2X1 U948 ( .A(counter_256[5]), .B(r796_carry_9_), .Y(N594) );
  AND2X1 U949 ( .A(r796_carry_8_), .B(counter_256[4]), .Y(r796_carry_9_) );
  XOR2X1 U950 ( .A(n1203), .B(r796_carry_8_), .Y(N593) );
  AND2X1 U951 ( .A(r796_carry_7_), .B(counter_256[3]), .Y(r796_carry_8_) );
  XOR2X1 U952 ( .A(n1195), .B(r796_carry_7_), .Y(N592) );
  AND2X1 U953 ( .A(r796_carry_6_), .B(counter_256[2]), .Y(r796_carry_7_) );
  XOR2X1 U954 ( .A(n809), .B(r796_carry_6_), .Y(N591) );
  AND2X1 U955 ( .A(r796_carry_5_), .B(origin_row[2]), .Y(r796_carry_6_) );
  AND2X1 U956 ( .A(r796_carry_4_), .B(n961), .Y(r796_carry_5_) );
  XOR2X1 U957 ( .A(n961), .B(r796_carry_4_), .Y(N589) );
  OR2X1 U958 ( .A(conv_row_3__0_), .B(r796_carry_3_), .Y(r796_carry_4_) );
  XNOR2X1 U959 ( .A(r796_carry_3_), .B(conv_row_3__0_), .Y(N588) );
  AND2X1 U960 ( .A(r796_carry_2_), .B(N543), .Y(r796_carry_3_) );
  XOR2X1 U961 ( .A(N543), .B(r796_carry_2_), .Y(N587) );
  AND2X1 U962 ( .A(n960), .B(N542), .Y(r796_carry_2_) );
  XOR2X1 U963 ( .A(N542), .B(n960), .Y(N586) );
  OR2X1 U964 ( .A(N316), .B(N317), .Y(n1018) );
  OAI2BB1X1 U965 ( .A0N(N316), .A1N(N317), .B0(n1018), .Y(N306) );
  NOR2X1 U966 ( .A(n1018), .B(N318), .Y(N308) );
  AO21X1 U967 ( .A0(n1018), .A1(N318), .B0(N308), .Y(N307) );
  CLKINVX1 U968 ( .A(n960), .Y(N585) );
  NAND2X1 U969 ( .A(n1019), .B(n1020), .Y(state_nxt[3]) );
  MXI2X1 U970 ( .A(n1021), .B(n1022), .S0(state[3]), .Y(n1019) );
  NOR3X1 U971 ( .A(n806), .B(n1028), .C(n1029), .Y(n1027) );
  AOI211X1 U972 ( .A0(n1030), .A1(n1031), .B0(n1032), .C0(n1033), .Y(n1020) );
  CLKINVX1 U973 ( .A(n1034), .Y(n1033) );
  AOI211X1 U974 ( .A0(n1035), .A1(state[3]), .B0(n981), .C0(n1036), .Y(n1034)
         );
  NOR2X1 U975 ( .A(n1037), .B(n1022), .Y(n1026) );
  NAND2X1 U976 ( .A(n1038), .B(n1039), .Y(n1022) );
  CLKINVX1 U977 ( .A(n1040), .Y(n1038) );
  OAI211X1 U978 ( .A0(n1041), .A1(n1025), .B0(n1042), .C0(n1043), .Y(
        state_nxt[1]) );
  AOI211X1 U979 ( .A0(n1044), .A1(n1045), .B0(n1037), .C0(n1035), .Y(n1043) );
  NAND4X1 U980 ( .A(n1050), .B(n1042), .C(n1051), .D(n1052), .Y(state_nxt[0])
         );
  NOR2X1 U981 ( .A(n1036), .B(n806), .Y(n1051) );
  AOI211X1 U982 ( .A0(n1055), .A1(n1056), .B0(n1028), .C0(n1032), .Y(n1042) );
  OAI211X1 U983 ( .A0(n1049), .A1(n1057), .B0(n1058), .C0(n1059), .Y(n1032) );
  NAND4X1 U984 ( .A(n1060), .B(n1061), .C(n1062), .D(n1063), .Y(n1059) );
  NOR3X1 U985 ( .A(n470), .B(n472), .C(n471), .Y(n1063) );
  NOR3X1 U986 ( .A(n467), .B(n469), .C(n468), .Y(n1062) );
  NOR3X1 U987 ( .A(n464), .B(n466), .C(n465), .Y(n1061) );
  NOR3X1 U988 ( .A(n1039), .B(n463), .C(n462), .Y(n1060) );
  CLKINVX1 U989 ( .A(n1057), .Y(n1028) );
  MXI2X1 U990 ( .A(n1066), .B(n1067), .S0(state[0]), .Y(n1050) );
  NOR3BXL U991 ( .AN(n1048), .B(n1068), .C(n1031), .Y(n1067) );
  CLKINVX1 U992 ( .A(n1047), .Y(n1031) );
  NAND4X1 U993 ( .A(n1069), .B(n1070), .C(n1071), .D(n1072), .Y(n1047) );
  XOR2X1 U994 ( .A(counter_256[7]), .B(N307), .Y(n1074) );
  XOR2X1 U995 ( .A(counter_256[6]), .B(N306), .Y(n1073) );
  NOR3X1 U996 ( .A(n1076), .B(N308), .C(n1077), .Y(n1071) );
  XOR2X1 U997 ( .A(n474), .B(N305), .Y(n1069) );
  NAND3X1 U998 ( .A(sram_addr[0]), .B(n1080), .C(n952), .Y(sram_wen_1) );
  NAND3X1 U999 ( .A(n1079), .B(n1080), .C(n952), .Y(sram_wen_0) );
  CLKINVX1 U1000 ( .A(sram_addr[1]), .Y(n1080) );
  AOI222XL U1001 ( .A0(N506), .A1(n958), .B0(N594), .B1(n1086), .C0(N550), 
        .C1(n956), .Y(n1082) );
  AOI222XL U1002 ( .A0(N505), .A1(n958), .B0(N593), .B1(n1086), .C0(N549), 
        .C1(n956), .Y(n1088) );
  AOI222XL U1003 ( .A0(N504), .A1(n958), .B0(N592), .B1(n1086), .C0(N548), 
        .C1(n956), .Y(n1089) );
  AOI222XL U1004 ( .A0(N503), .A1(n958), .B0(N591), .B1(n1086), .C0(N547), 
        .C1(n956), .Y(n1090) );
  OA22X1 U1005 ( .A0(n1095), .A1(n1096), .B0(n1084), .B1(n467), .Y(n1094) );
  AOI222XL U1006 ( .A0(n956), .A1(n1097), .B0(n1086), .B1(n1098), .C0(n1099), 
        .C1(n1100), .Y(n1092) );
  AOI222XL U1007 ( .A0(N502), .A1(n958), .B0(N590), .B1(n1086), .C0(N546), 
        .C1(n956), .Y(n1091) );
  OA22X1 U1008 ( .A0(n805), .A1(n1096), .B0(n1084), .B1(n468), .Y(n1103) );
  AOI2BB1X1 U1009 ( .A0N(n961), .A1N(n1075), .B0(n1104), .Y(n1102) );
  MXI2X1 U1010 ( .A(n1105), .B(n1106), .S0(n1107), .Y(n1104) );
  AOI222XL U1011 ( .A0(N501), .A1(n958), .B0(N589), .B1(n1086), .C0(N545), 
        .C1(n956), .Y(n1101) );
  MXI2X1 U1012 ( .A(n1110), .B(n1111), .S0(N544), .Y(n1109) );
  OAI21XL U1013 ( .A0(n1075), .A1(n1093), .B0(n1096), .Y(n1110) );
  NOR2BX1 U1014 ( .AN(n1112), .B(n1113), .Y(n1096) );
  CLKINVX1 U1015 ( .A(n1086), .Y(n1075) );
  AOI222XL U1016 ( .A0(N500), .A1(n958), .B0(N588), .B1(n1086), .C0(N544), 
        .C1(n956), .Y(n1108) );
  OAI21XL U1017 ( .A0(n1114), .A1(n1093), .B0(n1115), .Y(sram_addr[5]) );
  AOI222XL U1018 ( .A0(N507), .A1(n958), .B0(N595), .B1(n1086), .C0(N551), 
        .C1(n956), .Y(n1116) );
  NOR2BX1 U1019 ( .AN(n1112), .B(n1117), .Y(n1081) );
  OAI221XL U1020 ( .A0(n1119), .A1(n1114), .B0(n1120), .B1(n1121), .C0(n1122), 
        .Y(n1118) );
  CLKINVX1 U1021 ( .A(n1123), .Y(n1114) );
  OAI21XL U1022 ( .A0(n1093), .A1(n1120), .B0(n1115), .Y(sram_addr[2]) );
  OA22X1 U1023 ( .A0(n470), .A1(n1084), .B0(n1125), .B1(n1083), .Y(n1115) );
  AOI221XL U1024 ( .A0(N587), .A1(n1086), .B0(N543), .B1(n956), .C0(n1126), 
        .Y(n1125) );
  OAI2BB2XL U1025 ( .B0(n1105), .B1(n1127), .A0N(N499), .A1N(n958), .Y(n1126)
         );
  XOR2X1 U1026 ( .A(N542), .B(n1127), .Y(n1120) );
  AOI222XL U1027 ( .A0(N498), .A1(n958), .B0(N586), .B1(n1086), .C0(N542), 
        .C1(n956), .Y(n1128) );
  AOI222XL U1028 ( .A0(N497), .A1(n958), .B0(N585), .B1(n1086), .C0(n960), 
        .C1(n956), .Y(n1129) );
  NAND2X1 U1029 ( .A(n1099), .B(n461), .Y(n1112) );
  AO21X1 U1030 ( .A0(n1130), .A1(n1066), .B0(n806), .Y(op_ready_nxt) );
  AND2X1 U1031 ( .A(CONV_out_data[9]), .B(n1065), .Y(o_out_data[9]) );
  AND2X1 U1032 ( .A(CONV_out_data[8]), .B(n1065), .Y(o_out_data[8]) );
  CLKMX2X2 U1033 ( .A(CONV_out_data[7]), .B(DIS_out_data[7]), .S0(n959), .Y(
        o_out_data[7]) );
  CLKMX2X2 U1034 ( .A(CONV_out_data[6]), .B(DIS_out_data[6]), .S0(n959), .Y(
        o_out_data[6]) );
  CLKMX2X2 U1035 ( .A(CONV_out_data[5]), .B(DIS_out_data[5]), .S0(n959), .Y(
        o_out_data[5]) );
  CLKMX2X2 U1036 ( .A(CONV_out_data[4]), .B(DIS_out_data[4]), .S0(n959), .Y(
        o_out_data[4]) );
  CLKMX2X2 U1037 ( .A(CONV_out_data[3]), .B(DIS_out_data[3]), .S0(n959), .Y(
        o_out_data[3]) );
  CLKMX2X2 U1038 ( .A(CONV_out_data[2]), .B(DIS_out_data[2]), .S0(n959), .Y(
        o_out_data[2]) );
  CLKMX2X2 U1039 ( .A(CONV_out_data[1]), .B(DIS_out_data[1]), .S0(n959), .Y(
        o_out_data[1]) );
  AND2X1 U1040 ( .A(CONV_out_data[12]), .B(n1065), .Y(o_out_data[12]) );
  AND2X1 U1041 ( .A(CONV_out_data[11]), .B(n1065), .Y(o_out_data[11]) );
  AND2X1 U1042 ( .A(CONV_out_data[10]), .B(n1065), .Y(o_out_data[10]) );
  CLKMX2X2 U1043 ( .A(CONV_out_data[0]), .B(DIS_out_data[0]), .S0(n959), .Y(
        o_out_data[0]) );
  OAI2BB2XL U1044 ( .B0(n472), .B1(n951), .A0N(N410), .A1N(n952), .Y(n764) );
  OAI2BB2XL U1045 ( .B0(n471), .B1(n951), .A0N(N411), .A1N(n952), .Y(n763) );
  OAI2BB2XL U1046 ( .B0(n470), .B1(n951), .A0N(N412), .A1N(n952), .Y(n762) );
  OAI2BB2XL U1047 ( .B0(n469), .B1(n951), .A0N(N413), .A1N(n952), .Y(n761) );
  OAI2BB2XL U1048 ( .B0(n468), .B1(n951), .A0N(N414), .A1N(n952), .Y(n760) );
  OAI2BB2XL U1049 ( .B0(n467), .B1(n951), .A0N(N415), .A1N(n952), .Y(n759) );
  OAI2BB2XL U1050 ( .B0(n466), .B1(n951), .A0N(N416), .A1N(n952), .Y(n758) );
  OAI2BB2XL U1051 ( .B0(n465), .B1(n951), .A0N(N417), .A1N(n952), .Y(n757) );
  OAI2BB2XL U1052 ( .B0(n464), .B1(n951), .A0N(N418), .A1N(n952), .Y(n756) );
  OAI2BB2XL U1053 ( .B0(n463), .B1(n951), .A0N(N419), .A1N(n952), .Y(n755) );
  OAI2BB2XL U1054 ( .B0(n462), .B1(n951), .A0N(N420), .A1N(n952), .Y(n754) );
  NAND3X1 U1055 ( .A(n1130), .B(n1049), .C(state[2]), .Y(n1039) );
  NOR3BXL U1056 ( .AN(n1066), .B(n1023), .C(n1025), .Y(n1029) );
  NOR2X1 U1057 ( .A(state[2]), .B(state[3]), .Y(n1066) );
  OAI21XL U1058 ( .A0(n1208), .A1(n1134), .B0(n1135), .Y(n752) );
  MXI2X1 U1059 ( .A(n480), .B(n1208), .S0(n806), .Y(n751) );
  OAI21XL U1060 ( .A0(n1207), .A1(n1134), .B0(n1136), .Y(n750) );
  MXI2X1 U1061 ( .A(n481), .B(n1207), .S0(n806), .Y(n749) );
  OAI21XL U1062 ( .A0(n1206), .A1(n1134), .B0(n1137), .Y(n748) );
  NAND3X1 U1063 ( .A(n1137), .B(n1135), .C(n1136), .Y(n1134) );
  NAND3X1 U1064 ( .A(n1055), .B(n1138), .C(n1139), .Y(n1136) );
  MXI2X1 U1065 ( .A(n1140), .B(n1141), .S0(op[1]), .Y(n1139) );
  NAND2X1 U1066 ( .A(n1056), .B(n1142), .Y(n1141) );
  NOR3BXL U1067 ( .AN(n1053), .B(n482), .C(N318), .Y(n1056) );
  NAND3X1 U1068 ( .A(op[1]), .B(n1142), .C(n1143), .Y(n1135) );
  NAND3X1 U1069 ( .A(op[0]), .B(n1144), .C(n1143), .Y(n1137) );
  AND2X1 U1070 ( .A(n482), .B(n1055), .Y(n1046) );
  MXI2X1 U1071 ( .A(n482), .B(n1206), .S0(n806), .Y(n747) );
  OAI2BB2XL U1072 ( .B0(n304), .B1(n1040), .A0N(N436), .A1N(n1030), .Y(n745)
         );
  OAI2BB2XL U1073 ( .B0(n299), .B1(n1040), .A0N(N437), .A1N(n1030), .Y(n744)
         );
  OAI2BB2XL U1074 ( .B0(n477), .B1(n1040), .A0N(N438), .A1N(n1030), .Y(n743)
         );
  OAI2BB2XL U1075 ( .B0(n476), .B1(n1040), .A0N(N439), .A1N(n1030), .Y(n742)
         );
  OAI2BB2XL U1076 ( .B0(n475), .B1(n1040), .A0N(N440), .A1N(n1030), .Y(n741)
         );
  OAI2BB2XL U1077 ( .B0(n474), .B1(n1040), .A0N(N441), .A1N(n1030), .Y(n740)
         );
  OAI2BB2XL U1078 ( .B0(n473), .B1(n1040), .A0N(N442), .A1N(n1030), .Y(n739)
         );
  OAI2BB2XL U1079 ( .B0(n451), .B1(n1040), .A0N(N443), .A1N(n1030), .Y(n738)
         );
  MXI2X1 U1080 ( .A(n1127), .B(n1148), .S0(n1147), .Y(n736) );
  AOI22X1 U1081 ( .A0(n1149), .A1(n1124), .B0(n1123), .B1(n1150), .Y(n1148) );
  OAI21XL U1082 ( .A0(n1151), .A1(n1127), .B0(n1152), .Y(n1123) );
  XNOR2X1 U1083 ( .A(n1153), .B(N543), .Y(n1124) );
  NAND2X1 U1084 ( .A(n960), .B(N542), .Y(n1153) );
  MXI2X1 U1085 ( .A(n1095), .B(n1154), .S0(n1155), .Y(n735) );
  AOI22X1 U1086 ( .A0(n1156), .A1(n1100), .B0(n1157), .B1(n1097), .Y(n1154) );
  XOR2X1 U1087 ( .A(n1158), .B(n1095), .Y(n1097) );
  NAND2X1 U1088 ( .A(n961), .B(conv_row_3__0_), .Y(n1158) );
  OAI21XL U1089 ( .A0(n1159), .A1(n1095), .B0(n1160), .Y(n1100) );
  XOR2X1 U1090 ( .A(conv_row_3__0_), .B(n1155), .Y(n734) );
  MXI2X1 U1091 ( .A(n805), .B(n1161), .S0(n1155), .Y(n733) );
  AOI2BB1X1 U1092 ( .A0N(n1156), .A1N(n1157), .B0(n1146), .Y(n1155) );
  MXI2X1 U1093 ( .A(n1156), .B(n1157), .S0(n1107), .Y(n1161) );
  AOI21X1 U1094 ( .A0(conv_row_3__0_), .A1(n961), .B0(n1159), .Y(n1107) );
  AND4X1 U1095 ( .A(n1138), .B(n1162), .C(n1142), .D(n1144), .Y(n1157) );
  AND4X1 U1096 ( .A(n1163), .B(op[1]), .C(op[0]), .D(n1160), .Y(n1156) );
  MXI2X1 U1097 ( .A(n851), .B(n1164), .S0(n1147), .Y(n732) );
  AOI2BB1X1 U1098 ( .A0N(n1150), .A1N(n1149), .B0(n1146), .Y(n1147) );
  MXI2X1 U1099 ( .A(n1150), .B(n1149), .S0(N216), .Y(n1164) );
  NOR2X1 U1100 ( .A(op[3]), .B(op[2]), .Y(n1163) );
  OAI22XL U1101 ( .A0(n962), .A1(n1404), .B0(n1166), .B1(n797), .Y(n731) );
  OAI22XL U1102 ( .A0(n965), .A1(n1403), .B0(n1166), .B1(n798), .Y(n730) );
  OAI22XL U1103 ( .A0(n965), .A1(n1402), .B0(n1166), .B1(n799), .Y(n729) );
  OAI22XL U1104 ( .A0(n963), .A1(n1401), .B0(n1166), .B1(n800), .Y(n728) );
  OAI22XL U1105 ( .A0(n965), .A1(n1400), .B0(n1166), .B1(n801), .Y(n727) );
  OAI22XL U1106 ( .A0(n965), .A1(n1399), .B0(n1166), .B1(n802), .Y(n726) );
  OAI22XL U1107 ( .A0(n965), .A1(n1398), .B0(n1166), .B1(n803), .Y(n725) );
  OAI22XL U1108 ( .A0(n964), .A1(n1397), .B0(n1166), .B1(n804), .Y(n724) );
  OAI22XL U1109 ( .A0(n964), .A1(n1396), .B0(n953), .B1(n773), .Y(n723) );
  OAI22XL U1110 ( .A0(n964), .A1(n1395), .B0(n953), .B1(n774), .Y(n722) );
  OAI22XL U1111 ( .A0(n964), .A1(n1394), .B0(n953), .B1(n775), .Y(n721) );
  OAI22XL U1112 ( .A0(n964), .A1(n1393), .B0(n953), .B1(n776), .Y(n720) );
  OAI22XL U1113 ( .A0(n964), .A1(n1392), .B0(n953), .B1(n777), .Y(n719) );
  OAI22XL U1114 ( .A0(n963), .A1(n1391), .B0(n953), .B1(n778), .Y(n718) );
  OAI22XL U1115 ( .A0(n963), .A1(n1390), .B0(n953), .B1(n779), .Y(n717) );
  OAI22XL U1116 ( .A0(n963), .A1(n1389), .B0(n953), .B1(n780), .Y(n716) );
  OAI22XL U1117 ( .A0(n963), .A1(n1388), .B0(n953), .B1(n789), .Y(n715) );
  OAI22XL U1118 ( .A0(n963), .A1(n1387), .B0(n953), .B1(n790), .Y(n714) );
  OAI22XL U1119 ( .A0(n964), .A1(n1386), .B0(n953), .B1(n791), .Y(n713) );
  OAI22XL U1120 ( .A0(n963), .A1(n1385), .B0(n953), .B1(n792), .Y(n712) );
  OAI22XL U1121 ( .A0(n963), .A1(n1384), .B0(n953), .B1(n793), .Y(n711) );
  OAI22XL U1122 ( .A0(n963), .A1(n1383), .B0(n953), .B1(n794), .Y(n710) );
  OAI22XL U1123 ( .A0(n963), .A1(n1382), .B0(n953), .B1(n795), .Y(n709) );
  OAI22XL U1124 ( .A0(n963), .A1(n1381), .B0(n953), .B1(n796), .Y(n708) );
  OAI22XL U1125 ( .A0(n963), .A1(n1380), .B0(n1169), .B1(n781), .Y(n707) );
  OAI22XL U1126 ( .A0(n963), .A1(n1379), .B0(n1169), .B1(n782), .Y(n706) );
  OAI22XL U1127 ( .A0(n963), .A1(n1378), .B0(n1169), .B1(n783), .Y(n705) );
  OAI22XL U1128 ( .A0(n964), .A1(n1377), .B0(n1169), .B1(n784), .Y(n704) );
  OAI22XL U1129 ( .A0(n964), .A1(n1376), .B0(n1169), .B1(n785), .Y(n703) );
  OAI22XL U1130 ( .A0(n964), .A1(n1375), .B0(n1169), .B1(n786), .Y(n702) );
  OAI22XL U1131 ( .A0(n964), .A1(n1374), .B0(n1169), .B1(n787), .Y(n701) );
  OAI22XL U1132 ( .A0(n964), .A1(n1373), .B0(n1169), .B1(n788), .Y(n700) );
  CLKINVX1 U1133 ( .A(n953), .Y(n1167) );
  NAND3X1 U1134 ( .A(n961), .B(origin_row[2]), .C(N544), .Y(n1162) );
  OAI22XL U1135 ( .A0(n967), .A1(n1372), .B0(n797), .B1(n1171), .Y(n699) );
  OAI22XL U1136 ( .A0(n967), .A1(n1371), .B0(n798), .B1(n1171), .Y(n698) );
  OAI22XL U1137 ( .A0(n967), .A1(n1370), .B0(n799), .B1(n1171), .Y(n697) );
  OAI22XL U1138 ( .A0(n967), .A1(n1369), .B0(n800), .B1(n1171), .Y(n696) );
  OAI22XL U1139 ( .A0(n967), .A1(n1368), .B0(n801), .B1(n1171), .Y(n695) );
  OAI22XL U1140 ( .A0(n967), .A1(n1367), .B0(n802), .B1(n1171), .Y(n694) );
  OAI22XL U1141 ( .A0(n967), .A1(n1366), .B0(n803), .B1(n1171), .Y(n693) );
  OAI22XL U1142 ( .A0(n967), .A1(n1365), .B0(n804), .B1(n1171), .Y(n692) );
  OAI22XL U1143 ( .A0(n966), .A1(n1364), .B0(n773), .B1(n954), .Y(n691) );
  OAI22XL U1144 ( .A0(n967), .A1(n1363), .B0(n774), .B1(n954), .Y(n690) );
  OAI22XL U1145 ( .A0(n967), .A1(n1362), .B0(n775), .B1(n954), .Y(n689) );
  OAI22XL U1146 ( .A0(n967), .A1(n1361), .B0(n776), .B1(n954), .Y(n688) );
  OAI22XL U1147 ( .A0(n767), .A1(n1360), .B0(n777), .B1(n954), .Y(n687) );
  OAI22XL U1148 ( .A0(n767), .A1(n1359), .B0(n778), .B1(n954), .Y(n686) );
  OAI22XL U1149 ( .A0(n767), .A1(n1358), .B0(n779), .B1(n954), .Y(n685) );
  OAI22XL U1150 ( .A0(n967), .A1(n1357), .B0(n780), .B1(n954), .Y(n684) );
  OAI22XL U1151 ( .A0(n767), .A1(n1356), .B0(n789), .B1(n954), .Y(n683) );
  OAI22XL U1152 ( .A0(n767), .A1(n1355), .B0(n790), .B1(n954), .Y(n682) );
  OAI22XL U1153 ( .A0(n767), .A1(n1354), .B0(n791), .B1(n954), .Y(n681) );
  OAI22XL U1154 ( .A0(n967), .A1(n1353), .B0(n792), .B1(n954), .Y(n680) );
  OAI22XL U1155 ( .A0(n966), .A1(n1352), .B0(n793), .B1(n954), .Y(n679) );
  OAI22XL U1156 ( .A0(n966), .A1(n1351), .B0(n794), .B1(n954), .Y(n678) );
  OAI22XL U1157 ( .A0(n966), .A1(n1350), .B0(n795), .B1(n954), .Y(n677) );
  OAI22XL U1158 ( .A0(n966), .A1(n1349), .B0(n796), .B1(n954), .Y(n676) );
  OAI22XL U1159 ( .A0(n966), .A1(n1348), .B0(n781), .B1(n1174), .Y(n675) );
  OAI22XL U1160 ( .A0(n966), .A1(n1347), .B0(n782), .B1(n1174), .Y(n674) );
  OAI22XL U1161 ( .A0(n966), .A1(n1346), .B0(n783), .B1(n1174), .Y(n673) );
  OAI22XL U1162 ( .A0(n966), .A1(n1345), .B0(n784), .B1(n1174), .Y(n672) );
  OAI22XL U1163 ( .A0(n966), .A1(n1344), .B0(n785), .B1(n1174), .Y(n671) );
  OAI22XL U1164 ( .A0(n966), .A1(n1343), .B0(n786), .B1(n1174), .Y(n670) );
  OAI22XL U1165 ( .A0(n966), .A1(n1342), .B0(n787), .B1(n1174), .Y(n669) );
  OAI22XL U1166 ( .A0(n966), .A1(n1341), .B0(n788), .B1(n1174), .Y(n668) );
  CLKINVX1 U1167 ( .A(n954), .Y(n1172) );
  OAI22XL U1168 ( .A0(n969), .A1(n1340), .B0(n797), .B1(n1176), .Y(n667) );
  OAI22XL U1169 ( .A0(n969), .A1(n1339), .B0(n798), .B1(n1176), .Y(n666) );
  OAI22XL U1170 ( .A0(n969), .A1(n1338), .B0(n799), .B1(n1176), .Y(n665) );
  OAI22XL U1171 ( .A0(n969), .A1(n1337), .B0(n800), .B1(n1176), .Y(n664) );
  OAI22XL U1172 ( .A0(n969), .A1(n1336), .B0(n801), .B1(n1176), .Y(n663) );
  OAI22XL U1173 ( .A0(n969), .A1(n1335), .B0(n802), .B1(n1176), .Y(n662) );
  OAI22XL U1174 ( .A0(n969), .A1(n1334), .B0(n803), .B1(n1176), .Y(n661) );
  OAI22XL U1175 ( .A0(n969), .A1(n1333), .B0(n804), .B1(n1176), .Y(n660) );
  OAI22XL U1176 ( .A0(n968), .A1(n1332), .B0(n773), .B1(n955), .Y(n659) );
  OAI22XL U1177 ( .A0(n969), .A1(n1331), .B0(n774), .B1(n955), .Y(n658) );
  OAI22XL U1178 ( .A0(n969), .A1(n1330), .B0(n775), .B1(n955), .Y(n657) );
  OAI22XL U1179 ( .A0(n969), .A1(n1329), .B0(n776), .B1(n955), .Y(n656) );
  OAI22XL U1180 ( .A0(n768), .A1(n1328), .B0(n777), .B1(n955), .Y(n655) );
  OAI22XL U1181 ( .A0(n768), .A1(n1327), .B0(n778), .B1(n955), .Y(n654) );
  OAI22XL U1182 ( .A0(n768), .A1(n1326), .B0(n779), .B1(n955), .Y(n653) );
  OAI22XL U1183 ( .A0(n768), .A1(n1325), .B0(n780), .B1(n955), .Y(n652) );
  OAI22XL U1184 ( .A0(n768), .A1(n1324), .B0(n789), .B1(n955), .Y(n651) );
  OAI22XL U1185 ( .A0(n768), .A1(n1323), .B0(n790), .B1(n955), .Y(n650) );
  OAI22XL U1186 ( .A0(n969), .A1(n1322), .B0(n791), .B1(n955), .Y(n649) );
  OAI22XL U1187 ( .A0(n969), .A1(n1321), .B0(n792), .B1(n955), .Y(n648) );
  OAI22XL U1188 ( .A0(n968), .A1(n1320), .B0(n793), .B1(n955), .Y(n647) );
  OAI22XL U1189 ( .A0(n968), .A1(n1319), .B0(n794), .B1(n955), .Y(n646) );
  OAI22XL U1190 ( .A0(n968), .A1(n1318), .B0(n795), .B1(n955), .Y(n645) );
  OAI22XL U1191 ( .A0(n968), .A1(n1317), .B0(n796), .B1(n955), .Y(n644) );
  OAI22XL U1192 ( .A0(n968), .A1(n1316), .B0(n781), .B1(n1179), .Y(n643) );
  OAI22XL U1193 ( .A0(n968), .A1(n1315), .B0(n782), .B1(n1179), .Y(n642) );
  OAI22XL U1194 ( .A0(n968), .A1(n1314), .B0(n783), .B1(n1179), .Y(n641) );
  OAI22XL U1195 ( .A0(n968), .A1(n1313), .B0(n784), .B1(n1179), .Y(n640) );
  OAI22XL U1196 ( .A0(n968), .A1(n1312), .B0(n785), .B1(n1179), .Y(n639) );
  OAI22XL U1197 ( .A0(n968), .A1(n1311), .B0(n786), .B1(n1179), .Y(n638) );
  OAI22XL U1198 ( .A0(n968), .A1(n1310), .B0(n787), .B1(n1179), .Y(n637) );
  OAI22XL U1199 ( .A0(n968), .A1(n1309), .B0(n788), .B1(n1179), .Y(n636) );
  CLKINVX1 U1200 ( .A(n955), .Y(n1177) );
  OAI22XL U1201 ( .A0(n971), .A1(n1308), .B0(n797), .B1(n1180), .Y(n635) );
  OAI22XL U1202 ( .A0(n971), .A1(n1307), .B0(n798), .B1(n1180), .Y(n634) );
  OAI22XL U1203 ( .A0(n971), .A1(n1306), .B0(n799), .B1(n1180), .Y(n633) );
  OAI22XL U1204 ( .A0(n971), .A1(n1305), .B0(n800), .B1(n1180), .Y(n632) );
  OAI22XL U1205 ( .A0(n971), .A1(n1304), .B0(n801), .B1(n1180), .Y(n631) );
  OAI22XL U1206 ( .A0(n971), .A1(n1303), .B0(n802), .B1(n1180), .Y(n630) );
  OAI22XL U1207 ( .A0(n971), .A1(n1302), .B0(n803), .B1(n1180), .Y(n629) );
  OAI22XL U1208 ( .A0(n971), .A1(n1301), .B0(n804), .B1(n1180), .Y(n628) );
  NAND3X1 U1209 ( .A(n1119), .B(N542), .C(N543), .Y(n1122) );
  OAI22XL U1210 ( .A0(n970), .A1(n1300), .B0(n773), .B1(n957), .Y(n627) );
  OAI22XL U1211 ( .A0(n971), .A1(n1299), .B0(n774), .B1(n957), .Y(n626) );
  OAI22XL U1212 ( .A0(n971), .A1(n1298), .B0(n775), .B1(n957), .Y(n625) );
  OAI22XL U1213 ( .A0(n971), .A1(n1297), .B0(n776), .B1(n957), .Y(n624) );
  OAI22XL U1214 ( .A0(n766), .A1(n1296), .B0(n777), .B1(n957), .Y(n623) );
  OAI22XL U1215 ( .A0(n766), .A1(n1295), .B0(n778), .B1(n957), .Y(n622) );
  OAI22XL U1216 ( .A0(n766), .A1(n1294), .B0(n779), .B1(n957), .Y(n621) );
  OAI22XL U1217 ( .A0(n766), .A1(n1293), .B0(n780), .B1(n957), .Y(n620) );
  OAI22XL U1218 ( .A0(n766), .A1(n1292), .B0(n789), .B1(n957), .Y(n619) );
  OAI22XL U1219 ( .A0(n766), .A1(n1291), .B0(n790), .B1(n957), .Y(n618) );
  OAI22XL U1220 ( .A0(n971), .A1(n1290), .B0(n791), .B1(n957), .Y(n617) );
  OAI22XL U1221 ( .A0(n971), .A1(n1289), .B0(n792), .B1(n957), .Y(n616) );
  OAI22XL U1222 ( .A0(n970), .A1(n1288), .B0(n793), .B1(n957), .Y(n615) );
  OAI22XL U1223 ( .A0(n970), .A1(n1287), .B0(n794), .B1(n957), .Y(n614) );
  OAI22XL U1224 ( .A0(n970), .A1(n1286), .B0(n795), .B1(n957), .Y(n613) );
  OAI22XL U1225 ( .A0(n970), .A1(n1285), .B0(n796), .B1(n957), .Y(n612) );
  OAI22XL U1226 ( .A0(n970), .A1(n1284), .B0(n781), .B1(n1183), .Y(n611) );
  OAI22XL U1227 ( .A0(n970), .A1(n1283), .B0(n782), .B1(n1183), .Y(n610) );
  OAI22XL U1228 ( .A0(n970), .A1(n1282), .B0(n783), .B1(n1183), .Y(n609) );
  OAI22XL U1229 ( .A0(n970), .A1(n1281), .B0(n784), .B1(n1183), .Y(n608) );
  OAI22XL U1230 ( .A0(n970), .A1(n1280), .B0(n785), .B1(n1183), .Y(n607) );
  OAI22XL U1231 ( .A0(n970), .A1(n1279), .B0(n786), .B1(n1183), .Y(n606) );
  OAI22XL U1232 ( .A0(n970), .A1(n1278), .B0(n787), .B1(n1183), .Y(n605) );
  OAI22XL U1233 ( .A0(n970), .A1(n1277), .B0(n788), .B1(n1183), .Y(n604) );
  NAND2X1 U1234 ( .A(n1151), .B(n1127), .Y(n1152) );
  CLKINVX1 U1235 ( .A(n1121), .Y(n1151) );
  CLKINVX1 U1236 ( .A(n957), .Y(n1181) );
  NAND2X1 U1237 ( .A(n1159), .B(n1095), .Y(n1160) );
  NOR2X1 U1238 ( .A(conv_row_3__0_), .B(n961), .Y(n1159) );
  CLKINVX1 U1239 ( .A(n1184), .Y(n1170) );
  OAI2BB2XL U1240 ( .B0(n973), .B1(n1276), .A0N(N2268), .A1N(n974), .Y(n603)
         );
  OAI2BB2XL U1241 ( .B0(n973), .B1(n1275), .A0N(N2267), .A1N(n974), .Y(n602)
         );
  OAI2BB2XL U1242 ( .B0(n972), .B1(n1274), .A0N(N2266), .A1N(n974), .Y(n601)
         );
  OAI2BB2XL U1243 ( .B0(n972), .B1(n1273), .A0N(N2265), .A1N(n974), .Y(n600)
         );
  OAI2BB2XL U1244 ( .B0(n973), .B1(n1272), .A0N(N2264), .A1N(n974), .Y(n599)
         );
  OAI2BB2XL U1245 ( .B0(n973), .B1(n1271), .A0N(N2263), .A1N(n974), .Y(n598)
         );
  OAI2BB2XL U1246 ( .B0(n973), .B1(n1270), .A0N(N2262), .A1N(n974), .Y(n597)
         );
  OAI2BB2XL U1247 ( .B0(n1185), .B1(n1269), .A0N(N2261), .A1N(n974), .Y(n596)
         );
  OAI2BB2XL U1248 ( .B0(n1185), .B1(n1268), .A0N(N2260), .A1N(n974), .Y(n5950)
         );
  OAI2BB2XL U1249 ( .B0(n1185), .B1(n1267), .A0N(N2259), .A1N(n974), .Y(n5940)
         );
  OAI2BB2XL U1250 ( .B0(n1185), .B1(n1266), .A0N(N2258), .A1N(n974), .Y(n5930)
         );
  OAI2BB2XL U1251 ( .B0(n1185), .B1(n1265), .A0N(N2257), .A1N(n975), .Y(n5920)
         );
  OAI2BB2XL U1252 ( .B0(n973), .B1(n1264), .A0N(N2256), .A1N(n975), .Y(n5910)
         );
  OAI2BB2XL U1253 ( .B0(n973), .B1(n1263), .A0N(N2255), .A1N(n975), .Y(n5900)
         );
  OAI2BB2XL U1254 ( .B0(n973), .B1(n1262), .A0N(N2254), .A1N(n1186), .Y(n5890)
         );
  OAI2BB2XL U1255 ( .B0(n973), .B1(n1261), .A0N(N2253), .A1N(n975), .Y(n5880)
         );
  OAI2BB2XL U1256 ( .B0(n973), .B1(n1260), .A0N(N2252), .A1N(n975), .Y(n5870)
         );
  OAI2BB2XL U1257 ( .B0(n973), .B1(n1259), .A0N(N2157), .A1N(n975), .Y(n5860)
         );
  OAI2BB2XL U1258 ( .B0(n973), .B1(n1258), .A0N(N2156), .A1N(n975), .Y(n5850)
         );
  OAI2BB2XL U1259 ( .B0(n973), .B1(n1257), .A0N(N2155), .A1N(n975), .Y(n584)
         );
  OAI2BB2XL U1260 ( .B0(n973), .B1(n1256), .A0N(N2154), .A1N(n975), .Y(n583)
         );
  OAI2BB2XL U1261 ( .B0(n973), .B1(n1255), .A0N(N2153), .A1N(n975), .Y(n582)
         );
  OAI2BB2XL U1262 ( .B0(n973), .B1(n1254), .A0N(N2152), .A1N(n974), .Y(n581)
         );
  OAI2BB2XL U1263 ( .B0(n1185), .B1(n1253), .A0N(N2151), .A1N(n974), .Y(n580)
         );
  OAI2BB2XL U1264 ( .B0(n972), .B1(n1252), .A0N(N2150), .A1N(n974), .Y(n579)
         );
  OAI2BB2XL U1265 ( .B0(n972), .B1(n1251), .A0N(N2149), .A1N(n974), .Y(n578)
         );
  OAI2BB2XL U1266 ( .B0(n972), .B1(n1250), .A0N(N2148), .A1N(n975), .Y(n577)
         );
  OAI2BB2XL U1267 ( .B0(n972), .B1(n1249), .A0N(N2147), .A1N(n975), .Y(n576)
         );
  OAI2BB2XL U1268 ( .B0(n972), .B1(n1248), .A0N(N2146), .A1N(n975), .Y(n575)
         );
  OAI2BB2XL U1269 ( .B0(n972), .B1(n1247), .A0N(N2145), .A1N(n975), .Y(n574)
         );
  OAI2BB2XL U1270 ( .B0(n972), .B1(n1246), .A0N(N2144), .A1N(n1186), .Y(n573)
         );
  OAI2BB2XL U1271 ( .B0(n972), .B1(n1245), .A0N(N2143), .A1N(n1186), .Y(n572)
         );
  OAI2BB2XL U1272 ( .B0(n972), .B1(n1244), .A0N(N2142), .A1N(n1186), .Y(n571)
         );
  OAI2BB2XL U1273 ( .B0(n972), .B1(n1243), .A0N(N2141), .A1N(n1186), .Y(n570)
         );
  NOR2BX1 U1274 ( .AN(n972), .B(n962), .Y(n1186) );
  AO21X1 U1275 ( .A0(n1187), .A1(n1113), .B0(n1055), .Y(n1185) );
  OAI2BB2XL U1276 ( .B0(n964), .B1(n1242), .A0N(N2045), .A1N(n977), .Y(n569)
         );
  OAI2BB2XL U1277 ( .B0(n964), .B1(n1241), .A0N(N2044), .A1N(n976), .Y(n568)
         );
  OAI2BB2XL U1278 ( .B0(n964), .B1(n1240), .A0N(N2043), .A1N(n977), .Y(n567)
         );
  OAI2BB2XL U1279 ( .B0(n964), .B1(n1239), .A0N(N2042), .A1N(n977), .Y(n566)
         );
  OAI2BB2XL U1280 ( .B0(n964), .B1(n1238), .A0N(N2041), .A1N(n769), .Y(n565)
         );
  OAI2BB2XL U1281 ( .B0(n964), .B1(n1237), .A0N(N2040), .A1N(n977), .Y(n564)
         );
  OAI2BB2XL U1282 ( .B0(n965), .B1(n1236), .A0N(N2039), .A1N(n769), .Y(n563)
         );
  OAI2BB2XL U1283 ( .B0(n965), .B1(n1235), .A0N(N2038), .A1N(n769), .Y(n562)
         );
  OAI2BB2XL U1284 ( .B0(n965), .B1(n1234), .A0N(N2037), .A1N(n769), .Y(n561)
         );
  OAI2BB2XL U1285 ( .B0(n965), .B1(n1233), .A0N(N2036), .A1N(n769), .Y(n560)
         );
  OAI2BB2XL U1286 ( .B0(n965), .B1(n1232), .A0N(N2035), .A1N(n976), .Y(n559)
         );
  OAI2BB2XL U1287 ( .B0(n965), .B1(n1231), .A0N(N2034), .A1N(n976), .Y(n558)
         );
  OAI2BB2XL U1288 ( .B0(n965), .B1(n1230), .A0N(N2033), .A1N(n976), .Y(n557)
         );
  OAI2BB2XL U1289 ( .B0(n965), .B1(n1229), .A0N(N2032), .A1N(n976), .Y(n556)
         );
  OAI2BB2XL U1290 ( .B0(n965), .B1(n1228), .A0N(N2031), .A1N(n976), .Y(n555)
         );
  OAI2BB2XL U1291 ( .B0(n965), .B1(n1227), .A0N(N2030), .A1N(n976), .Y(n554)
         );
  OAI2BB2XL U1292 ( .B0(n965), .B1(n1226), .A0N(N2029), .A1N(n976), .Y(n553)
         );
  OAI2BB2XL U1293 ( .B0(n965), .B1(n1225), .A0N(N1934), .A1N(n976), .Y(n552)
         );
  OAI2BB2XL U1294 ( .B0(n965), .B1(n1224), .A0N(N1933), .A1N(n976), .Y(n5510)
         );
  OAI2BB2XL U1295 ( .B0(n965), .B1(n1223), .A0N(N1932), .A1N(n976), .Y(n5500)
         );
  OAI2BB2XL U1296 ( .B0(n962), .B1(n1222), .A0N(N1931), .A1N(n976), .Y(n5490)
         );
  OAI2BB2XL U1297 ( .B0(n1165), .B1(n1221), .A0N(N1930), .A1N(n976), .Y(n5480)
         );
  OAI2BB2XL U1298 ( .B0(n962), .B1(n1220), .A0N(N1929), .A1N(n977), .Y(n5470)
         );
  OAI2BB2XL U1299 ( .B0(n1165), .B1(n1219), .A0N(N1928), .A1N(n976), .Y(n5460)
         );
  OAI2BB2XL U1300 ( .B0(n962), .B1(n1218), .A0N(N1927), .A1N(n977), .Y(n5450)
         );
  OAI2BB2XL U1301 ( .B0(n1165), .B1(n1217), .A0N(N1926), .A1N(n977), .Y(n5440)
         );
  OAI2BB2XL U1302 ( .B0(n1165), .B1(n1216), .A0N(N1925), .A1N(n977), .Y(n5430)
         );
  OAI2BB2XL U1303 ( .B0(n964), .B1(n1215), .A0N(N1924), .A1N(n977), .Y(n5420)
         );
  OAI2BB2XL U1304 ( .B0(n1165), .B1(n1214), .A0N(N1923), .A1N(n977), .Y(n5410)
         );
  OAI2BB2XL U1305 ( .B0(n963), .B1(n1213), .A0N(N1922), .A1N(n977), .Y(n540)
         );
  OAI2BB2XL U1306 ( .B0(n1165), .B1(n1212), .A0N(N1921), .A1N(n977), .Y(n539)
         );
  OAI2BB2XL U1307 ( .B0(n965), .B1(n1211), .A0N(N1920), .A1N(n977), .Y(n538)
         );
  OAI2BB2XL U1308 ( .B0(n964), .B1(n1210), .A0N(N1919), .A1N(n977), .Y(n537)
         );
  OAI2BB2XL U1309 ( .B0(n964), .B1(n1209), .A0N(N1918), .A1N(n977), .Y(n536)
         );
  CLKINVX1 U1310 ( .A(n1188), .Y(n1165) );
  OAI21XL U1311 ( .A0(n1055), .A1(n1099), .B0(n1175), .Y(n1188) );
  NAND2X1 U1312 ( .A(n1184), .B(n1146), .Y(n1175) );
  OAI21XL U1313 ( .A0(n1105), .A1(n1187), .B0(n1117), .Y(n1184) );
  NAND4X1 U1314 ( .A(n476), .B(n477), .C(n475), .D(n1189), .Y(n1187) );
  NOR3X1 U1315 ( .A(counter_256[7]), .B(n808), .C(counter_256[6]), .Y(n1189)
         );
  CLKINVX1 U1316 ( .A(n1105), .Y(n1099) );
  NAND2X1 U1317 ( .A(n299), .B(n304), .Y(n1105) );
  OAI2BB2XL U1318 ( .B0(n978), .B1(n397), .A0N(N2422), .A1N(n981), .Y(n535) );
  OAI2BB2XL U1319 ( .B0(n978), .B1(n398), .A0N(N2421), .A1N(n982), .Y(n534) );
  OAI2BB2XL U1320 ( .B0(n978), .B1(n399), .A0N(N2420), .A1N(n982), .Y(n533) );
  OAI2BB2XL U1321 ( .B0(n978), .B1(n400), .A0N(N2419), .A1N(n982), .Y(n532) );
  OAI2BB2XL U1322 ( .B0(n978), .B1(n401), .A0N(N2418), .A1N(n982), .Y(n531) );
  OAI2BB2XL U1323 ( .B0(n978), .B1(n402), .A0N(N2417), .A1N(n982), .Y(n530) );
  OAI2BB2XL U1324 ( .B0(n978), .B1(n403), .A0N(N2416), .A1N(n982), .Y(n529) );
  OAI2BB2XL U1325 ( .B0(n978), .B1(n404), .A0N(N2415), .A1N(n982), .Y(n528) );
  OAI2BB2XL U1326 ( .B0(n978), .B1(n405), .A0N(N2414), .A1N(n982), .Y(n527) );
  OAI2BB2XL U1327 ( .B0(n978), .B1(n406), .A0N(N2413), .A1N(n982), .Y(n526) );
  OAI2BB2XL U1328 ( .B0(n978), .B1(n407), .A0N(N2412), .A1N(n982), .Y(n525) );
  OAI2BB2XL U1329 ( .B0(n978), .B1(n408), .A0N(N2411), .A1N(n982), .Y(n524) );
  OAI2BB2XL U1330 ( .B0(n978), .B1(n409), .A0N(N2410), .A1N(n982), .Y(n523) );
  OAI2BB2XL U1331 ( .B0(n978), .B1(n4100), .A0N(N2409), .A1N(n982), .Y(n522)
         );
  OAI2BB2XL U1332 ( .B0(n978), .B1(n4110), .A0N(N2408), .A1N(n981), .Y(n521)
         );
  OAI2BB2XL U1333 ( .B0(n978), .B1(n4120), .A0N(N2407), .A1N(n981), .Y(n520)
         );
  OAI2BB2XL U1334 ( .B0(n772), .B1(n4130), .A0N(N2406), .A1N(n981), .Y(n519)
         );
  OAI2BB2XL U1335 ( .B0(n772), .B1(n4140), .A0N(N2405), .A1N(n981), .Y(n518)
         );
  OAI2BB2XL U1336 ( .B0(n772), .B1(n4150), .A0N(N2404), .A1N(n981), .Y(n517)
         );
  OAI2BB2XL U1337 ( .B0(n772), .B1(n4160), .A0N(N2403), .A1N(n981), .Y(n516)
         );
  OAI2BB2XL U1338 ( .B0(n772), .B1(n4170), .A0N(N2402), .A1N(n982), .Y(n515)
         );
  OAI2BB2XL U1339 ( .B0(n772), .B1(n4180), .A0N(N2401), .A1N(n981), .Y(n514)
         );
  OAI2BB2XL U1340 ( .B0(n978), .B1(n4190), .A0N(N2400), .A1N(n981), .Y(n513)
         );
  OAI2BB2XL U1341 ( .B0(n978), .B1(n4200), .A0N(N2399), .A1N(n981), .Y(n512)
         );
  OAI2BB2XL U1342 ( .B0(n978), .B1(n421), .A0N(N2398), .A1N(n981), .Y(n511) );
  OAI2BB2XL U1343 ( .B0(n978), .B1(n422), .A0N(N2397), .A1N(n981), .Y(n510) );
  OAI2BB2XL U1344 ( .B0(n979), .B1(n423), .A0N(N2395), .A1N(n980), .Y(n509) );
  OAI2BB2XL U1345 ( .B0(n979), .B1(n424), .A0N(N2394), .A1N(n980), .Y(n508) );
  OAI2BB2XL U1346 ( .B0(n979), .B1(n425), .A0N(N2393), .A1N(n980), .Y(n5070)
         );
  OAI2BB2XL U1347 ( .B0(n979), .B1(n426), .A0N(N2392), .A1N(n980), .Y(n5060)
         );
  OAI2BB2XL U1348 ( .B0(n770), .B1(n427), .A0N(N2391), .A1N(n1190), .Y(n5050)
         );
  OAI2BB2XL U1349 ( .B0(n770), .B1(n428), .A0N(N2390), .A1N(n1190), .Y(n5040)
         );
  OAI2BB2XL U1350 ( .B0(n770), .B1(n429), .A0N(N2389), .A1N(n1190), .Y(n5030)
         );
  OAI2BB2XL U1351 ( .B0(n770), .B1(n430), .A0N(N2388), .A1N(n1190), .Y(n5020)
         );
  OAI2BB2XL U1352 ( .B0(n770), .B1(n431), .A0N(N2387), .A1N(n1190), .Y(n5010)
         );
  OAI2BB2XL U1353 ( .B0(n770), .B1(n432), .A0N(N2386), .A1N(n1190), .Y(n5000)
         );
  OAI2BB2XL U1354 ( .B0(n979), .B1(n433), .A0N(N2385), .A1N(n980), .Y(n4990)
         );
  OAI2BB2XL U1355 ( .B0(n979), .B1(n434), .A0N(N2384), .A1N(n980), .Y(n4980)
         );
  OAI2BB2XL U1356 ( .B0(n979), .B1(n435), .A0N(N2383), .A1N(n980), .Y(n4970)
         );
  OAI2BB2XL U1357 ( .B0(n979), .B1(n4360), .A0N(N2382), .A1N(n980), .Y(n496)
         );
  OAI2BB2XL U1358 ( .B0(n979), .B1(n4370), .A0N(N2381), .A1N(n980), .Y(n495)
         );
  OAI2BB2XL U1359 ( .B0(n979), .B1(n4380), .A0N(N2380), .A1N(n980), .Y(n494)
         );
  OAI2BB2XL U1360 ( .B0(n979), .B1(n4390), .A0N(N2379), .A1N(n980), .Y(n493)
         );
  OAI2BB2XL U1361 ( .B0(n979), .B1(n4400), .A0N(N2378), .A1N(n980), .Y(n492)
         );
  OAI2BB2XL U1362 ( .B0(n979), .B1(n4410), .A0N(N2377), .A1N(n980), .Y(n491)
         );
  OAI2BB2XL U1363 ( .B0(n979), .B1(n4420), .A0N(N2376), .A1N(n980), .Y(n490)
         );
  OAI2BB2XL U1364 ( .B0(n979), .B1(n4430), .A0N(N2375), .A1N(n980), .Y(n489)
         );
  OAI2BB2XL U1365 ( .B0(n979), .B1(n444), .A0N(N2374), .A1N(n980), .Y(n488) );
  OAI2BB2XL U1366 ( .B0(n979), .B1(n445), .A0N(N2373), .A1N(n980), .Y(n487) );
  OAI2BB2XL U1367 ( .B0(n979), .B1(n446), .A0N(N2372), .A1N(n980), .Y(n486) );
  OAI2BB2XL U1368 ( .B0(n979), .B1(n447), .A0N(N2371), .A1N(n980), .Y(n485) );
  OAI2BB2XL U1369 ( .B0(n979), .B1(n448), .A0N(N2370), .A1N(n980), .Y(n484) );
  CLKINVX1 U1370 ( .A(n1191), .Y(n1190) );
  NAND4X1 U1371 ( .A(n1192), .B(n1193), .C(n1113), .D(n1194), .Y(n1191) );
  NOR4X1 U1372 ( .A(counter_256[2]), .B(n1195), .C(counter_256[4]), .D(n1196), 
        .Y(n1194) );
  XOR2X1 U1373 ( .A(counter_256[7]), .B(N318), .Y(n1196) );
  NOR2X1 U1374 ( .A(n1068), .B(n1064), .Y(n1117) );
  XOR2X1 U1375 ( .A(n474), .B(N316), .Y(n1193) );
  XOR2X1 U1376 ( .A(n473), .B(N317), .Y(n1192) );
  CLKINVX1 U1377 ( .A(n1054), .Y(n1130) );
  CLKINVX1 U1378 ( .A(n1083), .Y(n461) );
  MXI2X1 U1379 ( .A(n453), .B(n1198), .S0(n1405), .Y(n460) );
  MXI2X1 U1380 ( .A(n454), .B(n1197), .S0(n1405), .Y(n459) );
  MXI2X1 U1381 ( .A(n455), .B(n1144), .S0(n1405), .Y(n458) );
  MXI2X1 U1382 ( .A(n456), .B(n1142), .S0(n1405), .Y(n457) );
  NAND2X1 U1383 ( .A(n390), .B(n771), .Y(N2498) );
  NAND2X1 U1384 ( .A(n389), .B(n771), .Y(N2497) );
  NAND2X1 U1385 ( .A(n388), .B(n771), .Y(N2496) );
  NAND4X1 U1386 ( .A(n1199), .B(n1200), .C(n1201), .D(n1202), .Y(n1048) );
  NOR4X1 U1387 ( .A(counter_256[2]), .B(counter_256[3]), .C(n1203), .D(n1204), 
        .Y(n1202) );
  XOR2X1 U1388 ( .A(n808), .B(N316), .Y(n1204) );
  NOR2X1 U1389 ( .A(n1064), .B(n1106), .Y(n1201) );
  NAND2BX1 U1390 ( .AN(n299), .B(n304), .Y(n1106) );
  NAND3X1 U1391 ( .A(op[0]), .B(n1138), .C(op[1]), .Y(n1064) );
  NOR2X1 U1392 ( .A(n1197), .B(op[3]), .Y(n1138) );
  XOR2X1 U1393 ( .A(n473), .B(N317), .Y(n1200) );
  XOR2X1 U1394 ( .A(n451), .B(N318), .Y(n1199) );
  NAND3X1 U1395 ( .A(n1054), .B(n1024), .C(state[3]), .Y(n1068) );
  XOR2X1 U1396 ( .A(n1205), .B(n945), .Y(N2483) );
  NAND2BX1 U1397 ( .AN(n946), .B(n1406), .Y(n1205) );
  XOR2X1 U1398 ( .A(n946), .B(n1131), .Y(N2482) );
  NAND2X1 U1399 ( .A(n851), .B(n1119), .Y(n1121) );
  CLKINVX1 U1400 ( .A(n960), .Y(n1119) );
endmodule


module core_DW01_add_30_DW01_add_33 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] , \A[0] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:0] A;
  wire   [11:2] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[15]), .B(n4), .Y(n1) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n2) );
  AND2X2 U3 ( .A(B[12]), .B(n5), .Y(n3) );
  AND2X2 U4 ( .A(B[14]), .B(n6), .Y(n4) );
  AND2X2 U5 ( .A(B[11]), .B(carry[11]), .Y(n5) );
  AND2X2 U6 ( .A(B[13]), .B(n3), .Y(n6) );
  XOR2X1 U7 ( .A(B[12]), .B(n5), .Y(SUM[12]) );
  XOR2X1 U8 ( .A(B[13]), .B(n3), .Y(SUM[13]) );
  XOR2X1 U9 ( .A(B[14]), .B(n6), .Y(SUM[14]) );
  XOR2X1 U10 ( .A(B[15]), .B(n4), .Y(SUM[15]) );
  XOR2X1 U11 ( .A(B[16]), .B(n1), .Y(SUM[16]) );
  XOR2X1 U12 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U13 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
endmodule


module core_DW01_add_32_DW01_add_35 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_33_DW01_add_36 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_34_DW01_add_37 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_35_DW01_add_38 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:1] A;
  wire   [11:3] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;

  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(n1), .CO(carry[3]), .S(SUM[2]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[1]), .B(A[1]), .Y(n1) );
  XOR2X1 U2 ( .A(B[16]), .B(n6), .Y(SUM[16]) );
  XOR2X1 U3 ( .A(B[15]), .B(n3), .Y(SUM[15]) );
  AND2X2 U4 ( .A(B[12]), .B(n4), .Y(n2) );
  AND2X2 U5 ( .A(B[14]), .B(n5), .Y(n3) );
  AND2X2 U6 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U7 ( .A(B[13]), .B(n2), .Y(n5) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n2), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n5), .Y(SUM[14]) );
  XOR2X1 U12 ( .A(B[1]), .B(A[1]), .Y(SUM[1]) );
  AND2X2 U13 ( .A(B[15]), .B(n3), .Y(n6) );
  CLKBUFX3 U14 ( .A(B[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_36_DW01_add_39 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_37_DW01_add_40 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_4_DW01_add_7 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] , \A[0] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:0] A;
  wire   [11:2] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[15]), .B(n4), .Y(n1) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n2) );
  AND2X2 U3 ( .A(B[12]), .B(n5), .Y(n3) );
  AND2X2 U4 ( .A(B[14]), .B(n6), .Y(n4) );
  AND2X2 U5 ( .A(B[11]), .B(carry[11]), .Y(n5) );
  AND2X2 U6 ( .A(B[13]), .B(n3), .Y(n6) );
  XOR2X1 U7 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n5), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n3), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n6), .Y(SUM[14]) );
  XOR2X1 U12 ( .A(B[15]), .B(n4), .Y(SUM[15]) );
  XOR2X1 U13 ( .A(B[16]), .B(n1), .Y(SUM[16]) );
endmodule


module core_DW01_add_6_DW01_add_9 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_7_DW01_add_10 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_8_DW01_add_11 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_9_DW01_add_12 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:1] A;
  wire   [11:3] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;

  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(n1), .CO(carry[3]), .S(SUM[2]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[1]), .B(A[1]), .Y(n1) );
  XOR2X1 U2 ( .A(B[16]), .B(n6), .Y(SUM[16]) );
  XOR2X1 U3 ( .A(B[15]), .B(n3), .Y(SUM[15]) );
  AND2X2 U4 ( .A(B[12]), .B(n4), .Y(n2) );
  AND2X2 U5 ( .A(B[14]), .B(n5), .Y(n3) );
  AND2X2 U6 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U7 ( .A(B[13]), .B(n2), .Y(n5) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n2), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n5), .Y(SUM[14]) );
  AND2X2 U12 ( .A(B[15]), .B(n3), .Y(n6) );
  XOR2X1 U13 ( .A(B[1]), .B(A[1]), .Y(SUM[1]) );
  CLKBUFX3 U14 ( .A(B[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_10_DW01_add_13 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_11_DW01_add_14 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_12_DW01_add_15 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_13_DW01_add_16 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] , \A[0] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:0] A;
  wire   [11:2] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[15]), .B(n6), .Y(n1) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n2) );
  AND2X2 U3 ( .A(B[13]), .B(n5), .Y(n3) );
  AND2X2 U4 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U5 ( .A(B[12]), .B(n4), .Y(n5) );
  AND2X2 U6 ( .A(B[14]), .B(n3), .Y(n6) );
  XOR2X1 U7 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U8 ( .A(B[13]), .B(n5), .Y(SUM[13]) );
  XOR2X1 U9 ( .A(B[14]), .B(n3), .Y(SUM[14]) );
  XOR2X1 U10 ( .A(B[15]), .B(n6), .Y(SUM[15]) );
  XOR2X1 U11 ( .A(B[16]), .B(n1), .Y(SUM[16]) );
  XOR2X1 U12 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U13 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
endmodule


module core_DW01_add_15_DW01_add_18 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_16_DW01_add_19 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_17_DW01_add_20 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_18_DW01_add_21 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:1] A;
  wire   [11:3] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;

  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(n1), .CO(carry[3]), .S(SUM[2]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[1]), .B(A[1]), .Y(n1) );
  XOR2X1 U2 ( .A(B[16]), .B(n6), .Y(SUM[16]) );
  XOR2X1 U3 ( .A(B[15]), .B(n3), .Y(SUM[15]) );
  AND2X2 U4 ( .A(B[12]), .B(n4), .Y(n2) );
  AND2X2 U5 ( .A(B[14]), .B(n5), .Y(n3) );
  AND2X2 U6 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U7 ( .A(B[13]), .B(n2), .Y(n5) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n2), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n5), .Y(SUM[14]) );
  AND2X2 U12 ( .A(B[15]), .B(n3), .Y(n6) );
  XOR2X1 U13 ( .A(B[1]), .B(A[1]), .Y(SUM[1]) );
  CLKBUFX3 U14 ( .A(B[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_19_DW01_add_22 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_20_DW01_add_23 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_21_DW01_add_24 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_22_DW01_add_25 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] , \A[0] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:0] A;
  wire   [11:2] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[15]), .B(n6), .Y(n1) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n2) );
  AND2X2 U3 ( .A(B[13]), .B(n5), .Y(n3) );
  AND2X2 U4 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U5 ( .A(B[12]), .B(n4), .Y(n5) );
  AND2X2 U6 ( .A(B[14]), .B(n3), .Y(n6) );
  XOR2X1 U7 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n5), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n3), .Y(SUM[14]) );
  XOR2X1 U12 ( .A(B[15]), .B(n6), .Y(SUM[15]) );
  XOR2X1 U13 ( .A(B[16]), .B(n1), .Y(SUM[16]) );
endmodule


module core_DW01_add_24_DW01_add_27 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_25_DW01_add_28 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_26_DW01_add_29 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_27_DW01_add_30 ( B, SUM, \A[10] , \A[9] , \A[8] , \A[7] , 
        \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1]  );
  input [16:0] B;
  output [16:0] SUM;
  input \A[10] , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] ,
         \A[2] , \A[1] ;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [10:1] A;
  wire   [11:3] carry;
  assign A[10] = \A[10] ;
  assign A[9] = \A[9] ;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;

  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(n1), .CO(carry[3]), .S(SUM[2]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[1]), .B(A[1]), .Y(n1) );
  XOR2X1 U2 ( .A(B[16]), .B(n6), .Y(SUM[16]) );
  XOR2X1 U3 ( .A(B[15]), .B(n3), .Y(SUM[15]) );
  AND2X2 U4 ( .A(B[12]), .B(n4), .Y(n2) );
  AND2X2 U5 ( .A(B[14]), .B(n5), .Y(n3) );
  AND2X2 U6 ( .A(B[11]), .B(carry[11]), .Y(n4) );
  AND2X2 U7 ( .A(B[13]), .B(n2), .Y(n5) );
  XOR2X1 U8 ( .A(B[11]), .B(carry[11]), .Y(SUM[11]) );
  XOR2X1 U9 ( .A(B[12]), .B(n4), .Y(SUM[12]) );
  XOR2X1 U10 ( .A(B[13]), .B(n2), .Y(SUM[13]) );
  XOR2X1 U11 ( .A(B[14]), .B(n5), .Y(SUM[14]) );
  AND2X2 U12 ( .A(B[15]), .B(n3), .Y(n6) );
  XOR2X1 U13 ( .A(B[1]), .B(A[1]), .Y(SUM[1]) );
  CLKBUFX3 U14 ( .A(B[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_28_DW01_add_31 ( \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , 
        \A[3] , \A[2] , \A[1] , \A[0] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , 
        \B[3] , \B[2] , \B[1] , \B[0] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , 
        \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] ,
         \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
         \B[0] ;
  output \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] ,
         \SUM[2] , \SUM[1] , \SUM[0] ;
  wire   carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_, carry_2_,
         n1;
  wire   [8:0] A;
  wire   [8:0] B;
  wire   [9:0] SUM;
  assign A[8] = \A[8] ;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[8] = \B[8] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(SUM[9]), .S(SUM[8]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry_2_), .S(SUM[1]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_29_DW01_add_32 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_inc_7_DW01_inc_9 ( A, SUM );
  input [10:0] A;
  output [10:0] SUM;

  wire   [10:2] carry;

  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  XOR2X1 U1 ( .A(carry[10]), .B(A[10]), .Y(SUM[10]) );
  CLKINVX1 U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_add_0_DW01_add_3 ( \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , 
        \A[2] , \A[1] , \A[0] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , 
        \B[1] , \B[0] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1] , \SUM[0]  );
  input \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] , \A[0] , \B[7] ,
         \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] , \B[0] ;
  output \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] ,
         \SUM[1] , \SUM[0] ;
  wire   n1;
  wire   [7:0] A;
  wire   [7:0] B;
  wire   [8:0] SUM;
  wire   [7:2] carry;
  assign A[7] = \A[7] ;
  assign A[6] = \A[6] ;
  assign A[5] = \A[5] ;
  assign A[4] = \A[4] ;
  assign A[3] = \A[3] ;
  assign A[2] = \A[2] ;
  assign A[1] = \A[1] ;
  assign A[0] = \A[0] ;
  assign B[7] = \B[7] ;
  assign B[6] = \B[6] ;
  assign B[5] = \B[5] ;
  assign B[4] = \B[4] ;
  assign B[3] = \B[3] ;
  assign B[2] = \B[2] ;
  assign B[1] = \B[1] ;
  assign B[0] = \B[0] ;
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];
  assign \SUM[0]  = SUM[0];

  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(SUM[8]), .S(SUM[7]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_inc_6_DW01_inc_8 ( A, SUM );
  input [10:0] A;
  output [10:0] SUM;

  wire   [10:2] carry;

  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(carry[10]), .B(A[10]), .Y(SUM[10]) );
  CLKINVX1 U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_inc_5_DW01_inc_7 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;

  wire   [7:2] carry;

  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  XOR2X1 U1 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
  CLKINVX1 U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module core_DW01_inc_3_DW01_inc_5 ( A, \SUM[13] , \SUM[12] , \SUM[11] , 
        \SUM[10] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1]  );
  input [13:0] A;
  output \SUM[13] , \SUM[12] , \SUM[11] , \SUM[10] , \SUM[9] , \SUM[8] ,
         \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] ;

  wire   [13:1] SUM;
  wire   [13:2] carry;
  assign \SUM[13]  = SUM[13];
  assign \SUM[12]  = SUM[12];
  assign \SUM[11]  = SUM[11];
  assign \SUM[10]  = SUM[10];
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];

  ADDHXL U1_1_12 ( .A(A[12]), .B(carry[12]), .CO(carry[13]), .S(SUM[12]) );
  ADDHXL U1_1_11 ( .A(A[11]), .B(carry[11]), .CO(carry[12]), .S(SUM[11]) );
  ADDHXL U1_1_10 ( .A(A[10]), .B(carry[10]), .CO(carry[11]), .S(SUM[10]) );
  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(carry[13]), .B(A[13]), .Y(SUM[13]) );
endmodule


module core_DW01_inc_2_DW01_inc_4 ( A, \SUM[13] , \SUM[12] , \SUM[11] , 
        \SUM[10] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1]  );
  input [13:0] A;
  output \SUM[13] , \SUM[12] , \SUM[11] , \SUM[10] , \SUM[9] , \SUM[8] ,
         \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] ;

  wire   [13:1] SUM;
  wire   [13:2] carry;
  assign \SUM[13]  = SUM[13];
  assign \SUM[12]  = SUM[12];
  assign \SUM[11]  = SUM[11];
  assign \SUM[10]  = SUM[10];
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];

  ADDHXL U1_1_12 ( .A(A[12]), .B(carry[12]), .CO(carry[13]), .S(SUM[12]) );
  ADDHXL U1_1_11 ( .A(A[11]), .B(carry[11]), .CO(carry[12]), .S(SUM[11]) );
  ADDHXL U1_1_10 ( .A(A[10]), .B(carry[10]), .CO(carry[11]), .S(SUM[10]) );
  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(carry[13]), .B(A[13]), .Y(SUM[13]) );
endmodule


module core_DW01_inc_1_DW01_inc_3 ( A, \SUM[13] , \SUM[12] , \SUM[11] , 
        \SUM[10] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1]  );
  input [13:0] A;
  output \SUM[13] , \SUM[12] , \SUM[11] , \SUM[10] , \SUM[9] , \SUM[8] ,
         \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] ;

  wire   [13:1] SUM;
  wire   [13:2] carry;
  assign \SUM[13]  = SUM[13];
  assign \SUM[12]  = SUM[12];
  assign \SUM[11]  = SUM[11];
  assign \SUM[10]  = SUM[10];
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];

  ADDHXL U1_1_12 ( .A(A[12]), .B(carry[12]), .CO(carry[13]), .S(SUM[12]) );
  ADDHXL U1_1_11 ( .A(A[11]), .B(carry[11]), .CO(carry[12]), .S(SUM[11]) );
  ADDHXL U1_1_10 ( .A(A[10]), .B(carry[10]), .CO(carry[11]), .S(SUM[10]) );
  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(carry[13]), .B(A[13]), .Y(SUM[13]) );
endmodule


module core_DW01_inc_0_DW01_inc_2 ( A, \SUM[13] , \SUM[12] , \SUM[11] , 
        \SUM[10] , \SUM[9] , \SUM[8] , \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , 
        \SUM[3] , \SUM[2] , \SUM[1]  );
  input [13:0] A;
  output \SUM[13] , \SUM[12] , \SUM[11] , \SUM[10] , \SUM[9] , \SUM[8] ,
         \SUM[7] , \SUM[6] , \SUM[5] , \SUM[4] , \SUM[3] , \SUM[2] , \SUM[1] ;

  wire   [13:1] SUM;
  wire   [13:2] carry;
  assign \SUM[13]  = SUM[13];
  assign \SUM[12]  = SUM[12];
  assign \SUM[11]  = SUM[11];
  assign \SUM[10]  = SUM[10];
  assign \SUM[9]  = SUM[9];
  assign \SUM[8]  = SUM[8];
  assign \SUM[7]  = SUM[7];
  assign \SUM[6]  = SUM[6];
  assign \SUM[5]  = SUM[5];
  assign \SUM[4]  = SUM[4];
  assign \SUM[3]  = SUM[3];
  assign \SUM[2]  = SUM[2];
  assign \SUM[1]  = SUM[1];

  ADDHXL U1_1_12 ( .A(A[12]), .B(carry[12]), .CO(carry[13]), .S(SUM[12]) );
  ADDHXL U1_1_11 ( .A(A[11]), .B(carry[11]), .CO(carry[12]), .S(SUM[11]) );
  ADDHXL U1_1_10 ( .A(A[10]), .B(carry[10]), .CO(carry[11]), .S(SUM[10]) );
  ADDHXL U1_1_9 ( .A(A[9]), .B(carry[9]), .CO(carry[10]), .S(SUM[9]) );
  ADDHXL U1_1_8 ( .A(A[8]), .B(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  ADDHXL U1_1_7 ( .A(A[7]), .B(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(carry[13]), .B(A[13]), .Y(SUM[13]) );
endmodule

